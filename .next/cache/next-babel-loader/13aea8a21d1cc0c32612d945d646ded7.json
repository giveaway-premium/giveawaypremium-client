{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable react/display-name */\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport { withRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport { Form, Row, Col, Layout, Input, Button, Spin, Descriptions, Tabs, Table, Radio, Popconfirm } from 'antd';\nimport { images } from \"../../../../../../../config/images\";\nimport MyModal from \"../../../../../../Components/MyModal\";\nimport { showNotification, numberWithCommas } from \"../../../../../../../common/function\";\nimport { LoadingOutlined, SearchOutlined } from '@ant-design/icons';\nimport { Router } from \"../../../../../../../common/routes\";\nimport { isMobile } from 'react-device-detect';\nimport \"./style.scss\";\nimport Lottie from 'react-lottie';\nimport GapService from \"../../../../../../../controller/Api/Services/Gap\";\nimport { isEqual } from 'lodash';\nimport moment from 'moment';\nimport Highlighter from 'react-highlight-words';\n\nvar EditableRow = function EditableRow(_ref) {\n  var index = _ref.index,\n      props = _objectWithoutProperties(_ref, [\"index\"]);\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  return __jsx(Form, {\n    form: form,\n    component: false\n  }, __jsx(EditableContext.Provider, {\n    value: form\n  }, __jsx(\"tr\", props)));\n};\n\nvar EditableContext = /*#__PURE__*/React.createContext(null);\n\nvar EditableCell = function EditableCell(_ref2) {\n  var title = _ref2.title,\n      editable = _ref2.editable,\n      children = _ref2.children,\n      dataIndex = _ref2.dataIndex,\n      record = _ref2.record,\n      handleSave = _ref2.handleSave,\n      restProps = _objectWithoutProperties(_ref2, [\"title\", \"editable\", \"children\", \"dataIndex\", \"record\", \"handleSave\"]);\n\n  var _useState = useState(false),\n      editing = _useState[0],\n      setEditing = _useState[1];\n\n  var inputRef = useRef(null);\n  var form = useContext(EditableContext);\n  useEffect(function () {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  var toggleEdit = function toggleEdit() {\n    setEditing(!editing);\n    form.setFieldsValue(_defineProperty({}, dataIndex, record[dataIndex]));\n  };\n\n  var save = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var values;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return form.validateFields();\n\n            case 3:\n              values = _context.sent;\n              toggleEdit();\n              handleSave(_objectSpread({}, record, values));\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log('Save failed:', _context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function save() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var childNode = children;\n\n  if (editable) {\n    childNode = editing ? __jsx(Form.Item, {\n      style: {\n        margin: 0\n      },\n      name: dataIndex,\n      rules: [{\n        required: true,\n        message: \"\".concat(title, \" is required.\")\n      }]\n    }, __jsx(Input, {\n      ref: inputRef,\n      onPressEnter: save,\n      onBlur: save\n    })) : __jsx(\"div\", {\n      className: \"editable-cell-value-wrap\",\n      style: {\n        paddingRight: 24\n      },\n      onClick: toggleEdit\n    }, children);\n  }\n\n  return __jsx(\"td\", restProps, childNode);\n};\n\nvar TableConsignemntScreen = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(TableConsignemntScreen, _React$PureComponent);\n\n  var _super = _createSuper(TableConsignemntScreen);\n\n  function TableConsignemntScreen(props) {\n    var _this;\n\n    _classCallCheck(this, TableConsignemntScreen);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getColumnSearchProps\", function (dataIndex) {\n      return {\n        filterDropdown: function filterDropdown(_ref4) {\n          var setSelectedKeys = _ref4.setSelectedKeys,\n              selectedKeys = _ref4.selectedKeys,\n              confirm = _ref4.confirm,\n              clearFilters = _ref4.clearFilters;\n          return __jsx(\"div\", {\n            style: {\n              padding: 8\n            }\n          }, __jsx(Input, {\n            ref: function ref(node) {\n              _this.searchInput = node;\n            },\n            placeholder: \"T\\xECm s\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\",\n            value: selectedKeys[0],\n            onChange: function onChange(e) {\n              return setSelectedKeys(e.target.value ? [e.target.value] : []);\n            },\n            onPressEnter: function onPressEnter() {\n              return _this.handleSearch(selectedKeys, confirm, dataIndex);\n            },\n            style: {\n              width: 188,\n              marginBottom: 8,\n              display: 'block'\n            }\n          }), __jsx(Button, {\n            type: \"primary\",\n            onClick: function onClick() {\n              return _this.handleSearch(selectedKeys, confirm, dataIndex);\n            },\n            icon: __jsx(SearchOutlined, null),\n            size: \"small\",\n            style: {\n              width: '100%'\n            }\n          }, \"T\\xECm ki\\u1EBFm\"));\n        },\n        filterIcon: function filterIcon(filtered) {\n          return __jsx(SearchOutlined, {\n            style: {\n              color: filtered ? '#1890ff' : undefined\n            }\n          });\n        },\n        onFilterDropdownVisibleChange: function onFilterDropdownVisibleChange(visible) {\n          if (visible) {\n            setTimeout(function () {\n              return _this.searchInput.select();\n            }, 100);\n          }\n        },\n        render: function render(text) {\n          return _this.state.searchedColumn === dataIndex ? __jsx(Highlighter, {\n            highlightStyle: {\n              backgroundColor: '#ffc069',\n              padding: 0\n            },\n            searchWords: [_this.state.searchText],\n            autoEscape: true,\n            textToHighlight: text ? text.toString() : ''\n          }) : text;\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSearch\", function (selectedKeys, confirm, dataIndex) {\n      console.log('handleSearch');\n      console.log(selectedKeys); // confirm()\n      // this.fetchTableData(1, selectedKeys[0])\n\n      _this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      }, function () {\n        confirm();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeRadioIsGetMoney\", /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(row) {\n        var newData, index, item, newItem;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.log('onChangeRadioIsGetMoney');\n                console.log(row);\n                newData = _toConsumableArray(_this.state.customerData);\n                index = newData.findIndex(function (item) {\n                  return row.objectId === item.objectId;\n                });\n                item = newData[index];\n                newItem = _objectSpread({}, item, row);\n\n                if (!isEqual(newItem, item)) {\n                  newData.splice(index, 1, newItem);\n                  console.log('row');\n\n                  _this.setState({\n                    customerData: newData\n                  }, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                    var res;\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            console.log(newItem);\n                            _context2.next = 3;\n                            return GapService.updateCustomerTable(newItem);\n\n                          case 3:\n                            res = _context2.sent;\n                            console.log(res);\n\n                            if (res) {\n                              showNotification(\"C\\u1EADp nh\\u1EADt th\\xE0nh c\\xF4ng \".concat(item.phoneNumber));\n                            } else {\n                              showNotification(\"C\\u1EADp nh\\u1EADt ch\\u01B0a \\u0111\\u01B0\\u1EE3c\");\n                            }\n\n                          case 6:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  })));\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchTableData\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var page,\n          searchText,\n          _args5 = arguments;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              page = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : 1;\n              searchText = _this.state.searchText;\n\n              _this.setState({\n                isLoadingData: true\n              }, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                var res, customerData;\n                return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        if (searchText) {\n                          _context4.next = 6;\n                          break;\n                        }\n\n                        _context4.next = 3;\n                        return GapService.getCustomerTable(page);\n\n                      case 3:\n                        res = _context4.sent;\n                        _context4.next = 9;\n                        break;\n\n                      case 6:\n                        _context4.next = 8;\n                        return GapService.getCustomerTable(page, searchText);\n\n                      case 8:\n                        res = _context4.sent;\n\n                      case 9:\n                        console.log('res');\n                        console.log(res);\n                        customerData = [];\n\n                        if (res && res.results) {\n                          res.results.map(function (item, indexItem) {\n                            customerData.push({\n                              key: indexItem,\n                              objectId: item.objectId,\n                              fullName: item.fullName,\n                              identityNumber: item.identityNumber,\n                              phoneNumber: item.phoneNumber,\n                              bankName: item.banks[0].type,\n                              bankId: item.banks[0].accNumber,\n                              email: item.mail,\n                              birthday: moment(item.birthday).format('DD-MM-YYYY')\n                            });\n                          });\n\n                          _this.setState({\n                            total: res.count,\n                            customerData: customerData,\n                            isLoadingData: false\n                          });\n                        } else {\n                          _this.setState({\n                            isLoadingData: false\n                          });\n                        }\n\n                      case 13:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              })));\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSave\", function (row) {\n      var newData = _toConsumableArray(_this.state.customerData);\n\n      var index = newData.findIndex(function (item) {\n        return row.key === item.key;\n      });\n      var item = newData[index];\n\n      var newItem = _objectSpread({}, item, row);\n\n      if (!isEqual(newItem, item)) {\n        newData.splice(index, 1, newItem);\n        console.log('row');\n\n        _this.setState({\n          customerData: newData\n        }, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n          var res;\n          return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  console.log(newItem);\n                  _context6.next = 3;\n                  return GapService.updateCustomerTable(newItem);\n\n                case 3:\n                  res = _context6.sent;\n                  console.log(res);\n\n                  if (res) {\n                    showNotification(\"C\\u1EADp nh\\u1EADt th\\xE0nh c\\xF4ng \".concat(item.phoneNumber));\n                  } else {\n                    showNotification(\"C\\u1EADp nh\\u1EADt ch\\u01B0a \\u0111\\u01B0\\u1EE3c\");\n                  }\n\n                case 6:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        })));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"paginationChange\", function (page) {\n      console.log(page);\n\n      _this.fetchTableData(page);\n    });\n\n    _this.columns = [{\n      title: 'Tên khách hàng',\n      width: 15,\n      dataIndex: 'fullName',\n      key: 'fullName',\n      editable: true\n    }, _objectSpread({\n      title: 'Số điện thoại',\n      dataIndex: 'phoneNumber',\n      key: 'phoneNumber',\n      width: 10,\n      editable: true\n    }, _this.getColumnSearchProps('phoneNumber')), {\n      title: 'Mail',\n      dataIndex: 'email',\n      key: 'email',\n      width: 15,\n      editable: true\n    }, {\n      title: 'Sinh nhật',\n      dataIndex: 'birthday',\n      key: 'birthday',\n      width: 10\n    }, {\n      title: 'CMND',\n      dataIndex: 'identityNumber',\n      key: 'identityNumber',\n      width: 10,\n      editable: true\n    }, {\n      title: 'Ngân hàng',\n      dataIndex: 'bankName',\n      key: 'bankName',\n      width: 10,\n      editable: true\n    }, {\n      title: 'ID Ngân hàng',\n      dataIndex: 'bankId',\n      key: 'bankId',\n      width: 10,\n      editable: true\n    } // {\n    //   title: 'Nhận tiền',\n    //   key: '7',\n    //   fixed: 'right',\n    //   width: 5,\n    //   render: (value) =>\n    //     this.state.customerData.length >= 1 ? (\n    //       <Popconfirm title='Xác nhận' onConfirm={() => this.onChangeRadioIsGetMoney(value)}>\n    //         <Radio.Button className={value.isGetMoney ? 'radio-true-isGetMoney' : 'radio-false-isGetMoney'} value={value.isGetMoney}>{value.isGetMoney ? 'Rồi' : 'Chưa'}</Radio.Button>\n    //       </Popconfirm>\n    //     ) : null\n    // }\n    ];\n    _this.state = {\n      customerData: [],\n      total: 0,\n      page: 1,\n      searchText: '',\n      searchedColumn: ''\n    };\n    _this.myModal = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(TableConsignemntScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchTableData();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var userData = this.props.userData;\n      var _this$state = this.state,\n          isLoadingData = _this$state.isLoadingData,\n          customerData = _this$state.customerData,\n          total = _this$state.total;\n      var components = {\n        body: {\n          row: EditableRow,\n          cell: EditableCell\n        }\n      };\n      var columns = this.columns.map(function (col) {\n        if (!col.editable) {\n          return col;\n        }\n\n        return _objectSpread({}, col, {\n          onCell: function onCell(record) {\n            return {\n              record: record,\n              editable: col.editable,\n              dataIndex: col.dataIndex,\n              title: col.title,\n              handleSave: _this2.handleSave\n            };\n          }\n        });\n      });\n      return __jsx(\"div\", {\n        className: \"tableConsignemntScreen-container\"\n      }, __jsx(Table, {\n        components: components,\n        size: \"small\",\n        loading: isLoadingData,\n        columns: columns,\n        dataSource: customerData,\n        bordered: true,\n        pagination: {\n          total: total,\n          pageSize: 20,\n          onChange: this.paginationChange\n        },\n        scroll: {\n          x: 1500,\n          y: '65vh'\n        }\n      }), __jsx(MyModal, {\n        ref: this.myModal\n      }));\n    }\n  }]);\n\n  return TableConsignemntScreen;\n}(React.PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    locale: state.locale,\n    userData: state.userData\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(TableConsignemntScreen));","map":{"version":3,"sources":["/Users/macbook/Desktop/giveawaypremium-client/pages/Screen/DashBoard/components/ManageScreen/comppnents/TableCustomer/index.js"],"names":["React","useContext","useState","useEffect","useRef","withRouter","connect","Form","Row","Col","Layout","Input","Button","Spin","Descriptions","Tabs","Table","Radio","Popconfirm","images","MyModal","showNotification","numberWithCommas","LoadingOutlined","SearchOutlined","Router","isMobile","Lottie","GapService","isEqual","moment","Highlighter","EditableRow","index","props","useForm","form","EditableContext","createContext","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","editing","setEditing","inputRef","current","focus","toggleEdit","setFieldsValue","save","validateFields","values","console","log","childNode","margin","required","message","paddingRight","TableConsignemntScreen","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","filterIcon","filtered","color","undefined","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","state","searchedColumn","backgroundColor","searchText","toString","setState","row","newData","customerData","findIndex","item","objectId","newItem","splice","updateCustomerTable","res","phoneNumber","page","isLoadingData","getCustomerTable","results","map","indexItem","push","key","fullName","identityNumber","bankName","banks","type","bankId","accNumber","email","mail","birthday","format","total","count","fetchTableData","columns","getColumnSearchProps","myModal","createRef","userData","components","body","cell","col","onCell","pageSize","onChange","paginationChange","x","y","PureComponent","mapStateToProps","locale"],"mappings":"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","sourcesContent":["/* eslint-disable react/display-name */\nimport React, { useContext, useState, useEffect, useRef } from 'react'\nimport { withRouter } from 'next/router'\nimport { connect } from 'react-redux'\nimport { Form, Row, Col, Layout, Input, Button, Spin, Descriptions, Tabs, Table, Radio, Popconfirm } from 'antd'\nimport { images } from 'config/images'\nimport MyModal from 'pages/Components/MyModal'\nimport { showNotification, numberWithCommas } from 'common/function'\nimport { LoadingOutlined,  SearchOutlined } from '@ant-design/icons'\nimport { Router } from 'common/routes'\nimport { isMobile } from 'react-device-detect'\nimport './style.scss'\nimport Lottie from 'react-lottie'\nimport GapService from 'controller/Api/Services/Gap'\nimport { isEqual } from 'lodash'\nimport moment from 'moment'\nimport Highlighter from 'react-highlight-words'\n\nconst EditableRow = ({ index, ...props }) => {\n  const [form] = Form.useForm()\n  return (\n    <Form form={form} component={false}>\n      <EditableContext.Provider value={form}>\n        <tr {...props} />\n      </EditableContext.Provider>\n    </Form>\n  )\n}\n\nconst EditableContext = React.createContext(null)\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const [editing, setEditing] = useState(false)\n  const inputRef = useRef(null)\n  const form = useContext(EditableContext)\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus()\n    }\n  }, [editing])\n\n  const toggleEdit = () => {\n    setEditing(!editing)\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex]\n    })\n  }\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields()\n      toggleEdit()\n      handleSave({ ...record, ...values })\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo)\n    }\n  }\n\n  let childNode = children\n\n  if (editable) {\n    childNode = editing ? (\n      <Form.Item\n        style={{\n          margin: 0\n        }}\n        name={dataIndex}\n        rules={[\n          {\n            required: true,\n            message: `${title} is required.`\n          }\n        ]}\n      >\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n      </Form.Item>\n    ) : (\n      <div\n        className='editable-cell-value-wrap'\n        style={{\n          paddingRight: 24\n        }}\n        onClick={toggleEdit}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  return <td {...restProps}>{childNode}</td>\n}\n\nclass TableConsignemntScreen extends React.PureComponent {\n  constructor (props) {\n    super(props)\n    this.columns = [\n      {\n        title: 'Tên khách hàng',\n        width: 15,\n        dataIndex: 'fullName',\n        key: 'fullName',\n        editable: true\n      },\n      {\n        title: 'Số điện thoại',\n        dataIndex: 'phoneNumber',\n        key: 'phoneNumber',\n        width: 10,\n        editable: true,\n        ...this.getColumnSearchProps('phoneNumber')\n      },\n      {\n        title: 'Mail',\n        dataIndex: 'email',\n        key: 'email',\n        width: 15,\n        editable: true\n      },\n      {\n        title: 'Sinh nhật',\n        dataIndex: 'birthday',\n        key: 'birthday',\n        width: 10\n      },\n      {\n        title: 'CMND',\n        dataIndex: 'identityNumber',\n        key: 'identityNumber',\n        width: 10,\n        editable: true\n      },\n      {\n        title: 'Ngân hàng',\n        dataIndex: 'bankName',\n        key: 'bankName',\n        width: 10,\n        editable: true\n      },\n      {\n        title: 'ID Ngân hàng',\n        dataIndex: 'bankId',\n        key: 'bankId',\n        width: 10,\n        editable: true\n      }\n      // {\n      //   title: 'Nhận tiền',\n      //   key: '7',\n      //   fixed: 'right',\n      //   width: 5,\n      //   render: (value) =>\n      //     this.state.customerData.length >= 1 ? (\n      //       <Popconfirm title='Xác nhận' onConfirm={() => this.onChangeRadioIsGetMoney(value)}>\n      //         <Radio.Button className={value.isGetMoney ? 'radio-true-isGetMoney' : 'radio-false-isGetMoney'} value={value.isGetMoney}>{value.isGetMoney ? 'Rồi' : 'Chưa'}</Radio.Button>\n      //       </Popconfirm>\n      //     ) : null\n      // }\n    ]\n    this.state = {\n      customerData: [],\n      total: 0,\n      page: 1,\n      searchText: '',\n      searchedColumn: ''\n    }\n    this.myModal = React.createRef()\n  }\n\n  componentDidMount () {\n    this.fetchTableData()\n  }\n\n  componentDidUpdate () {\n\n  }\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node\n          }}\n          placeholder={`Tìm số điện thoại`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        {/* <Space> */}\n        <Button\n          type='primary'\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          icon={<SearchOutlined />}\n          size='small'\n          style={{ width: '100%' }}\n        >\n            Tìm kiếm\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100)\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n        text\n      )\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    console.log('handleSearch')\n    console.log(selectedKeys)\n\n    // confirm()\n    // this.fetchTableData(1, selectedKeys[0])\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex\n    }, () => {\n      confirm()\n    })\n  };\n\n  onChangeRadioIsGetMoney = async (row) => {\n    console.log('onChangeRadioIsGetMoney')\n    console.log(row)\n\n    const newData = [...this.state.customerData]\n    const index = newData.findIndex((item) => row.objectId === item.objectId)\n    const item = newData[index]\n    const newItem = { ...item, ...row }\n \n    if (!isEqual(newItem, item)) {\n      newData.splice(index, 1, newItem)\n      console.log('row')\n      this.setState({\n        customerData: newData\n      }, async () => {\n        console.log(newItem)\n        const res = await GapService.updateCustomerTable(newItem)\n        console.log(res)\n        if (res) {\n          showNotification(`Cập nhật thành công ${item.phoneNumber}`)\n        } else {\n          showNotification(`Cập nhật chưa được`)\n        }\n      })\n    }\n  }\n\n  fetchTableData = async (page = 1) => {\n    const { searchText } = this.state\n\n    this.setState({\n      isLoadingData: true\n    }, async () => {\n      let res\n      if (!searchText) {\n        res = await GapService.getCustomerTable(page)\n      } else {\n        res = await GapService.getCustomerTable(page, searchText)\n      }\n\n      console.log('res')\n      console.log(res)\n      let customerData = []\n      if (res && res.results) {\n        res.results.map((item, indexItem) => {\n          customerData.push({\n            key: indexItem,\n            objectId: item.objectId,\n            fullName: item.fullName,\n            identityNumber: item.identityNumber,\n            phoneNumber: item.phoneNumber,\n            bankName: item.banks[0].type,\n            bankId: item.banks[0].accNumber,\n            email: item.mail,\n            birthday: moment(item.birthday).format('DD-MM-YYYY')\n          })\n        })\n        this.setState({\n          total: res.count,\n          customerData: customerData,\n          isLoadingData: false\n        })\n      } else {\n        this.setState({\n          isLoadingData: false\n        })\n      }\n    })\n  }\n\n  handleSave = (row) => {\n    const newData = [...this.state.customerData]\n    const index = newData.findIndex((item) => row.key === item.key)\n    const item = newData[index]\n    const newItem = { ...item, ...row }\n\n    if (!isEqual(newItem, item)) {\n      newData.splice(index, 1, newItem)\n      console.log('row')\n      this.setState({\n        customerData: newData\n      }, async () => {\n        console.log(newItem)\n        const res = await GapService.updateCustomerTable(newItem)\n        console.log(res)\n        if (res) {\n          showNotification(`Cập nhật thành công ${item.phoneNumber}`)\n        } else {\n          showNotification(`Cập nhật chưa được`)\n        }\n      })\n    }\n  };\n\n  paginationChange = (page) => {\n    console.log(page)\n    this.fetchTableData(page)\n  }\n\n  render () {\n    const { userData } = this.props\n    const { isLoadingData, customerData, total } = this.state\n\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell\n      }\n    }\n\n    const columns = this.columns.map((col) => {\n      if (!col.editable) {\n        return col\n      }\n\n      return {\n        ...col,\n        onCell: (record) => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      }\n    })\n\n    return (\n      <div className='tableConsignemntScreen-container'>\n        <Table\n          components={components}\n          size='small'\n          loading={isLoadingData}\n          columns={columns}\n          dataSource={customerData}\n          bordered\n          pagination={{\n            total: total,\n            pageSize: 20,\n            onChange: this.paginationChange\n          }}\n          scroll={{ x: 1500, y: '65vh' }}\n        />\n        <MyModal ref={this.myModal} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locale: state.locale,\n  userData: state.userData\n})\n\nexport default withRouter(connect(mapStateToProps, null)(TableConsignemntScreen))\n"]},"metadata":{},"sourceType":"module"}