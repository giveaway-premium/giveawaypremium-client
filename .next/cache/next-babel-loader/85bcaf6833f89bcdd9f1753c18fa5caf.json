{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { Link } from \"../../../common/routes\";\n\nfunction CustomLink(_ref) {\n  var route = _ref.route,\n      children = _ref.children,\n      disabled = _ref.disabled;\n  var className = children.props.className || '';\n  var router = useRouter();\n\n  if (router.asPath === route) {\n    className = \"\".concat(className, \" selected\");\n  }\n\n  if (disabled) {\n    className += \" disabled\";\n  }\n\n  if (route && !disabled) {\n    return __jsx(Link, {\n      route: route\n    }, /*#__PURE__*/React.cloneElement(children, {\n      className: className\n    }));\n  }\n\n  return /*#__PURE__*/React.cloneElement(children, {\n    className: className\n  });\n}\n\nexport default CustomLink;","map":{"version":3,"sources":["/Users/macbook/Desktop/giveawaypremium-client/pages/Components/CustomLink/index.js"],"names":["React","useRouter","Link","CustomLink","route","children","disabled","className","props","router","asPath","cloneElement"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAT;;AAEA,SAASC,UAAT,OAAoD;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAClD,MAAIC,SAAS,GAAGF,QAAQ,CAACG,KAAT,CAAeD,SAAf,IAA4B,EAA5C;AACA,MAAME,MAAM,GAAGR,SAAS,EAAxB;;AACA,MAAIQ,MAAM,CAACC,MAAP,KAAkBN,KAAtB,EAA6B;AAC3BG,IAAAA,SAAS,aAAMA,SAAN,cAAT;AACD;;AACD,MAAID,QAAJ,EAAc;AACZC,IAAAA,SAAS,eAAT;AACD;;AACD,MAAIH,KAAK,IAAI,CAACE,QAAd,EAAwB;AACtB,WACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEF;AAAb,oBAAqBJ,KAAK,CAACW,YAAN,CAAmBN,QAAnB,EAA6B;AAAEE,MAAAA,SAAS,EAATA;AAAF,KAA7B,CAArB,CADF;AAGD;;AACD,sBAAOP,KAAK,CAACW,YAAN,CAAmBN,QAAnB,EAA6B;AAAEE,IAAAA,SAAS,EAATA;AAAF,GAA7B,CAAP;AACD;;AAED,eAAeJ,UAAf","sourcesContent":["import React from 'react'\nimport { useRouter } from 'next/router'\nimport { Link } from 'common/routes'\n\nfunction CustomLink ({ route, children, disabled }) {\n  let className = children.props.className || ''\n  const router = useRouter()\n  if (router.asPath === route) {\n    className = `${className} selected`\n  }\n  if (disabled) {\n    className += ` disabled`\n  }\n  if (route && !disabled) {\n    return (\n      <Link route={route}>{React.cloneElement(children, { className })}</Link>\n    )\n  }\n  return React.cloneElement(children, { className })\n}\n\nexport default CustomLink\n"]},"metadata":{},"sourceType":"module"}