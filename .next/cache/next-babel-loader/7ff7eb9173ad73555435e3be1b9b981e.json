{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport { Form, Row, Col, Layout, Input, Button, Spin, Descriptions, Tabs } from 'antd';\nimport { images } from \"../../../../../config/images\";\nimport MyModal from \"../../../../Components/MyModal\";\nimport { showNotification } from \"../../../../../common/function\";\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Router } from \"../../../../../common/routes\";\nimport { isMobile } from 'react-device-detect';\nimport \"./style.scss\";\nimport Lottie from 'react-lottie';\nimport GapService from \"../../../../../controller/Api/Services/Gap\";\nimport TableConsignemntScreen from \"./comppnents/TableConsignemntScreen\";\nimport TableCustomer from \"./comppnents/TableCustomer\";\nconst {\n  TabPane\n} = Tabs;\n\nclass ManageScreen extends React.PureComponent {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    _defineProperty(this, \"onChangeTab\", function (tabKey) {\n      _this.setState({\n        tabKey: tabKey\n      });\n    });\n\n    _defineProperty(this, \"detectRenderTabContent\", function () {\n      const {\n        tabKey\n      } = _this.state;\n\n      switch (tabKey) {\n        case '1':\n          return __jsx(TableConsignemntScreen, null);\n\n        case '2':\n          return __jsx(\"div\", null, \"123\");\n\n        case '3':\n          return __jsx(\"div\", null, \"123\");\n\n        case '4':\n          return __jsx(\"div\", null, \"123\");\n      }\n    });\n\n    this.state = {\n      tabKey: '1'\n    };\n    this.formRef = /*#__PURE__*/React.createRef();\n    this.myModal = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {}\n\n  render() {\n    const {\n      userData\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"managescreen-container\"\n    }, __jsx(Tabs, {\n      defaultActiveKey: \"1\",\n      onChange: this.onChangeTab\n    }, __jsx(TabPane, {\n      tab: \"K\\xFD g\\u1EEDi\",\n      key: \"1\"\n    }, __jsx(TableConsignemntScreen, null)), __jsx(TabPane, {\n      tab: \"Kh\\xE1ch h\\xE0ng\",\n      key: \"2\"\n    }, __jsx(TableCustomer, null)), __jsx(TabPane, {\n      tab: \"L\\u1ECBch l\\xE0m\",\n      key: \"3\"\n    })), __jsx(MyModal, {\n      ref: this.myModal\n    }));\n  }\n\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    locale: state.locale,\n    userData: state.userData\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(ManageScreen));","map":{"version":3,"sources":["/Users/macbook/Desktop/giveawaypremium-client/pages/Screen/DashBoard/components/ManageScreen/index.js"],"names":["React","withRouter","connect","Form","Row","Col","Layout","Input","Button","Spin","Descriptions","Tabs","images","MyModal","showNotification","LoadingOutlined","Router","isMobile","Lottie","GapService","TableConsignemntScreen","TableCustomer","TabPane","ManageScreen","PureComponent","constructor","props","tabKey","setState","state","formRef","createRef","myModal","componentDidMount","componentDidUpdate","render","userData","onChangeTab","mapStateToProps","locale"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,MAAzB,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAgDC,IAAhD,EAAsDC,YAAtD,EAAoEC,IAApE,QAAgF,MAAhF;AACA,SAASC,MAAT;AACA,OAAOC,OAAP;AACA,SAASC,gBAAT;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,MAAT;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP;AACA,OAAOC,sBAAP;AACA,OAAOC,aAAP;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAcX,IAApB;;AAEA,MAAMY,YAAN,SAA2BvB,KAAK,CAACwB,aAAjC,CAA+C;AAC7CC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAAA;;AAClB,UAAMA,KAAN,CADkB;AAAA;;AAAA,yCAiBN,UAACC,MAAD,EAAY;AACxB,MAAA,KAAI,CAACC,QAAL,CAAc;AACZD,QAAAA,MAAM,EAAEA;AADI,OAAd;AAGD,KArBmB;;AAAA,oDAuBK,YAAM;AAC7B,YAAM;AAAEA,QAAAA;AAAF,UAAa,KAAI,CAACE,KAAxB;;AACA,cAAQF,MAAR;AACA,aAAK,GAAL;AACE,iBAAO,MAAC,sBAAD,OAAP;;AACF,aAAK,GAAL;AACE,iBAAO,yBAAP;;AACF,aAAK,GAAL;AACE,iBAAO,yBAAP;;AACF,aAAK,GAAL;AACE,iBAAO,yBAAP;AARF;AAUD,KAnCmB;;AAElB,SAAKE,KAAL,GAAa;AACXF,MAAAA,MAAM,EAAE;AADG,KAAb;AAGA,SAAKG,OAAL,gBAAe9B,KAAK,CAAC+B,SAAN,EAAf;AACA,SAAKC,OAAL,gBAAehC,KAAK,CAAC+B,SAAN,EAAf;AACD;;AAEDE,EAAAA,iBAAiB,GAAI,CAEpB;;AAEDC,EAAAA,kBAAkB,GAAI,CAErB;;AAsBDC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKV,KAA1B;AAEA,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,MAAC,IAAD;AAAM,MAAA,gBAAgB,EAAC,GAAvB;AAA2B,MAAA,QAAQ,EAAE,KAAKW;AAA1C,OACE,MAAC,OAAD;AAAS,MAAA,GAAG,EAAC,gBAAb;AAAsB,MAAA,GAAG,EAAC;AAA1B,OACE,MAAC,sBAAD,OADF,CADF,EAIE,MAAC,OAAD;AAAS,MAAA,GAAG,EAAC,kBAAb;AAA0B,MAAA,GAAG,EAAC;AAA9B,OACE,MAAC,aAAD,OADF,CAJF,EAQE,MAAC,OAAD;AAAS,MAAA,GAAG,EAAC,kBAAb;AAAwB,MAAA,GAAG,EAAC;AAA5B,MARF,CADF,EAcE,MAAC,OAAD;AAAS,MAAA,GAAG,EAAE,KAAKL;AAAnB,MAdF,CADF;AAkBD;;AA3D4C;;AA8D/C,MAAMM,eAAe,GAAG,UAACT,KAAD;AAAA,SAAY;AAClCU,IAAAA,MAAM,EAAEV,KAAK,CAACU,MADoB;AAElCH,IAAAA,QAAQ,EAAEP,KAAK,CAACO;AAFkB,GAAZ;AAAA,CAAxB;;AAKA,eAAenC,UAAU,CAACC,OAAO,CAACoC,eAAD,EAAkB,IAAlB,CAAP,CAA+Bf,YAA/B,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport { withRouter } from 'next/router'\nimport { connect } from 'react-redux'\nimport { Form, Row, Col, Layout, Input, Button, Spin, Descriptions, Tabs } from 'antd'\nimport { images } from 'config/images'\nimport MyModal from 'pages/Components/MyModal'\nimport { showNotification } from 'common/function'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport { Router } from 'common/routes'\nimport { isMobile } from 'react-device-detect'\nimport './style.scss'\nimport Lottie from 'react-lottie'\nimport GapService from 'controller/Api/Services/Gap'\nimport TableConsignemntScreen from './comppnents/TableConsignemntScreen'\nimport TableCustomer from './comppnents/TableCustomer'\nconst { TabPane } = Tabs\n\nclass ManageScreen extends React.PureComponent {\n  constructor (props) {\n    super(props)\n    this.state = {\n      tabKey: '1'\n    }\n    this.formRef = React.createRef()\n    this.myModal = React.createRef()\n  }\n\n  componentDidMount () {\n\n  }\n\n  componentDidUpdate () {\n\n  }\n\n  onChangeTab = (tabKey) => {\n    this.setState({\n      tabKey: tabKey\n    })\n  }\n\n  detectRenderTabContent = () => {\n    const { tabKey } = this.state\n    switch (tabKey) {\n    case '1':\n      return <TableConsignemntScreen />\n    case '2':\n      return <div>123</div>\n    case '3':\n      return <div>123</div>\n    case '4':\n      return <div>123</div>\n    }\n  }\n\n  render () {\n    const { userData } = this.props\n\n    return (\n      <div className='managescreen-container'>\n        <Tabs defaultActiveKey='1' onChange={this.onChangeTab} >\n          <TabPane tab='Ký gửi' key='1'>\n            <TableConsignemntScreen />\n          </TabPane>\n          <TabPane tab='Khách hàng' key='2'>\n            <TableCustomer />\n            {/* Content of Tab Pane 2 */}\n          </TabPane>\n          <TabPane tab='Lịch làm' key='3'>\n            {/* Content of Tab Pane 3 */}\n          </TabPane>\n        </Tabs>\n        {/* {this.detectRenderTabContent()} */}\n        <MyModal ref={this.myModal} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locale: state.locale,\n  userData: state.userData\n})\n\nexport default withRouter(connect(mapStateToProps, null)(ManageScreen))\n"]},"metadata":{},"sourceType":"module"}