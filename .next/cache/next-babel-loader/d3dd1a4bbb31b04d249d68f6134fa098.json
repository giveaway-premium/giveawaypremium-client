{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Router } from \"../../../../../common/routes\";\nimport ReduxServices from \"../../../../../common/redux\";\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/router';\nimport { images } from \"../../../../../config/images\";\nimport { isMobile } from 'react-device-detect';\nimport MyModal from \"../../../../Components/MyModal\";\nimport moment from 'moment';\nimport GapService from \"../../../../../controller/Api/Services/Gap\";\nimport { Form, Row, Col, Input, Button, Descriptions, Divider, DatePicker, Select } from 'antd';\nimport Lottie from 'react-lottie';\nimport \"./style.scss\";\nimport { showNotification } from \"../../../../../common/function\";\n\nclass ConsignmentScreen extends React.PureComponent {\n  static async getInitialProps({\n    query\n  }) {\n    return {\n      query\n    };\n  }\n\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    _defineProperty(this, \"fetchAppointment\", async function () {\n      const {\n        dayBooking\n      } = _this.state;\n      const arrayDate = [];\n      let bookingDataCode = '';\n      dayBooking.map(function (itemDate, indexdate) {\n        arrayDate.push(`\"${itemDate.date}\"`);\n      });\n      const res = await GapService.getAppointmentWithDate(arrayDate);\n\n      if (res && res.results) {\n        res.results.map(function (itemData, indexItem) {\n          if (itemData && itemData.slot) {\n            bookingDataCode += '-' + itemData.slot + '-';\n          }\n        });\n      }\n\n      console.log('res');\n      console.log(res);\n      console.log(bookingDataCode);\n\n      _this.setState({\n        bookingDataCode: bookingDataCode\n      });\n    });\n\n    _defineProperty(this, \"translationDate\", function (key) {\n      switch (key) {\n        case 'Sunday':\n          return 'Chủ Nhật';\n\n        case 'Monday':\n          return 'Thứ hai';\n\n        case 'Tuesday':\n          return 'Thứ ba';\n\n        case 'Wednesday':\n          return 'Thứ tư';\n\n        case 'Thursday':\n          return 'Thứ năm';\n\n        case 'Friday':\n          return 'Thứ sáu';\n\n        case 'Saturday':\n          return 'Thứ bảy';\n\n        default:\n          return key;\n      }\n    });\n\n    _defineProperty(this, \"onChooseDay\", function (choosenDay) {\n      console.log(choosenDay);\n\n      _this.setState({\n        step: 1,\n        isHideUserForm: true,\n        choosenTimeCode: null,\n        choosenDayCode: choosenDay ? choosenDay.dayCode : ''\n      });\n    });\n\n    _defineProperty(this, \"onChooseTime\", function (choosenTime) {\n      console.log(choosenTime);\n\n      _this.setState({\n        step: 1,\n        choosenTimeCode: choosenTime ? choosenTime.timeCode : ''\n      });\n    });\n\n    _defineProperty(this, \"onHandleOpenContent\", function () {});\n\n    _defineProperty(this, \"onConsign\", async function () {\n      const {\n        formData,\n        choosenDayCode,\n        choosenTimeCode,\n        bookingDataCode\n      } = _this.state;\n\n      if (choosenTimeCode && choosenDayCode) {\n        _this.setState({\n          isConsigning: true\n        }, async function () {\n          console.log('onConsign');\n          const formatedTime = choosenTimeCode.substring(0, 2) + ':' + choosenTimeCode.substring(2, 4);\n          const formatedDay = choosenDayCode.substring(0, 2) + '-' + choosenDayCode.substring(2, 4) + '-' + choosenDayCode.substring(4, 8);\n          const slotID = choosenTimeCode + choosenDayCode;\n          const bookingDataCode = _this.state.bookingDataCode + '-' + slotID + '-';\n          const res = await GapService.setAppointment(formData, slotID, formatedTime, formatedDay);\n          console.log('res');\n          console.log(res);\n\n          if (res && res.objectId) {\n            _this.setState({\n              bookingDataCode: bookingDataCode,\n              isHideUserForm: true,\n              isConsigning: false\n            }, function () {\n              setTimeout(function () {\n                _this.setState({\n                  step: 3,\n                  isHideDayColumn: true\n                });\n              }, 1000);\n            });\n          } else {\n            _this.setState({\n              isConsigning: false\n            }, function () {\n              return _this.fetchAppointment();\n            });\n\n            showNotification('Đặt lịch thất bại!');\n          }\n        });\n      }\n    });\n\n    _defineProperty(this, \"onHandleStepTwo\", function () {\n      _this.setState({\n        isHideUserForm: false\n      }, function () {\n        setTimeout(function () {\n          _this.setState({\n            step: 2\n          });\n        }, 500);\n      });\n    });\n\n    _defineProperty(this, \"backStepOne\", function () {\n      _this.setState({\n        isHideUserForm: true\n      }, function () {\n        _this.fetchAppointment();\n\n        setTimeout(function () {\n          _this.setState({\n            step: 1\n          });\n        }, 500);\n      });\n    });\n\n    _defineProperty(this, \"resetAndBackProps\", function () {\n      _this.setState({\n        formData: {\n          customerName: '',\n          phoneNumber: '',\n          numberOfProduct: 1\n        },\n        step: 0,\n        isHideDayColumn: false,\n        choosenDayCode: null,\n        choosenTimeCode: null\n      }, function () {\n        _this.fetchAppointment();\n\n        _this.props.backConsignment();\n      });\n    });\n\n    _defineProperty(this, \"convertCodeToTime\", function () {\n      const {\n        choosenTimeCode,\n        choosenDayCode\n      } = _this.state;\n\n      if (choosenTimeCode && choosenDayCode) {\n        const formatedTime = choosenTimeCode.substring(0, 2) + ':' + choosenTimeCode.substring(2, 4);\n        const formatedDay = choosenDayCode.substring(0, 2) + '-' + choosenDayCode.substring(2, 4) + '-' + choosenDayCode.substring(4, 8);\n        return formatedDay + ' ' + formatedTime;\n      }\n\n      return '---';\n    });\n\n    this.state = {\n      dayBooking: [],\n      formData: {\n        customerName: '',\n        phoneNumber: '',\n        numberOfProduct: 1\n      },\n      timeBooking: [{\n        timeName: '10:00',\n        timeCode: '1000'\n      }, {\n        timeName: '10:30',\n        timeCode: '1030'\n      }, {\n        timeName: '11:00',\n        timeCode: '1100'\n      }, {\n        timeName: '11:30',\n        timeCode: '1130'\n      }, {\n        timeName: '12:00',\n        timeCode: '1200'\n      }, {\n        timeName: '12:30',\n        timeCode: '1230'\n      }, {\n        timeName: '13:00',\n        timeCode: '1300'\n      }, {\n        timeName: '13:30',\n        timeCode: '1330'\n      }, {\n        timeName: '14:00',\n        timeCode: '1400'\n      }, {\n        timeName: '14:30',\n        timeCode: '1430'\n      }, {\n        timeName: '15:00',\n        timeCode: '1500'\n      }, {\n        timeName: '15:30',\n        timeCode: '1530'\n      }, {\n        timeName: '16:00',\n        timeCode: '1600'\n      }, {\n        timeName: '16:30',\n        timeCode: '1630'\n      }, {\n        timeName: '17:00',\n        timeCode: '1700'\n      }, {\n        timeName: '17:30',\n        timeCode: '1730'\n      }, {\n        timeName: '18:00',\n        timeCode: '1800'\n      }, {\n        timeName: '18:30',\n        timeCode: '1830'\n      }],\n      step: 0,\n      isHideUserForm: true,\n      isHideDayColumn: false,\n      choosenDayCode: null,\n      choosenTimeCode: null,\n      bookingDataCode: []\n    };\n    this.myModal = /*#__PURE__*/React.createRef();\n  }\n\n  async componentDidMount() {\n    var _this2 = this;\n\n    let dayBookingCount = ['', '', '', '', '', '', ''];\n    let dayBookingTemp = [];\n    console.log('componentDidMount');\n    console.log(moment(Date().now));\n    dayBookingCount.map(function (item, index) {\n      dayBookingTemp.push({\n        dayName: moment().add(index, 'day').format('dddd'),\n        date: moment().add(index, 'day').format('DD-MM-YYYY'),\n        dayCode: moment().add(index, 'day').format('DD-MM-YYYY').replaceAll('-', '')\n      });\n    });\n    this.setState({\n      dayBooking: dayBookingTemp\n    }, async function () {\n      await _this2.fetchAppointment();\n    });\n  }\n\n  componentDidUpdate() {}\n\n  componentWillUnmount() {}\n\n  render() {\n    var _this3 = this;\n\n    const {\n      step,\n      dayBooking,\n      choosenDayCode,\n      timeBooking,\n      bookingDataCode,\n      choosenTimeCode,\n      formData,\n      isHideUserForm,\n      isConsigning,\n      isHideDayColumn\n    } = this.state;\n    const layout = {\n      labelCol: {\n        span: 9\n      },\n      wrapperCol: {\n        span: 15\n      }\n    };\n    const defaultOptionsSuccess = {\n      loop: false,\n      autoplay: true,\n      animationData: images.successJson\n    };\n    return __jsx(\"div\", {\n      className: \"bookingform-home-container\"\n    }, __jsx(\"div\", {\n      className: \"bookingform\"\n    }, __jsx(\"div\", {\n      className: 'dayBooking-box' + (!isHideDayColumn ? ' show' : '')\n    }, dayBooking.map(function (dayItem, dayIndex) {\n      return __jsx(\"div\", {\n        key: dayIndex,\n        className: 'day-box',\n        onClick: function () {\n          return _this3.onChooseDay(dayItem);\n        },\n        style: choosenDayCode && choosenDayCode === dayItem.dayCode ? {\n          borderColor: 'black',\n          opacity: 1\n        } : choosenDayCode && choosenDayCode !== dayItem.dayCode ? {\n          opacity: 0.4\n        } : {}\n      }, __jsx(\"span\", {\n        className: \"text day-name\"\n      }, dayIndex === 0 ? 'Hôm nay' : _this3.translationDate(dayItem.dayName)), __jsx(\"span\", {\n        className: \"text day-txt\"\n      }, dayItem.date));\n    })), __jsx(\"div\", {\n      className: \"timeBooking-box\"\n    }, __jsx(\"div\", {\n      className: 'timeBooking-grid' + (step === 1 && isHideUserForm ? ' show' : '')\n    }, timeBooking.map(function (itemTime, indexTime) {\n      const isReady = !bookingDataCode.includes(choosenTimeCode + choosenDayCode) && itemTime.timeCode === choosenTimeCode;\n      const isBusy = bookingDataCode.includes(itemTime.timeCode + choosenDayCode); // console.log(bookingDataCode)\n      // console.log(itemTime.timeCode + choosenDayCode)\n      // console.log(isReady)\n      // console.log(isBusy)\n\n      return __jsx(\"div\", {\n        style: isBusy ? {\n          pointerEvents: 'none',\n          cursor: 'none'\n        } : {},\n        onClick: function () {\n          return isBusy ? {} : _this3.onChooseTime(itemTime);\n        },\n        key: indexTime,\n        className: 'time-box' + (isReady ? ' ready' : isBusy ? ' busy' : '')\n      }, __jsx(\"span\", {\n        className: \"text\"\n      }, itemTime.timeName));\n    })), __jsx(\"div\", {\n      className: 'timeBooking-footer' + (step === 1 && isHideUserForm ? ' show' : '')\n    }, __jsx(\"span\", {\n      onClick: this.resetAndBackProps,\n      className: \"text\"\n    }, `< Quay lại`), __jsx(\"span\", {\n      onClick: this.onHandleStepTwo,\n      className: \"text\",\n      style: choosenTimeCode ? {\n        color: 'black'\n      } : {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      }\n    }, `Tiếp tục >`)), __jsx(Form, _extends({\n      className: 'timeBooking-form' + (!isHideUserForm && step === 2 ? ' show' : ''),\n      ref: this.formRef\n    }, layout, {\n      name: \"consignment\",\n      initialValues: formData // onFinish={this.onFinish}\n      ,\n      onFinish: this.onConsign,\n      onValuesChange: function (changedValues, allValues) {\n        _this3.setState({\n          formData: _objectSpread({}, formData, changedValues)\n        }, function () {\n          return console.log(_this3.state);\n        });\n      }\n    }), __jsx(Row, {\n      className: \"flex sell-card-form\",\n      justify: \"center\"\n    }, __jsx(Form.Item, {\n      name: \"dayTime\",\n      label: \"Th\\u1EDDi gian\"\n    }, __jsx(Col, {\n      sm: 24,\n      md: 22\n    }, __jsx(Input, {\n      size: \"small\",\n      value: this.convertCodeToTime(),\n      placeholder: \"...\"\n    }))), __jsx(Form.Item, {\n      name: \"customerName\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập tên quý khách'\n      }],\n      label: \"H\\u1ECD v\\xE0 T\\xEAn\"\n    }, __jsx(Col, {\n      sm: 24,\n      md: 22\n    }, __jsx(Input, {\n      value: formData.customerName,\n      size: \"small\",\n      allowClear: true,\n      id: \"customerName\",\n      key: \"customerName\",\n      onChange: this.changeData,\n      placeholder: \"...\"\n    }))), __jsx(Form.Item, {\n      name: \"phoneNumber\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập số điện thoại'\n      }],\n      label: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"\n    }, __jsx(Col, {\n      sm: 24,\n      md: 22\n    }, __jsx(Input, {\n      value: formData.phoneNumber,\n      size: \"small\",\n      type: 'number',\n      id: \"phoneNumber\",\n      key: \"phoneNumber\",\n      onChange: this.changeData,\n      allowClear: true,\n      placeholder: \"...\"\n    }))), __jsx(Form.Item, {\n      name: \"numberOfProduct\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập số lượng hàng'\n      }],\n      label: \"S\\u1ED1 l\\u01B0\\u1EE3ng H\\xE0ng Ho\\xE1\"\n    }, __jsx(Col, {\n      sm: 24,\n      md: 6\n    }, __jsx(Input, {\n      value: formData.numberOfProduct,\n      size: \"small\",\n      defaultValue: 1,\n      type: 'number',\n      id: \"numberOfProduct\",\n      key: \"numberOfProduct\",\n      onChange: this.changeData,\n      allowClear: true,\n      placeholder: \"...\"\n    }))), __jsx(\"div\", {\n      className: \"flex justify-around align-center\",\n      style: {\n        width: '100%'\n      }\n    }, __jsx(Button, {\n      onClick: this.backStepOne,\n      type: \"secondary\"\n    }, \"Quay l\\u1EA1i\"), __jsx(Button, {\n      loading: isConsigning,\n      type: \"secondary\",\n      htmlType: \"submit\"\n    }, \"X\\xE1c nh\\u1EADn\")))), __jsx(\"div\", {\n      className: 'timeBooking-confirm' + (isHideUserForm && step === 3 ? ' show' : '')\n    }, __jsx(Lottie, {\n      options: defaultOptionsSuccess,\n      delay: 2000,\n      height: 150,\n      width: 150,\n      isStopped: false,\n      isPaused: false\n    }), __jsx(Row, {\n      justify: \"center\"\n    }, __jsx(Col, {\n      span: 20\n    }, __jsx(Descriptions, null, __jsx(Descriptions.Item, {\n      span: 24,\n      label: \"Th\\u1EDDi gian k\\xFD g\\u1EEDi\"\n    }, this.convertCodeToTime()), __jsx(Descriptions.Item, {\n      span: 24,\n      label: \"T\\xEAn Kh\\xE1ch H\\xE0ng\"\n    }, formData.customerName), __jsx(Descriptions.Item, {\n      span: 24,\n      label: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"\n    }, formData.phoneNumber), __jsx(Descriptions.Item, {\n      span: 24,\n      label: \"S\\u1ED1 l\\u01B0\\u1EE3ng h\\xE0ng ho\\xE1\"\n    }, formData.numberOfProduct)))), __jsx(Button, {\n      className: \"MT20\",\n      onClick: this.resetAndBackProps\n    }, \"Quay l\\u1EA1i\")))), __jsx(MyModal, {\n      ref: this.myModal\n    }));\n  }\n\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    locale: state.locale,\n    userData: state.userData\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(ConsignmentScreen));","map":{"version":3,"sources":["/Users/macbook/Desktop/giveawaypremium-client/pages/Screen/Consignment/components/BookingForm/index.js"],"names":["React","Router","ReduxServices","connect","withRouter","images","isMobile","MyModal","moment","GapService","Form","Row","Col","Input","Button","Descriptions","Divider","DatePicker","Select","Lottie","showNotification","ConsignmentScreen","PureComponent","getInitialProps","query","constructor","props","dayBooking","state","arrayDate","bookingDataCode","map","itemDate","indexdate","push","date","res","getAppointmentWithDate","results","itemData","indexItem","slot","console","log","setState","key","choosenDay","step","isHideUserForm","choosenTimeCode","choosenDayCode","dayCode","choosenTime","timeCode","formData","isConsigning","formatedTime","substring","formatedDay","slotID","setAppointment","objectId","setTimeout","isHideDayColumn","fetchAppointment","customerName","phoneNumber","numberOfProduct","backConsignment","timeBooking","timeName","myModal","createRef","componentDidMount","dayBookingCount","dayBookingTemp","Date","now","item","index","dayName","add","format","replaceAll","componentDidUpdate","componentWillUnmount","render","layout","labelCol","span","wrapperCol","defaultOptionsSuccess","loop","autoplay","animationData","successJson","dayItem","dayIndex","onChooseDay","borderColor","opacity","translationDate","itemTime","indexTime","isReady","includes","isBusy","pointerEvents","cursor","onChooseTime","resetAndBackProps","onHandleStepTwo","color","formRef","onConsign","changedValues","allValues","convertCodeToTime","required","message","changeData","width","backStepOne","mapStateToProps","locale","userData"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Router } from 'common/routes'\nimport ReduxServices from 'common/redux'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'next/router'\nimport { images } from 'config/images'\nimport { isMobile } from 'react-device-detect'\nimport MyModal from 'pages/Components/MyModal'\nimport moment from 'moment'\nimport GapService from 'controller/Api/Services/Gap'\nimport { Form, Row, Col, Input, Button, Descriptions, Divider, DatePicker, Select } from 'antd'\nimport Lottie from 'react-lottie'\n\nimport './style.scss'\nimport { showNotification } from 'common/function'\n\nclass ConsignmentScreen extends React.PureComponent {\n  static async getInitialProps ({ query }) {\n    return { query }\n  }\n  constructor (props) {\n    super(props)\n    this.state = {\n      dayBooking: [],\n      formData: {\n        customerName: '',\n        phoneNumber: '',\n        numberOfProduct: 1\n      },\n      timeBooking: [\n        {\n          timeName: '10:00',\n          timeCode: '1000'\n        },\n        {\n          timeName: '10:30',\n          timeCode: '1030'\n        },\n        {\n          timeName: '11:00',\n          timeCode: '1100'\n        },\n        {\n          timeName: '11:30',\n          timeCode: '1130'\n        },\n        {\n          timeName: '12:00',\n          timeCode: '1200'\n        },\n        {\n          timeName: '12:30',\n          timeCode: '1230'\n        },\n        {\n          timeName: '13:00',\n          timeCode: '1300'\n        },\n        {\n          timeName: '13:30',\n          timeCode: '1330'\n        },\n        {\n          timeName: '14:00',\n          timeCode: '1400'\n        },\n        {\n          timeName: '14:30',\n          timeCode: '1430'\n        },\n        {\n          timeName: '15:00',\n          timeCode: '1500'\n        },\n        {\n          timeName: '15:30',\n          timeCode: '1530'\n        },\n        {\n          timeName: '16:00',\n          timeCode: '1600'\n        },\n        {\n          timeName: '16:30',\n          timeCode: '1630'\n        },\n        {\n          timeName: '17:00',\n          timeCode: '1700'\n        },\n        {\n          timeName: '17:30',\n          timeCode: '1730'\n        },\n        {\n          timeName: '18:00',\n          timeCode: '1800'\n        },\n        {\n          timeName: '18:30',\n          timeCode: '1830'\n        }\n      ],\n      step: 0,\n      isHideUserForm: true,\n      isHideDayColumn: false,\n      choosenDayCode: null,\n      choosenTimeCode: null,\n      bookingDataCode: []\n    }\n    this.myModal = React.createRef()\n  }\n\n  async componentDidMount () {\n    let dayBookingCount = ['', '', '', '', '', '', '']\n    let dayBookingTemp = []\n\n    console.log('componentDidMount')\n\n    console.log(moment(Date().now))\n\n    dayBookingCount.map((item, index) => {\n      dayBookingTemp.push({\n        dayName: moment().add(index, 'day').format('dddd'),\n        date: moment().add(index, 'day').format('DD-MM-YYYY'),\n        dayCode: moment().add(index, 'day').format('DD-MM-YYYY').replaceAll('-', '')\n      })\n    })\n\n    this.setState({\n      dayBooking: dayBookingTemp\n    }, async () => {\n      await this.fetchAppointment()\n    })\n  }\n\n  componentDidUpdate () {\n  }\n\n  componentWillUnmount () {\n  }\n\n  fetchAppointment = async () => {\n    const { dayBooking } = this.state\n\n    const arrayDate = []\n    let bookingDataCode = ''\n    dayBooking.map((itemDate, indexdate) => {\n      arrayDate.push(`\"${itemDate.date}\"`)\n    })\n\n    const res = await GapService.getAppointmentWithDate(arrayDate)\n\n    if (res && res.results) {\n      res.results.map((itemData, indexItem) => {\n        if (itemData && itemData.slot) {\n          bookingDataCode += '-' + itemData.slot + '-'\n        }\n      })\n    }\n\n    console.log('res')\n    console.log(res)\n    console.log(bookingDataCode)\n\n    this.setState({\n      bookingDataCode: bookingDataCode\n    })\n  }\n\n  translationDate = (key) => {\n    switch (key) {\n    case 'Sunday':\n      return 'Chủ Nhật'\n    case 'Monday':\n      return 'Thứ hai'\n    case 'Tuesday':\n      return 'Thứ ba'\n    case 'Wednesday':\n      return 'Thứ tư'\n    case 'Thursday':\n      return 'Thứ năm'\n    case 'Friday':\n      return 'Thứ sáu'\n    case 'Saturday':\n      return 'Thứ bảy'\n    default:\n      return key\n    }\n  }\n\n  onChooseDay = (choosenDay) => {\n    console.log(choosenDay)\n    this.setState({\n      step: 1,\n      isHideUserForm: true,\n      choosenTimeCode: null,\n      choosenDayCode: choosenDay ? choosenDay.dayCode : ''\n    })\n  }\n\n  onChooseTime = (choosenTime) => {\n    console.log(choosenTime)\n    this.setState({\n      step: 1,\n      choosenTimeCode: choosenTime ? choosenTime.timeCode : ''\n    })\n  }\n\n  onHandleOpenContent = () => {\n  }\n\n  onConsign = async () => {\n    const { formData, choosenDayCode, choosenTimeCode, bookingDataCode } = this.state\n    if (choosenTimeCode && choosenDayCode) {\n      this.setState({\n        isConsigning: true\n      }, async () => {\n        console.log('onConsign')\n        const formatedTime = choosenTimeCode.substring(0, 2) + ':' + choosenTimeCode.substring(2, 4)\n        const formatedDay = choosenDayCode.substring(0, 2) + '-' + choosenDayCode.substring(2, 4) + '-' + choosenDayCode.substring(4, 8)\n        const slotID = choosenTimeCode + choosenDayCode\n        const bookingDataCode = this.state.bookingDataCode + '-' + slotID + '-'\n\n        const res = await GapService.setAppointment(formData, slotID, formatedTime, formatedDay)\n        console.log('res')\n        console.log(res)\n        if (res && res.objectId) {\n          this.setState({\n            bookingDataCode: bookingDataCode,\n            isHideUserForm: true,\n            isConsigning: false\n          }, () => {\n            setTimeout(() => {\n              this.setState({\n                step: 3,\n                isHideDayColumn: true\n              })\n            }, 1000)\n          })\n        } else {\n          this.setState({\n            isConsigning: false\n          }, () => this.fetchAppointment())\n          showNotification('Đặt lịch thất bại!')\n        }\n      })\n    }\n  }\n\n  // closeModal = () => {\n  //   this.myModal.current.closeModal()\n  // }\n\n  onHandleStepTwo = () => {\n    this.setState({\n      isHideUserForm: false\n    }, () => {\n      setTimeout(() => {\n        this.setState({\n          step: 2\n        })\n      }, 500)\n    })\n  }\n\n  backStepOne = () => {\n    this.setState({\n      isHideUserForm: true\n    }, () => {\n      this.fetchAppointment()\n      setTimeout(() => {\n        this.setState({\n          step: 1\n        })\n      }, 500)\n    })\n  }\n\n  resetAndBackProps = () => {\n    this.setState({\n      formData: {\n        customerName: '',\n        phoneNumber: '',\n        numberOfProduct: 1\n      },\n      step: 0,\n      isHideDayColumn: false,\n      choosenDayCode: null,\n      choosenTimeCode: null\n    }, () => {\n      this.fetchAppointment()\n      this.props.backConsignment()\n    })\n  }\n\n  convertCodeToTime = () => {\n    const { choosenTimeCode, choosenDayCode } = this.state\n\n    if (choosenTimeCode && choosenDayCode) {\n      const formatedTime = choosenTimeCode.substring(0, 2) + ':' + choosenTimeCode.substring(2, 4)\n      const formatedDay = choosenDayCode.substring(0, 2) + '-' + choosenDayCode.substring(2, 4) + '-' + choosenDayCode.substring(4, 8)\n      return formatedDay + ' ' + formatedTime\n    }\n\n    return '---'\n  }\n\n  render () {\n    const { \n      step, dayBooking, choosenDayCode, timeBooking, bookingDataCode,\n      choosenTimeCode, formData, isHideUserForm, isConsigning, isHideDayColumn\n    } = this.state\n    const layout = {\n      labelCol: { span: 9 },\n      wrapperCol: { span: 15 }\n    }\n\n    const defaultOptionsSuccess = {\n      loop: false,\n      autoplay: true,\n      animationData: images.successJson\n    }\n\n    return (\n      <div className='bookingform-home-container'>\n        <div className='bookingform'>\n          <div className={'dayBooking-box' + (!isHideDayColumn ? ' show' : '')}>\n\n            {dayBooking.map((dayItem, dayIndex) => {\n              return (\n                <div\n                  key={dayIndex}\n                  className={'day-box'}\n                  onClick={() => this.onChooseDay(dayItem)}\n                  style={(choosenDayCode && choosenDayCode === dayItem.dayCode) ? { borderColor: 'black', opacity: 1 } : (choosenDayCode && choosenDayCode !== dayItem.dayCode) ? { opacity: 0.4 } : {}}\n                >\n                  <span className='text day-name'>{dayIndex === 0 ? 'Hôm nay' : this.translationDate(dayItem.dayName)}</span>\n                  <span className='text day-txt'>{dayItem.date}</span>\n                </div>\n              )\n            })}\n          </div>\n\n          <div className='timeBooking-box'>\n            <div className={'timeBooking-grid' + (step === 1 && isHideUserForm ? ' show' : '')}>\n              {timeBooking.map((itemTime, indexTime) => {\n                const isReady = !bookingDataCode.includes(choosenTimeCode + choosenDayCode) && itemTime.timeCode === choosenTimeCode\n                const isBusy = bookingDataCode.includes(itemTime.timeCode + choosenDayCode)\n                // console.log(bookingDataCode)\n                // console.log(itemTime.timeCode + choosenDayCode)\n                // console.log(isReady)\n                // console.log(isBusy)\n\n                return (\n                  <div style={isBusy ? { pointerEvents: 'none', cursor: 'none' } : {}} onClick={() => isBusy ? {} : this.onChooseTime(itemTime)} key={indexTime} className={'time-box' + (isReady ? ' ready' : isBusy ? ' busy' : '')}>\n                    <span className='text'>{itemTime.timeName}</span>\n                  </div>\n                )\n              })}\n            </div>\n\n            <div className={'timeBooking-footer' + (step === 1 && isHideUserForm ? ' show' : '')}>\n              <span onClick={this.resetAndBackProps} className='text'>{`< Quay lại`}</span>\n              <span onClick={this.onHandleStepTwo} className='text' style={choosenTimeCode ? { color: 'black' } : { opacity: 0.5, pointerEvents: 'none' }}>{`Tiếp tục >`}</span>\n            </div>\n\n            <Form\n              className={'timeBooking-form' + (!isHideUserForm && step === 2 ? ' show' : '')}\n              ref={this.formRef}\n              {...layout}\n              name='consignment'\n              initialValues={formData}\n              // onFinish={this.onFinish}\n              onFinish={this.onConsign}\n              onValuesChange={(changedValues, allValues) => {\n                this.setState({\n                  formData: {\n                    ...formData,\n                    ...changedValues\n                  }\n                }, () => console.log(this.state))\n              }}\n            >\n              <Row className='flex sell-card-form' justify='center'>\n                <Form.Item name='dayTime' label='Thời gian'>\n                  <Col sm={24} md={22}>\n                    <Input size='small' value={this.convertCodeToTime()} placeholder='...' />\n                  </Col>\n                </Form.Item>\n                <Form.Item name='customerName' rules={[{ required: true, message: 'Vui lòng nhập tên quý khách' }]} label='Họ và Tên'>\n                  <Col sm={24} md={22}>\n                    <Input value={formData.customerName} size='small' allowClear id='customerName' key='customerName' onChange={this.changeData} placeholder='...' />\n                  </Col>\n                </Form.Item>\n\n                <Form.Item name='phoneNumber' rules={[{ required: true, message: 'Vui lòng nhập số điện thoại' }]} label='Số điện thoại'>\n                  <Col sm={24} md={22}>\n                    <Input value={formData.phoneNumber} size='small' type={'number'} id='phoneNumber' key='phoneNumber' onChange={this.changeData} allowClear placeholder='...' />\n                  </Col>\n                </Form.Item>\n\n                <Form.Item name='numberOfProduct' rules={[{ required: true, message: 'Vui lòng nhập số lượng hàng' }]} label='Số lượng Hàng Hoá'>\n                  <Col sm={24} md={6}>\n                    <Input value={formData.numberOfProduct} size='small' defaultValue={1} type={'number'} id='numberOfProduct' key='numberOfProduct' onChange={this.changeData} allowClear placeholder='...' />\n                  </Col>\n                </Form.Item>\n\n                <div className='flex justify-around align-center' style={{ width: '100%' }}>\n                  <Button onClick={this.backStepOne} type='secondary'>Quay lại</Button>\n                  <Button loading={isConsigning} type='secondary' htmlType='submit'>Xác nhận</Button>\n                </div>\n              </Row>\n            </Form>\n\n            <div className={'timeBooking-confirm' + (isHideUserForm && step === 3 ? ' show' : '')}>\n              <Lottie\n                options={defaultOptionsSuccess}\n                delay={2000}\n                height={150}\n                width={150}\n                isStopped={false}\n                isPaused={false}\n              />\n              <Row justify='center'>\n                <Col span={20}>\n                  <Descriptions>\n                    <Descriptions.Item span={24} label='Thời gian ký gửi'>{this.convertCodeToTime()}</Descriptions.Item>\n                    <Descriptions.Item span={24} label='Tên Khách Hàng'>{formData.customerName}</Descriptions.Item>\n                    <Descriptions.Item span={24} label='Số điện thoại'>{formData.phoneNumber}</Descriptions.Item>\n                    <Descriptions.Item span={24} label='Số lượng hàng hoá'>{formData.numberOfProduct}</Descriptions.Item>\n                  </Descriptions>\n                </Col>\n              </Row>\n              <Button className='MT20' onClick={this.resetAndBackProps} >Quay lại</Button>\n            </div>\n          </div>\n        </div>\n        <MyModal ref={this.myModal} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locale: state.locale,\n  userData: state.userData\n})\n\nexport default withRouter(connect(mapStateToProps)(ConsignmentScreen))\n"]},"metadata":{},"sourceType":"module"}