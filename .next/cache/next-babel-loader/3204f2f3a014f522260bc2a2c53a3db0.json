{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport createReducer from \"../lib/reducerConfig\";\nimport MessageVI from \"../../../static/Assets/Lang/ja.json\";\nimport MessageEN from \"../../../static/Assets/Lang/en.json\";\nimport MessageCN from \"../../../static/Assets/Lang/cn.json\";\nimport { KEY_STORE } from \"../../../common/constants\";\nimport initState from \"../lib/initState\";\nvar localeJA = {\n  lang: 'ja',\n  messages: MessageVI\n};\nvar localeEN = {\n  lang: 'en',\n  messages: MessageEN\n};\nvar localeCN = {\n  lang: 'cn',\n  messages: MessageCN\n};\nexport var locale = createReducer(localeEN, _defineProperty({}, KEY_STORE.SET_LOCALE, function (state, action) {\n  switch (action.payload) {\n    case 'en':\n      return localeEN;\n\n    case 'ja':\n      return localeJA;\n\n    case 'cn':\n      return localeCN;\n\n    default:\n      return localeEN;\n  }\n}));\nexport var userData = createReducer(initState.userData, _defineProperty({}, KEY_STORE.SET_USER, function (state, action) {\n  return action.payload;\n}));\nexport var settingRedux = createReducer(initState.setting, _defineProperty({}, KEY_STORE.SET_SETTING, function (state, action) {\n  return action.payload;\n}));\nexport var transferDataRedux = createReducer(initState.transferData, _defineProperty({}, KEY_STORE.SET_TRANSFER_DATA, function (state, action) {\n  return action.payload;\n}));","map":{"version":3,"sources":["/Users/macbook/Desktop/giveawaypremium-client/controller/Redux/reducers/storageReducers.js"],"names":["createReducer","MessageVI","MessageEN","MessageCN","KEY_STORE","initState","localeJA","lang","messages","localeEN","localeCN","locale","SET_LOCALE","state","action","payload","userData","SET_USER","settingRedux","setting","SET_SETTING","transferDataRedux","transferData","SET_TRANSFER_DATA"],"mappings":";AAAA,OAAOA,aAAP;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;AACA,SAASC,SAAT;AACA,OAAOC,SAAP;AACA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,IAAI,EAAE,IADS;AAEfC,EAAAA,QAAQ,EAAEP;AAFK,CAAjB;AAKA,IAAMQ,QAAQ,GAAG;AACfF,EAAAA,IAAI,EAAE,IADS;AAEfC,EAAAA,QAAQ,EAAEN;AAFK,CAAjB;AAKA,IAAMQ,QAAQ,GAAG;AACfH,EAAAA,IAAI,EAAE,IADS;AAEfC,EAAAA,QAAQ,EAAEL;AAFK,CAAjB;AAKA,OAAO,IAAMQ,MAAM,GAAGX,aAAa,CAACS,QAAD,sBAChCL,SAAS,CAACQ,UADsB,YACTC,KADS,EACFC,MADE,EACM;AACrC,UAAQA,MAAM,CAACC,OAAf;AACA,SAAK,IAAL;AACE,aAAON,QAAP;;AACF,SAAK,IAAL;AACE,aAAOH,QAAP;;AACF,SAAK,IAAL;AACE,aAAOI,QAAP;;AACF;AACE,aAAOD,QAAP;AARF;AAUD,CAZgC,EAA5B;AAeP,OAAO,IAAMO,QAAQ,GAAGhB,aAAa,CAACK,SAAS,CAACW,QAAX,sBAClCZ,SAAS,CAACa,QADwB,YACbJ,KADa,EACNC,MADM,EACE;AACnC,SAAOA,MAAM,CAACC,OAAd;AACD,CAHkC,EAA9B;AAMP,OAAO,IAAMG,YAAY,GAAGlB,aAAa,CAACK,SAAS,CAACc,OAAX,sBACtCf,SAAS,CAACgB,WAD4B,YACdP,KADc,EACPC,MADO,EACC;AACtC,SAAOA,MAAM,CAACC,OAAd;AACD,CAHsC,EAAlC;AAMP,OAAO,IAAMM,iBAAiB,GAAGrB,aAAa,CAACK,SAAS,CAACiB,YAAX,sBAC3ClB,SAAS,CAACmB,iBADiC,YACbV,KADa,EACNC,MADM,EACE;AAC5C,SAAOA,MAAM,CAACC,OAAd;AACD,CAH2C,EAAvC","sourcesContent":["import createReducer from '../lib/reducerConfig'\nimport MessageVI from 'static/Assets/Lang/ja.json'\nimport MessageEN from 'static/Assets/Lang/en.json'\nimport MessageCN from 'static/Assets/Lang/cn.json'\nimport { KEY_STORE } from 'common/constants'\nimport initState from '../lib/initState'\nconst localeJA = {\n  lang: 'ja',\n  messages: MessageVI\n}\n\nconst localeEN = {\n  lang: 'en',\n  messages: MessageEN\n}\n\nconst localeCN = {\n  lang: 'cn',\n  messages: MessageCN\n}\n\nexport const locale = createReducer(localeEN, {\n  [KEY_STORE.SET_LOCALE] (state, action) {\n    switch (action.payload) {\n    case 'en':\n      return localeEN\n    case 'ja':\n      return localeJA\n    case 'cn':\n      return localeCN\n    default:\n      return localeEN\n    }\n  }\n})\n\nexport const userData = createReducer(initState.userData, {\n  [KEY_STORE.SET_USER] (state, action) {\n    return action.payload\n  }\n})\n\nexport const settingRedux = createReducer(initState.setting, {\n  [KEY_STORE.SET_SETTING] (state, action) {\n    return action.payload\n  }\n})\n\nexport const transferDataRedux = createReducer(initState.transferData, {\n  [KEY_STORE.SET_TRANSFER_DATA] (state, action) {\n    return action.payload\n  }\n})"]},"metadata":{},"sourceType":"module"}