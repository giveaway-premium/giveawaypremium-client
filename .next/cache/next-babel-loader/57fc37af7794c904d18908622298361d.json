{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport { Form, Row, Col, Input, Button, Descriptions, Divider, DatePicker, Select } from 'antd';\nimport { images } from \"../../../../../config/images\";\nimport MyModal from \"../../../../Components/MyModal\";\nimport { showNotification } from \"../../../../../common/function\";\nimport { LoadingOutlined, CheckCircleFilled } from '@ant-design/icons';\nimport { Router } from \"../../../../../common/routes\";\nimport { isMobile } from 'react-device-detect';\nimport \"./style.scss\";\nimport Lottie from 'react-lottie';\nimport GapService from \"../../../../../controller/Api/Services/Gap\";\nimport moment from 'moment';\nconst {\n  Option\n} = Select;\nconst dateFormat = 'DD-MM-YYYY';\n\nclass Consignment extends React.PureComponent {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    _defineProperty(this, \"fetchAllTags\", async function () {\n      _this.setState({\n        isLoadingTags: true\n      }, async function () {\n        const res = await GapService.getConsignmentID();\n\n        if (res && res.results && res.results.length > 0) {\n          _this.setState({\n            allInfoTag: res.results.reverse(),\n            isLoadingTags: false\n          }, console.log(_this.state));\n        } else {\n          _this.setState({\n            isLoadingTags: false\n          });\n        }\n      });\n    });\n\n    _defineProperty(this, \"onConsign\", function () {\n      const {\n        userData\n      } = _this.props;\n      const {\n        isFoundUser,\n        objectIdFoundUser,\n        formData,\n        timeGroupId\n      } = _this.state;\n      console.log(userData);\n\n      _this.setState({\n        isConsigning: true\n      }, async function () {\n        console.log('onConsign');\n        console.log(formData);\n        console.log(_this.state);\n\n        if (isFoundUser && objectIdFoundUser) {\n          // for already user\n          console.log('for already user');\n          const result = await GapService.setConsignment(formData, userData.objectId, objectIdFoundUser, timeGroupId);\n          console.log(result);\n\n          if (result && result.objectId) {\n            _this.setState({\n              isShowConfirmForm: true,\n              isConsigning: false\n            }, async function () {\n              const customerFormData = {\n                consignerName: formData.consignerName,\n                phoneNumber: formData.phoneNumber,\n                consignerIdCard: formData.consignerIdCard,\n                mail: formData.mail,\n                email: formData.mail || 'nothing@giveaway.com',\n                birthday: formData.birthday,\n                bankName: formData.bankName,\n                bankId: formData.bankId\n              };\n              console.log('udpate user');\n              console.log(customerFormData);\n              console.log(objectIdFoundUser);\n              GapService.updateCustomer(customerFormData, objectIdFoundUser);\n            });\n          } else {\n            showNotification('Tạo Đơn Ký gửi thất bại');\n          }\n        } else {\n          // for new user\n          console.log('for new user');\n          const customerFormData = {\n            consignerName: formData.consignerName,\n            phoneNumber: formData.phoneNumber,\n            consignerIdCard: formData.consignerIdCard,\n            mail: formData.mail,\n            email: formData.mail || 'nothing@giveaway.com',\n            username: formData.phoneNumber,\n            password: formData.consignerIdCard,\n            birthday: formData.birthday,\n            bankName: formData.bankName,\n            bankId: formData.bankId\n          };\n          console.log('create user');\n          console.log(customerFormData);\n          const resCus = await GapService.setCustomer(customerFormData);\n          console.log(resCus);\n\n          if (resCus && resCus.objectId) {\n            showNotification('Thêm khách hàng thành công');\n            const result = await GapService.setConsignment(formData, userData.objectId, resCus.objectId, timeGroupId);\n            console.log(result);\n\n            if (result && result.objectId) {\n              _this.setState({\n                isShowConfirmForm: true,\n                isConsigning: false\n              });\n            }\n          } else {\n            showNotification('Tạo khách hàng thất bại');\n          }\n        }\n      });\n    });\n\n    _defineProperty(this, \"fetchUserByPhoneNumber\", async function (phoneKey) {\n      const {\n        formData\n      } = _this.state;\n      console.log('phoneKey.target.value');\n      console.log(phoneKey.target.value);\n\n      if (phoneKey && phoneKey.target && phoneKey.target.value && phoneKey.target.value.length >= 10) {\n        console.log('fetchUserByPhoneNumber run');\n\n        _this.setState({\n          isLoadingUser: true\n        });\n\n        const res = await GapService.getCustomer(phoneKey.target.value);\n        console.log('fetchUserByPhoneNumber finish');\n        console.log(res);\n\n        if (res && res.results && res.results[0]) {\n          console.log('fetchUserByPhoneNumber set form');\n\n          _this.setState({\n            formData: _objectSpread({}, _this.state.formData, {\n              consignerName: res.results[0].fullName,\n              phoneNumber: res.results[0].phoneNumber,\n              consignerIdCard: res.results[0].identityNumber,\n              mail: res.results[0].mail,\n              birthday: res.results[0].birthday,\n              bankName: res.results[0].banks[0] ? res.results[0].banks[0].type : '',\n              bankId: res.results[0].banks[0] ? res.results[0].banks[0].accNumber : '',\n              numberOfConsignment: res.results[0].numberOfConsignment || 0,\n              numberOfConsignmentTime: res.results[0].numberOfConsignmentTime || 0\n            }),\n            birthday: res.results[0].birthday,\n            isFoundUser: true,\n            isLoadingUser: false,\n            objectIdFoundUser: res.results[0].objectId\n          }, function () {\n            console.log(_this.state);\n          });\n        } else {\n          _this.setState({\n            isFoundUser: false,\n            isLoadingUser: false\n          });\n        }\n      } else if (phoneKey && phoneKey.target && phoneKey.target.value && phoneKey.target.value.length < 10) {\n        console.log('fetchUserByPhoneNumber == 0'); // this.onRefeshAll()\n\n        _this.setState({\n          formData: _objectSpread({}, _this.state.formData, {\n            consignerName: '',\n            phoneNumber: phoneKey.target.value,\n            consignerIdCard: '',\n            mail: '',\n            birthday: moment(),\n            bankName: '',\n            bankId: '',\n            consignmentId: ''\n          }),\n          objectIdFoundUser: '',\n          birthday: moment(),\n          isShowConfirmForm: false,\n          isFoundUser: false\n        }); // this.setState({\n        //   allInfoTag: [],\n        //   formData: {\n        //     consigneeName: this.props.userData.name || '',\n        //     consignerName: '',\n        //     phoneNumber: phoneKey.target.value,\n        //     consignerIdCard: '',\n        //     mail: '',\n        //     birthday: moment(),\n        //     bankName: '',\n        //     bankId: '',\n        //     numberOfProducts: 1,\n        //     consignmentId: '',\n        //     timeGetMoney: moment().format('MM-YYYY'),\n        //     numberOfConsignmentTime: 0,\n        //     numberOfConsignment: 0\n        //   },\n        //   isLoadingTags: false,\n        //   objectIdFoundUser: '',\n        //   birthday: moment(),\n        //   isConsigning: false,\n        //   isShowConfirmForm: false,\n        //   isFoundUser: false,\n        //   isLoadingUser: false\n        // })\n\n      } else {\n        console.log('fetchUserByPhoneNumber dont run 2');\n\n        _this.setState({\n          formData: _objectSpread({}, _this.state.formData, {\n            consignerName: '',\n            phoneNumber: phoneKey.target.value,\n            consignerIdCard: '',\n            mail: '',\n            birthday: moment(),\n            bankName: '',\n            bankId: '',\n            consignmentId: ''\n          }),\n          objectIdFoundUser: '',\n          birthday: moment(),\n          isShowConfirmForm: false,\n          isFoundUser: false\n        }); // this.onRefeshAll()\n\n      }\n    });\n\n    _defineProperty(this, \"onRefeshAll\", function () {\n      _this.setState({\n        allInfoTag: [],\n        formData: {\n          consigneeName: _this.props.userData.name || '',\n          consignerName: '',\n          phoneNumber: '',\n          consignerIdCard: '',\n          mail: '',\n          birthday: moment(),\n          bankName: '',\n          bankId: '',\n          numberOfProducts: 1,\n          consignmentId: '',\n          timeGetMoney: moment().format('MM-YYYY'),\n          numberOfConsignmentTime: 0,\n          numberOfConsignment: 0\n        },\n        isLoadingTags: false,\n        objectIdFoundUser: '',\n        birthday: moment(),\n        isConsigning: false,\n        isShowConfirmForm: false,\n        isFoundUser: false,\n        isLoadingUser: false\n      });\n    });\n\n    _defineProperty(this, \"onChangeBirthday\", function (value) {\n      try {\n        const formatTime = moment(value).format('DD-MM-YYYY');\n        console.log(formatTime);\n        console.log(value);\n\n        _this.setState({\n          formData: _objectSpread({}, _this.state.formData, {\n            birthday: formatTime\n          }),\n          birthday: formatTime\n        }, function () {\n          console.log(_this.state);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    });\n\n    _defineProperty(this, \"changeData\", function (value) {\n      console.log(value.target.id);\n      const {\n        formData\n      } = _this.state;\n\n      _this.setState({\n        formData: _objectSpread({}, formData, {\n          [value.target.id]: value.target.value\n        })\n      }, function () {\n        return console.log(_this.state);\n      });\n    });\n\n    _defineProperty(this, \"onChangeTimeGetMoney\", function (value) {\n      const {\n        formData,\n        allInfoTag\n      } = _this.state;\n      console.log('onChangeTimeGetMoney');\n      console.log(value);\n      const findTag = allInfoTag.filter(function (tag) {\n        return tag.code === value;\n      });\n\n      if (findTag && findTag[0]) {\n        _this.setState({\n          formData: _objectSpread({}, formData, {\n            timeGetMoney: findTag[0].timeGetMoney\n          }),\n          timeGroupId: findTag[0].code\n        }, function () {\n          console.log(_this.state);\n        });\n      }\n    });\n\n    this.state = {\n      allInfoTag: [],\n      formData: {\n        consigneeName: this.props.userData.name || '',\n        consignerName: '',\n        phoneNumber: '',\n        consignerIdCard: '',\n        mail: '',\n        birthday: moment(),\n        bankName: '',\n        bankId: '',\n        numberOfProducts: 1,\n        consignmentId: '',\n        timeGetMoney: moment().format('DD-MM-YYYY'),\n        numberOfConsignmentTime: 0,\n        numberOfConsignment: 0\n      },\n      isLoadingTags: false,\n      objectIdFoundUser: '',\n      birthday: moment(),\n      isConsigning: false,\n      isShowConfirmForm: false,\n      isFoundUser: false,\n      isLoadingUser: false\n    };\n    this.formRef = /*#__PURE__*/React.createRef();\n    this.myModal = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchAllTags();\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    var _this2 = this;\n\n    const {\n      userData\n    } = this.props;\n    const {\n      formData,\n      isConsigning,\n      isShowConfirmForm,\n      birthday,\n      isLoadingUser,\n      isFoundUser,\n      isLoadingTags,\n      allInfoTag\n    } = this.state;\n    const layout = {\n      labelCol: {\n        span: 9\n      },\n      wrapperCol: {\n        span: 15\n      }\n    }; // const defaultOptions = {\n    //   loop: false,\n    //   autoplay: true,\n    //   animationData: images.consignmentForm\n    // }\n\n    const defaultOptionsSuccess = {\n      loop: false,\n      autoplay: true,\n      animationData: images.successJson\n    };\n    return __jsx(\"div\", {\n      className: \"consignment-container\"\n    }, isShowConfirmForm ? __jsx(React.Fragment, null, __jsx(Lottie, {\n      options: defaultOptionsSuccess,\n      height: 150,\n      width: 150,\n      isStopped: false,\n      isPaused: false\n    }), __jsx(Row, {\n      justify: \"center\"\n    }, __jsx(Col, {\n      span: 20\n    }, __jsx(Descriptions, null, __jsx(Descriptions.Item, {\n      span: 24,\n      label: \"M\\xE3 K\\xFD g\\u1EEDi\"\n    }, formData.consignmentId), __jsx(Descriptions.Item, {\n      span: 24,\n      label: \"S\\u1ED1 l\\u01B0\\u1EE3ng H\\xE0ng Ho\\xE1\"\n    }, formData.numberOfProducts), __jsx(Descriptions.Item, {\n      span: 24,\n      label: \"Ng\\xE0y tr\\u1EA3 ti\\u1EC1n\"\n    }, formData.timeGetMoney), __jsx(Descriptions.Item, {\n      span: 24,\n      label: \"T\\xEAn Kh\\xE1ch H\\xE0ng\"\n    }, formData.consignerName), __jsx(Descriptions.Item, {\n      span: 24,\n      label: \"T\\xEAn Nh\\xE2n Vi\\xEAn\"\n    }, formData.consigneeName), __jsx(Descriptions.Item, {\n      span: 24,\n      label: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"\n    }, formData.phoneNumber), __jsx(Descriptions.Item, {\n      span: 24,\n      label: \"Email\"\n    }, formData.mail), __jsx(Descriptions.Item, {\n      span: 24,\n      label: \"Ng\\xE2n h\\xE0ng\"\n    }, formData.bankName), __jsx(Descriptions.Item, {\n      span: 24,\n      label: \"ID Ng\\xE2n h\\xE0ng\"\n    }, formData.bankId), __jsx(Descriptions.Item, {\n      span: 24,\n      label: \"Ch\\u1EE9ng minh th\\u01B0\"\n    }, formData.consignerIdCard), __jsx(Descriptions.Item, {\n      span: 24,\n      label: \"Sinh nh\\u1EADt\"\n    }, moment(formData.birthday).format('DD-MM-YYYY'))))), __jsx(Button, {\n      className: \"MT20\",\n      onClick: this.onRefeshAll\n    }, \"Quay l\\u1EA1i\")) : __jsx(React.Fragment, null, __jsx(Form, _extends({\n      ref: this.formRef\n    }, layout, {\n      name: \"consignment\",\n      initialValues: formData // onFinish={this.onFinish}\n      ,\n      onFinish: this.onConsign,\n      onValuesChange: function (changedValues, allValues) {\n        console.log(changedValues);\n\n        _this2.setState({\n          formData: _objectSpread({}, formData, changedValues)\n        }, function () {\n          return console.log(_this2.state);\n        });\n      }\n    }), __jsx(Row, {\n      className: \"flex sell-card-form PT40 PB35\",\n      justify: \"center\"\n    }, __jsx(Form.Item, {\n      name: \"phoneNumber\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập số điện thoại'\n      }],\n      label: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"\n    }, __jsx(Col, {\n      sm: 24,\n      md: 12\n    }, __jsx(Input, {\n      value: formData.phoneNumber,\n      maxLength: 12,\n      allowClear: true,\n      onChange: this.fetchUserByPhoneNumber,\n      style: {\n        minWidth: 100\n      },\n      placeholder: \"...\",\n      suffix: isLoadingUser ? __jsx(LoadingOutlined, null) : isFoundUser ? __jsx(CheckCircleFilled, null) : null\n    }))), __jsx(Form.Item, {\n      name: \"consignerName\",\n      rules: [{\n        required: !isFoundUser,\n        message: 'Vui lòng nhập tên khách hàng'\n      }],\n      label: \"T\\xEAn Kh\\xE1ch H\\xE0ng\"\n    }, __jsx(Col, {\n      sm: 24,\n      md: 24\n    }, __jsx(Input, {\n      disabled: !formData.phoneNumber || formData.phoneNumber.length < 10,\n      value: formData.consignerName,\n      id: \"consignerName\",\n      key: \"consignerName\",\n      allowClear: true,\n      onChange: this.changeData,\n      placeholder: \"...\"\n    }))), __jsx(Form.Item, {\n      name: \"consignerIdCard\",\n      rules: [{\n        required: !isFoundUser,\n        message: 'Vui lòng nhập chứng minh thư'\n      }],\n      label: \"CMND\"\n    }, __jsx(Col, {\n      sm: 24,\n      md: 12\n    }, __jsx(Input, {\n      disabled: !formData.phoneNumber || formData.phoneNumber.length < 10,\n      value: formData.consignerIdCard,\n      id: \"consignerIdCard\",\n      key: \"consignerIdCard\",\n      onChange: this.changeData,\n      allowClear: true,\n      placeholder: \"...\"\n    }))), __jsx(Form.Item, {\n      name: \"mail\",\n      rules: [{\n        required: !isFoundUser,\n        type: 'email',\n        message: 'Email không hợp lệ'\n      }],\n      label: \"Email\"\n    }, __jsx(Col, {\n      sm: 24,\n      md: 24\n    }, __jsx(Input, {\n      disabled: !formData.phoneNumber || formData.phoneNumber.length < 10,\n      value: formData.mail,\n      id: \"mail\",\n      key: \"mail\",\n      onChange: this.changeData,\n      allowClear: true,\n      placeholder: \"...\"\n    }))), __jsx(Form.Item, {\n      name: \"bankName\",\n      rules: [{\n        required: !isFoundUser,\n        message: 'Vui lòng nhập tên ngân hàng'\n      }],\n      label: \"Ng\\xE2n h\\xE0ng\"\n    }, __jsx(Col, {\n      sm: 24,\n      md: 24\n    }, __jsx(Input, {\n      disabled: !formData.phoneNumber || formData.phoneNumber.length < 10,\n      value: formData.bankName,\n      id: \"bankName\",\n      key: \"bankName\",\n      onChange: this.changeData,\n      allowClear: true,\n      placeholder: \"...\"\n    }))), __jsx(Form.Item, {\n      name: \"bankId\",\n      rules: [{\n        required: !isFoundUser,\n        message: 'Vui lòng nhập id ngân hàng'\n      }],\n      label: \"ID Ng\\xE2n h\\xE0ng\"\n    }, __jsx(Col, {\n      sm: 24,\n      md: 12\n    }, __jsx(Input, {\n      disabled: !formData.phoneNumber || formData.phoneNumber.length < 10,\n      value: formData.bankId,\n      id: \"bankId\",\n      key: \"bankId\",\n      onChange: this.changeData,\n      type: 'number',\n      allowClear: true,\n      placeholder: \"...\"\n    }))), __jsx(Form.Item, {\n      name: \"birthday\",\n      label: \"Sinh nh\\u1EADt\"\n    }, __jsx(Col, {\n      sm: 24,\n      md: 12\n    }, __jsx(DatePicker, {\n      disabled: !formData.phoneNumber || formData.phoneNumber.length < 10,\n      id: \"birthday\",\n      key: \"birthday\",\n      defaultValue: moment(),\n      value: moment(formData.birthday, dateFormat),\n      onChange: this.onChangeBirthday,\n      format: dateFormat,\n      placeholder: dateFormat,\n      style: {\n        width: '100%'\n      }\n    }))), __jsx(Divider, null), __jsx(Form.Item, {\n      name: \"consignmentId\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập mã ký gửi'\n      }],\n      label: \"M\\xE3 k\\xFD g\\u1EEDi\"\n    }, __jsx(Col, {\n      sm: 24,\n      md: 12\n    }, __jsx(Input, {\n      allowClear: true,\n      id: \"consignmentId\",\n      key: \"consignmentId\",\n      onChange: this.changeData,\n      placeholder: \"...\"\n    }))), __jsx(Form.Item, {\n      name: \"numberOfProducts\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập số lượng'\n      }],\n      label: \"S\\u1ED1 l\\u01B0\\u1EE3ng H\\xE0ng Ho\\xE1\"\n    }, __jsx(Col, {\n      sm: 24,\n      md: 12\n    }, __jsx(Input, {\n      defaultValue: 1,\n      type: 'number',\n      id: \"numberOfProducts\",\n      key: \"numberOfProducts\",\n      onChange: this.changeData,\n      allowClear: true,\n      placeholder: \"...\"\n    }))), __jsx(Form.Item, {\n      label: \"Ng\\xE0y tr\\u1EA3 ti\\u1EC1n\"\n    }, __jsx(Input.Group, {\n      compact: true\n    }, __jsx(Select, {\n      onChange: this.onChangeTimeGetMoney,\n      defaultValue: allInfoTag && allInfoTag[0] && allInfoTag[0].name,\n      size: \"large\",\n      loading: isLoadingTags,\n      id: \"timeGetMoney\",\n      key: \"timeGetMoney\",\n      placeholder: \"...\"\n    }, isLoadingTags ? null : allInfoTag.map(function (tag) {\n      return __jsx(React.Fragment, null, __jsx(Option, {\n        style: {\n          width: '100px'\n        },\n        value: tag.code\n      }, tag.code));\n    })), __jsx(Input, {\n      disabled: true,\n      style: {\n        width: '50%'\n      },\n      value: formData.timeGetMoney,\n      defaultValue: moment().format('DD-MM-YYYY')\n    }))), __jsx(Form.Item, {\n      name: \"consigneeName\",\n      label: \"T\\xEAn Nh\\xE2n Vi\\xEAn\"\n    }, __jsx(Input, {\n      defaultValue: userData.name,\n      id: \"consigneeName\",\n      key: \"consigneeName\",\n      value: userData.name,\n      disabled: true,\n      placeholder: userData.name\n    })), __jsx(Form.Item, {\n      className: \"button-confirm-box MT20 MB40\"\n    }, __jsx(Button, {\n      disabled: isLoadingTags || isLoadingUser || !formData.phoneNumber,\n      loading: isConsigning,\n      type: \"primary\",\n      htmlType: \"submit\"\n    }, \"X\\xE1c nh\\u1EADn\"))))), __jsx(MyModal, {\n      ref: this.myModal\n    }));\n  }\n\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    locale: state.locale,\n    userData: state.userData\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(Consignment));","map":{"version":3,"sources":["/Users/macbook/Desktop/giveawaypremium-client/pages/Screen/DashBoard/components/Consignment/index.js"],"names":["React","withRouter","connect","Form","Row","Col","Input","Button","Descriptions","Divider","DatePicker","Select","images","MyModal","showNotification","LoadingOutlined","CheckCircleFilled","Router","isMobile","Lottie","GapService","moment","Option","dateFormat","Consignment","PureComponent","constructor","props","setState","isLoadingTags","res","getConsignmentID","results","length","allInfoTag","reverse","console","log","state","userData","isFoundUser","objectIdFoundUser","formData","timeGroupId","isConsigning","result","setConsignment","objectId","isShowConfirmForm","customerFormData","consignerName","phoneNumber","consignerIdCard","mail","email","birthday","bankName","bankId","updateCustomer","username","password","resCus","setCustomer","phoneKey","target","value","isLoadingUser","getCustomer","fullName","identityNumber","banks","type","accNumber","numberOfConsignment","numberOfConsignmentTime","consignmentId","consigneeName","name","numberOfProducts","timeGetMoney","format","formatTime","e","id","findTag","filter","tag","code","formRef","createRef","myModal","componentDidMount","fetchAllTags","componentDidUpdate","render","layout","labelCol","span","wrapperCol","defaultOptionsSuccess","loop","autoplay","animationData","successJson","onRefeshAll","onConsign","changedValues","allValues","required","message","fetchUserByPhoneNumber","minWidth","changeData","onChangeBirthday","width","onChangeTimeGetMoney","map","mapStateToProps","locale"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,KAAzB,EAAgCC,MAAhC,EAAwCC,YAAxC,EAAsDC,OAAtD,EAA+DC,UAA/D,EAA2EC,MAA3E,QAAyF,MAAzF;AACA,SAASC,MAAT;AACA,OAAOC,OAAP;AACA,SAASC,gBAAT;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,mBAAnD;AACA,SAASC,MAAT;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaX,MAAnB;AAEA,MAAMY,UAAU,GAAG,YAAnB;;AACA,MAAMC,WAAN,SAA0BxB,KAAK,CAACyB,aAAhC,CAA8C;AAC5CC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAAA;;AAClB,UAAMA,KAAN,CADkB;AAAA;;AAAA,0CAuCL,kBAAY;AACzB,MAAA,KAAI,CAACC,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAE;AADH,OAAd,EAEG,kBAAY;AACb,cAAMC,GAAG,GAAG,MAAMV,UAAU,CAACW,gBAAX,EAAlB;;AACA,YAAID,GAAG,IAAIA,GAAG,CAACE,OAAX,IAAsBF,GAAG,CAACE,OAAJ,CAAYC,MAAZ,GAAqB,CAA/C,EAAkD;AAChD,UAAA,KAAI,CAACL,QAAL,CAAc;AACZM,YAAAA,UAAU,EAAEJ,GAAG,CAACE,OAAJ,CAAYG,OAAZ,EADA;AAEZN,YAAAA,aAAa,EAAE;AAFH,WAAd,EAGGO,OAAO,CAACC,GAAR,CAAY,KAAI,CAACC,KAAjB,CAHH;AAID,SALD,MAKO;AACL,UAAA,KAAI,CAACV,QAAL,CAAc;AACZC,YAAAA,aAAa,EAAE;AADH,WAAd;AAGD;AACF,OAdD;AAeD,KAvDmB;;AAAA,uCAyDR,YAAM;AAChB,YAAM;AAAEU,QAAAA;AAAF,UAAe,KAAI,CAACZ,KAA1B;AACA,YAAM;AAAEa,QAAAA,WAAF;AAAeC,QAAAA,iBAAf;AAAkCC,QAAAA,QAAlC;AAA4CC,QAAAA;AAA5C,UAA4D,KAAI,CAACL,KAAvE;AAEAF,MAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;;AACA,MAAA,KAAI,CAACX,QAAL,CAAc;AACZgB,QAAAA,YAAY,EAAE;AADF,OAAd,EAEG,kBAAY;AACbR,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACC,KAAjB;;AACA,YAAIE,WAAW,IAAIC,iBAAnB,EAAsC;AAAE;AACtCL,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,gBAAMQ,MAAM,GAAG,MAAMzB,UAAU,CAAC0B,cAAX,CAA0BJ,QAA1B,EAAoCH,QAAQ,CAACQ,QAA7C,EAAuDN,iBAAvD,EAA0EE,WAA1E,CAArB;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;;AACA,cAAIA,MAAM,IAAIA,MAAM,CAACE,QAArB,EAA+B;AAC7B,YAAA,KAAI,CAACnB,QAAL,CAAc;AACZoB,cAAAA,iBAAiB,EAAE,IADP;AAEZJ,cAAAA,YAAY,EAAE;AAFF,aAAd,EAGG,kBAAY;AACb,oBAAMK,gBAAgB,GAAG;AACvBC,gBAAAA,aAAa,EAAER,QAAQ,CAACQ,aADD;AAEvBC,gBAAAA,WAAW,EAAET,QAAQ,CAACS,WAFC;AAGvBC,gBAAAA,eAAe,EAAEV,QAAQ,CAACU,eAHH;AAIvBC,gBAAAA,IAAI,EAAEX,QAAQ,CAACW,IAJQ;AAKvBC,gBAAAA,KAAK,EAAEZ,QAAQ,CAACW,IAAT,IAAiB,sBALD;AAMvBE,gBAAAA,QAAQ,EAAEb,QAAQ,CAACa,QANI;AAOvBC,gBAAAA,QAAQ,EAAEd,QAAQ,CAACc,QAPI;AAQvBC,gBAAAA,MAAM,EAAEf,QAAQ,CAACe;AARM,eAAzB;AAUArB,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAYY,gBAAZ;AACAb,cAAAA,OAAO,CAACC,GAAR,CAAYI,iBAAZ;AAEArB,cAAAA,UAAU,CAACsC,cAAX,CAA0BT,gBAA1B,EAA4CR,iBAA5C;AACD,aAnBD;AAoBD,WArBD,MAqBO;AACL3B,YAAAA,gBAAgB,CAAC,yBAAD,CAAhB;AACD;AACF,SA5BD,MA4BO;AAAE;AACPsB,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEA,gBAAMY,gBAAgB,GAAG;AACvBC,YAAAA,aAAa,EAAER,QAAQ,CAACQ,aADD;AAEvBC,YAAAA,WAAW,EAAET,QAAQ,CAACS,WAFC;AAGvBC,YAAAA,eAAe,EAAEV,QAAQ,CAACU,eAHH;AAIvBC,YAAAA,IAAI,EAAEX,QAAQ,CAACW,IAJQ;AAKvBC,YAAAA,KAAK,EAAEZ,QAAQ,CAACW,IAAT,IAAiB,sBALD;AAMvBM,YAAAA,QAAQ,EAAEjB,QAAQ,CAACS,WANI;AAOvBS,YAAAA,QAAQ,EAAElB,QAAQ,CAACU,eAPI;AAQvBG,YAAAA,QAAQ,EAAEb,QAAQ,CAACa,QARI;AASvBC,YAAAA,QAAQ,EAAEd,QAAQ,CAACc,QATI;AAUvBC,YAAAA,MAAM,EAAEf,QAAQ,CAACe;AAVM,WAAzB;AAYArB,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYY,gBAAZ;AACA,gBAAMY,MAAM,GAAG,MAAMzC,UAAU,CAAC0C,WAAX,CAAuBb,gBAAvB,CAArB;AAEAb,UAAAA,OAAO,CAACC,GAAR,CAAYwB,MAAZ;;AAEA,cAAIA,MAAM,IAAIA,MAAM,CAACd,QAArB,EAA+B;AAC7BjC,YAAAA,gBAAgB,CAAC,4BAAD,CAAhB;AACA,kBAAM+B,MAAM,GAAG,MAAMzB,UAAU,CAAC0B,cAAX,CAA0BJ,QAA1B,EAAoCH,QAAQ,CAACQ,QAA7C,EAAuDc,MAAM,CAACd,QAA9D,EAAwEJ,WAAxE,CAArB;AACAP,YAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;;AAEA,gBAAIA,MAAM,IAAIA,MAAM,CAACE,QAArB,EAA+B;AAC7B,cAAA,KAAI,CAACnB,QAAL,CAAc;AACZoB,gBAAAA,iBAAiB,EAAE,IADP;AAEZJ,gBAAAA,YAAY,EAAE;AAFF,eAAd;AAID;AACF,WAXD,MAWO;AACL9B,YAAAA,gBAAgB,CAAC,yBAAD,CAAhB;AACD;AACF;AACF,OAtED;AAuED,KArImB;;AAAA,oDAuIK,gBAAOiD,QAAP,EAAoB;AAC3C,YAAM;AAAErB,QAAAA;AAAF,UAAe,KAAI,CAACJ,KAA1B;AAEAF,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAQ,CAACC,MAAT,CAAgBC,KAA5B;;AAEA,UAAIF,QAAQ,IAAIA,QAAQ,CAACC,MAArB,IAA+BD,QAAQ,CAACC,MAAT,CAAgBC,KAA/C,IAAwDF,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsBhC,MAAtB,IAAgC,EAA5F,EAAgG;AAC9FG,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;;AACA,QAAA,KAAI,CAACT,QAAL,CAAc;AACZsC,UAAAA,aAAa,EAAE;AADH,SAAd;;AAIA,cAAMpC,GAAG,GAAG,MAAMV,UAAU,CAAC+C,WAAX,CAAuBJ,QAAQ,CAACC,MAAT,CAAgBC,KAAvC,CAAlB;AACA7B,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;;AACA,YAAIA,GAAG,IAAIA,GAAG,CAACE,OAAX,IAAsBF,GAAG,CAACE,OAAJ,CAAY,CAAZ,CAA1B,EAA0C;AACxCI,UAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;;AAEA,UAAA,KAAI,CAACT,QAAL,CAAc;AACZc,YAAAA,QAAQ,oBACH,KAAI,CAACJ,KAAL,CAAWI,QADR;AAENQ,cAAAA,aAAa,EAAEpB,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeoC,QAFxB;AAGNjB,cAAAA,WAAW,EAAErB,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAemB,WAHtB;AAINC,cAAAA,eAAe,EAAEtB,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeqC,cAJ1B;AAKNhB,cAAAA,IAAI,EAAEvB,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeqB,IALf;AAMNE,cAAAA,QAAQ,EAAEzB,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeuB,QANnB;AAONC,cAAAA,QAAQ,EAAE1B,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAesC,KAAf,CAAqB,CAArB,IAA0BxC,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAesC,KAAf,CAAqB,CAArB,EAAwBC,IAAlD,GAAyD,EAP7D;AAQNd,cAAAA,MAAM,EAAE3B,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAesC,KAAf,CAAqB,CAArB,IAA0BxC,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAesC,KAAf,CAAqB,CAArB,EAAwBE,SAAlD,GAA8D,EARhE;AASNC,cAAAA,mBAAmB,EAAE3C,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeyC,mBAAf,IAAsC,CATrD;AAUNC,cAAAA,uBAAuB,EAAE5C,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAe0C,uBAAf,IAA0C;AAV7D,cADI;AAaZnB,YAAAA,QAAQ,EAAEzB,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeuB,QAbb;AAcZf,YAAAA,WAAW,EAAE,IAdD;AAeZ0B,YAAAA,aAAa,EAAE,KAfH;AAgBZzB,YAAAA,iBAAiB,EAAEX,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAee;AAhBtB,WAAd,EAiBG,YAAM;AACPX,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACC,KAAjB;AACD,WAnBD;AAoBD,SAvBD,MAuBO;AACL,UAAA,KAAI,CAACV,QAAL,CAAc;AACZY,YAAAA,WAAW,EAAE,KADD;AAEZ0B,YAAAA,aAAa,EAAE;AAFH,WAAd;AAID;AACF,OAtCD,MAsCO,IAAIH,QAAQ,IAAIA,QAAQ,CAACC,MAArB,IAA+BD,QAAQ,CAACC,MAAT,CAAgBC,KAA/C,IAAwDF,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsBhC,MAAtB,GAA+B,EAA3F,EAA+F;AACpGG,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EADoG,CAEpG;;AACA,QAAA,KAAI,CAACT,QAAL,CAAc;AACZc,UAAAA,QAAQ,oBACH,KAAI,CAACJ,KAAL,CAAWI,QADR;AAENQ,YAAAA,aAAa,EAAE,EAFT;AAGNC,YAAAA,WAAW,EAAEY,QAAQ,CAACC,MAAT,CAAgBC,KAHvB;AAINb,YAAAA,eAAe,EAAE,EAJX;AAKNC,YAAAA,IAAI,EAAE,EALA;AAMNE,YAAAA,QAAQ,EAAElC,MAAM,EANV;AAONmC,YAAAA,QAAQ,EAAE,EAPJ;AAQNC,YAAAA,MAAM,EAAE,EARF;AASNkB,YAAAA,aAAa,EAAE;AATT,YADI;AAYZlC,UAAAA,iBAAiB,EAAE,EAZP;AAaZc,UAAAA,QAAQ,EAAElC,MAAM,EAbJ;AAcZ2B,UAAAA,iBAAiB,EAAE,KAdP;AAeZR,UAAAA,WAAW,EAAE;AAfD,SAAd,EAHoG,CAoBpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,OA7CM,MA6CA;AACLJ,QAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;;AACA,QAAA,KAAI,CAACT,QAAL,CAAc;AACZc,UAAAA,QAAQ,oBACH,KAAI,CAACJ,KAAL,CAAWI,QADR;AAENQ,YAAAA,aAAa,EAAE,EAFT;AAGNC,YAAAA,WAAW,EAAEY,QAAQ,CAACC,MAAT,CAAgBC,KAHvB;AAINb,YAAAA,eAAe,EAAE,EAJX;AAKNC,YAAAA,IAAI,EAAE,EALA;AAMNE,YAAAA,QAAQ,EAAElC,MAAM,EANV;AAONmC,YAAAA,QAAQ,EAAE,EAPJ;AAQNC,YAAAA,MAAM,EAAE,EARF;AASNkB,YAAAA,aAAa,EAAE;AATT,YADI;AAYZlC,UAAAA,iBAAiB,EAAE,EAZP;AAaZc,UAAAA,QAAQ,EAAElC,MAAM,EAbJ;AAcZ2B,UAAAA,iBAAiB,EAAE,KAdP;AAeZR,UAAAA,WAAW,EAAE;AAfD,SAAd,EAFK,CAmBL;;AACD;AACF,KArPmB;;AAAA,yCAuPN,YAAM;AAClB,MAAA,KAAI,CAACZ,QAAL,CAAc;AACZM,QAAAA,UAAU,EAAE,EADA;AAEZQ,QAAAA,QAAQ,EAAE;AACRkC,UAAAA,aAAa,EAAE,KAAI,CAACjD,KAAL,CAAWY,QAAX,CAAoBsC,IAApB,IAA4B,EADnC;AAER3B,UAAAA,aAAa,EAAE,EAFP;AAGRC,UAAAA,WAAW,EAAE,EAHL;AAIRC,UAAAA,eAAe,EAAE,EAJT;AAKRC,UAAAA,IAAI,EAAE,EALE;AAMRE,UAAAA,QAAQ,EAAElC,MAAM,EANR;AAORmC,UAAAA,QAAQ,EAAE,EAPF;AAQRC,UAAAA,MAAM,EAAE,EARA;AASRqB,UAAAA,gBAAgB,EAAE,CATV;AAURH,UAAAA,aAAa,EAAE,EAVP;AAWRI,UAAAA,YAAY,EAAE1D,MAAM,GAAG2D,MAAT,CAAgB,SAAhB,CAXN;AAYRN,UAAAA,uBAAuB,EAAE,CAZjB;AAaRD,UAAAA,mBAAmB,EAAE;AAbb,SAFE;AAiBZ5C,QAAAA,aAAa,EAAE,KAjBH;AAkBZY,QAAAA,iBAAiB,EAAE,EAlBP;AAmBZc,QAAAA,QAAQ,EAAElC,MAAM,EAnBJ;AAoBZuB,QAAAA,YAAY,EAAE,KApBF;AAqBZI,QAAAA,iBAAiB,EAAE,KArBP;AAsBZR,QAAAA,WAAW,EAAE,KAtBD;AAuBZ0B,QAAAA,aAAa,EAAE;AAvBH,OAAd;AAyBD,KAjRmB;;AAAA,8CAmRD,UAACD,KAAD,EAAW;AAC5B,UAAI;AACF,cAAMgB,UAAU,GAAG5D,MAAM,CAAC4C,KAAD,CAAN,CAAce,MAAd,CAAqB,YAArB,CAAnB;AACA5C,QAAAA,OAAO,CAACC,GAAR,CAAY4C,UAAZ;AACA7C,QAAAA,OAAO,CAACC,GAAR,CAAY4B,KAAZ;;AAEA,QAAA,KAAI,CAACrC,QAAL,CAAc;AACZc,UAAAA,QAAQ,oBACH,KAAI,CAACJ,KAAL,CAAWI,QADR;AAENa,YAAAA,QAAQ,EAAE0B;AAFJ,YADI;AAKZ1B,UAAAA,QAAQ,EAAE0B;AALE,SAAd,EAMG,YAAM;AACP7C,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACC,KAAjB;AACD,SARD;AASD,OAdD,CAcE,OAAO4C,CAAP,EAAU;AACV9C,QAAAA,OAAO,CAACC,GAAR,CAAY6C,CAAZ;AACD;AACF,KArSmB;;AAAA,wCAuSP,UAACjB,KAAD,EAAW;AACtB7B,MAAAA,OAAO,CAACC,GAAR,CAAY4B,KAAK,CAACD,MAAN,CAAamB,EAAzB;AACA,YAAM;AAAEzC,QAAAA;AAAF,UAAe,KAAI,CAACJ,KAA1B;;AAEA,MAAA,KAAI,CAACV,QAAL,CAAc;AACZc,QAAAA,QAAQ,oBACHA,QADG;AAEN,WAACuB,KAAK,CAACD,MAAN,CAAamB,EAAd,GAAmBlB,KAAK,CAACD,MAAN,CAAaC;AAF1B;AADI,OAAd,EAKG;AAAA,eAAM7B,OAAO,CAACC,GAAR,CAAY,KAAI,CAACC,KAAjB,CAAN;AAAA,OALH;AAMD,KAjTmB;;AAAA,kDAmTG,UAAC2B,KAAD,EAAW;AAChC,YAAM;AAAEvB,QAAAA,QAAF;AAAYR,QAAAA;AAAZ,UAA2B,KAAI,CAACI,KAAtC;AAEAF,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY4B,KAAZ;AACA,YAAMmB,OAAO,GAAGlD,UAAU,CAACmD,MAAX,CAAkB,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,KAAatB,KAAjB;AAAA,OAArB,CAAhB;;AAEA,UAAImB,OAAO,IAAIA,OAAO,CAAC,CAAD,CAAtB,EAA2B;AACzB,QAAA,KAAI,CAACxD,QAAL,CAAc;AACZc,UAAAA,QAAQ,oBACHA,QADG;AAENqC,YAAAA,YAAY,EAAEK,OAAO,CAAC,CAAD,CAAP,CAAWL;AAFnB,YADI;AAKZpC,UAAAA,WAAW,EAAEyC,OAAO,CAAC,CAAD,CAAP,CAAWG;AALZ,SAAd,EAMG,YAAM;AACPnD,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACC,KAAjB;AACD,SARD;AASD;AACF,KArUmB;;AAElB,SAAKA,KAAL,GAAa;AACXJ,MAAAA,UAAU,EAAE,EADD;AAEXQ,MAAAA,QAAQ,EAAE;AACRkC,QAAAA,aAAa,EAAE,KAAKjD,KAAL,CAAWY,QAAX,CAAoBsC,IAApB,IAA4B,EADnC;AAER3B,QAAAA,aAAa,EAAE,EAFP;AAGRC,QAAAA,WAAW,EAAE,EAHL;AAIRC,QAAAA,eAAe,EAAE,EAJT;AAKRC,QAAAA,IAAI,EAAE,EALE;AAMRE,QAAAA,QAAQ,EAAElC,MAAM,EANR;AAORmC,QAAAA,QAAQ,EAAE,EAPF;AAQRC,QAAAA,MAAM,EAAE,EARA;AASRqB,QAAAA,gBAAgB,EAAE,CATV;AAURH,QAAAA,aAAa,EAAE,EAVP;AAWRI,QAAAA,YAAY,EAAE1D,MAAM,GAAG2D,MAAT,CAAgB,YAAhB,CAXN;AAYRN,QAAAA,uBAAuB,EAAE,CAZjB;AAaRD,QAAAA,mBAAmB,EAAE;AAbb,OAFC;AAiBX5C,MAAAA,aAAa,EAAE,KAjBJ;AAkBXY,MAAAA,iBAAiB,EAAE,EAlBR;AAmBXc,MAAAA,QAAQ,EAAElC,MAAM,EAnBL;AAoBXuB,MAAAA,YAAY,EAAE,KApBH;AAqBXI,MAAAA,iBAAiB,EAAE,KArBR;AAsBXR,MAAAA,WAAW,EAAE,KAtBF;AAuBX0B,MAAAA,aAAa,EAAE;AAvBJ,KAAb;AAyBA,SAAKsB,OAAL,gBAAexF,KAAK,CAACyF,SAAN,EAAf;AACA,SAAKC,OAAL,gBAAe1F,KAAK,CAACyF,SAAN,EAAf;AACD;;AAEDE,EAAAA,iBAAiB,GAAI;AACnB,SAAKC,YAAL;AACD;;AAEDC,EAAAA,kBAAkB,GAAI,CAErB;;AAkSDC,EAAAA,MAAM,GAAI;AAAA;;AACR,UAAM;AAAEvD,MAAAA;AAAF,QAAe,KAAKZ,KAA1B;AACA,UAAM;AACJe,MAAAA,QADI;AACME,MAAAA,YADN;AACoBI,MAAAA,iBADpB;AAEJO,MAAAA,QAFI;AAEMW,MAAAA,aAFN;AAEqB1B,MAAAA,WAFrB;AAEkCX,MAAAA,aAFlC;AAEiDK,MAAAA;AAFjD,QAGF,KAAKI,KAHT;AAKA,UAAMyD,MAAM,GAAG;AACbC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADG;AAEbC,MAAAA,UAAU,EAAE;AAAED,QAAAA,IAAI,EAAE;AAAR;AAFC,KAAf,CAPQ,CAYR;AACA;AACA;AACA;AACA;;AAEA,UAAME,qBAAqB,GAAG;AAC5BC,MAAAA,IAAI,EAAE,KADsB;AAE5BC,MAAAA,QAAQ,EAAE,IAFkB;AAG5BC,MAAAA,aAAa,EAAE1F,MAAM,CAAC2F;AAHM,KAA9B;AAMA,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OAEIvD,iBAAiB,GACb,4BACA,MAAC,MAAD;AACE,MAAA,OAAO,EAAEmD,qBADX;AAEE,MAAA,MAAM,EAAE,GAFV;AAGE,MAAA,KAAK,EAAE,GAHT;AAIE,MAAA,SAAS,EAAE,KAJb;AAKE,MAAA,QAAQ,EAAE;AALZ,MADA,EAQA,MAAC,GAAD;AAAK,MAAA,OAAO,EAAC;AAAb,OACE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE;AAAX,OACE,MAAC,YAAD,QACE,MAAC,YAAD,CAAc,IAAd;AAAmB,MAAA,IAAI,EAAE,EAAzB;AAA6B,MAAA,KAAK,EAAC;AAAnC,OAAgDzD,QAAQ,CAACiC,aAAzD,CADF,EAEE,MAAC,YAAD,CAAc,IAAd;AAAmB,MAAA,IAAI,EAAE,EAAzB;AAA6B,MAAA,KAAK,EAAC;AAAnC,OAAwDjC,QAAQ,CAACoC,gBAAjE,CAFF,EAGE,MAAC,YAAD,CAAc,IAAd;AAAmB,MAAA,IAAI,EAAE,EAAzB;AAA6B,MAAA,KAAK,EAAC;AAAnC,OAAoDpC,QAAQ,CAACqC,YAA7D,CAHF,EAIE,MAAC,YAAD,CAAc,IAAd;AAAmB,MAAA,IAAI,EAAE,EAAzB;AAA6B,MAAA,KAAK,EAAC;AAAnC,OAAqDrC,QAAQ,CAACQ,aAA9D,CAJF,EAKE,MAAC,YAAD,CAAc,IAAd;AAAmB,MAAA,IAAI,EAAE,EAAzB;AAA6B,MAAA,KAAK,EAAC;AAAnC,OAAoDR,QAAQ,CAACkC,aAA7D,CALF,EAME,MAAC,YAAD,CAAc,IAAd;AAAmB,MAAA,IAAI,EAAE,EAAzB;AAA6B,MAAA,KAAK,EAAC;AAAnC,OAAoDlC,QAAQ,CAACS,WAA7D,CANF,EAOE,MAAC,YAAD,CAAc,IAAd;AAAmB,MAAA,IAAI,EAAE,EAAzB;AAA6B,MAAA,KAAK,EAAC;AAAnC,OAA4CT,QAAQ,CAACW,IAArD,CAPF,EAQE,MAAC,YAAD,CAAc,IAAd;AAAmB,MAAA,IAAI,EAAE,EAAzB;AAA6B,MAAA,KAAK,EAAC;AAAnC,OAAgDX,QAAQ,CAACc,QAAzD,CARF,EASE,MAAC,YAAD,CAAc,IAAd;AAAmB,MAAA,IAAI,EAAE,EAAzB;AAA6B,MAAA,KAAK,EAAC;AAAnC,OAAmDd,QAAQ,CAACe,MAA5D,CATF,EAUE,MAAC,YAAD,CAAc,IAAd;AAAmB,MAAA,IAAI,EAAE,EAAzB;AAA6B,MAAA,KAAK,EAAC;AAAnC,OAAqDf,QAAQ,CAACU,eAA9D,CAVF,EAWE,MAAC,YAAD,CAAc,IAAd;AAAmB,MAAA,IAAI,EAAE,EAAzB;AAA6B,MAAA,KAAK,EAAC;AAAnC,OAAgD/B,MAAM,CAACqB,QAAQ,CAACa,QAAV,CAAN,CAA0ByB,MAA1B,CAAiC,YAAjC,CAAhD,CAXF,CADF,CADF,CARA,EAyBA,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKwB;AAAvC,uBAzBA,CADa,GA4Bb,4BAQA,MAAC,IAAD;AACE,MAAA,GAAG,EAAE,KAAKhB;AADZ,OAEMO,MAFN;AAGE,MAAA,IAAI,EAAC,aAHP;AAIE,MAAA,aAAa,EAAErD,QAJjB,CAKE;AALF;AAME,MAAA,QAAQ,EAAE,KAAK+D,SANjB;AAOE,MAAA,cAAc,EAAE,UAACC,aAAD,EAAgBC,SAAhB,EAA8B;AAC5CvE,QAAAA,OAAO,CAACC,GAAR,CAAYqE,aAAZ;;AACA,QAAA,MAAI,CAAC9E,QAAL,CAAc;AACZc,UAAAA,QAAQ,oBACHA,QADG,EAEHgE,aAFG;AADI,SAAd,EAKG;AAAA,iBAAMtE,OAAO,CAACC,GAAR,CAAY,MAAI,CAACC,KAAjB,CAAN;AAAA,SALH;AAMD;AAfH,QAiBE,MAAC,GAAD;AAAK,MAAA,SAAS,EAAC,+BAAf;AAA+C,MAAA,OAAO,EAAC;AAAvD,OACE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,aAAhB;AAA8B,MAAA,KAAK,EAAE,CAAC;AAAEsE,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAArC;AAAmG,MAAA,KAAK,EAAC;AAAzG,OACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE;AAAjB,OAEE,MAAC,KAAD;AAAO,MAAA,KAAK,EAAEnE,QAAQ,CAACS,WAAvB;AAAoC,MAAA,SAAS,EAAE,EAA/C;AAAmD,MAAA,UAAU,MAA7D;AAA8D,MAAA,QAAQ,EAAE,KAAK2D,sBAA7E;AAAqG,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAA5G;AAA+H,MAAA,WAAW,EAAC,KAA3I;AAAiJ,MAAA,MAAM,EAAE7C,aAAa,GAAG,MAAC,eAAD,OAAH,GAAyB1B,WAAW,GAAG,MAAC,iBAAD,OAAH,GAA2B;AAArO,MAFF,CADF,CADF,EAOE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,eAAhB;AAAgC,MAAA,KAAK,EAAE,CAAC;AAAEoE,QAAAA,QAAQ,EAAE,CAACpE,WAAb;AAA0BqE,QAAAA,OAAO,EAAE;AAAnC,OAAD,CAAvC;AAA8G,MAAA,KAAK,EAAC;AAApH,OACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE;AAAjB,OACE,MAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,CAACnE,QAAQ,CAACS,WAAV,IAAyBT,QAAQ,CAACS,WAAT,CAAqBlB,MAArB,GAA8B,EAAxE;AAA4E,MAAA,KAAK,EAAES,QAAQ,CAACQ,aAA5F;AAA2G,MAAA,EAAE,EAAC,eAA9G;AAA8H,MAAA,GAAG,EAAC,eAAlI;AAAkJ,MAAA,UAAU,MAA5J;AAA6J,MAAA,QAAQ,EAAE,KAAK8D,UAA5K;AAAwL,MAAA,WAAW,EAAC;AAApM,MADF,CADF,CAPF,EAYE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,iBAAhB;AAAkC,MAAA,KAAK,EAAE,CAAC;AAAEJ,QAAAA,QAAQ,EAAE,CAACpE,WAAb;AAA0BqE,QAAAA,OAAO,EAAE;AAAnC,OAAD,CAAzC;AAAgH,MAAA,KAAK,EAAC;AAAtH,OACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE;AAAjB,OACE,MAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,CAACnE,QAAQ,CAACS,WAAV,IAAyBT,QAAQ,CAACS,WAAT,CAAqBlB,MAArB,GAA8B,EAAxE;AAA4E,MAAA,KAAK,EAAES,QAAQ,CAACU,eAA5F;AAA6G,MAAA,EAAE,EAAC,iBAAhH;AAAkI,MAAA,GAAG,EAAC,iBAAtI;AAAwJ,MAAA,QAAQ,EAAE,KAAK4D,UAAvK;AAAmL,MAAA,UAAU,MAA7L;AAA8L,MAAA,WAAW,EAAC;AAA1M,MADF,CADF,CAZF,EAiBE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,MAAhB;AAAuB,MAAA,KAAK,EAAE,CAAC;AAAEJ,QAAAA,QAAQ,EAAE,CAACpE,WAAb;AAA0B+B,QAAAA,IAAI,EAAE,OAAhC;AAAyCsC,QAAAA,OAAO,EAAE;AAAlD,OAAD,CAA9B;AAA0G,MAAA,KAAK,EAAC;AAAhH,OACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE;AAAjB,OACE,MAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,CAACnE,QAAQ,CAACS,WAAV,IAAyBT,QAAQ,CAACS,WAAT,CAAqBlB,MAArB,GAA8B,EAAxE;AAA4E,MAAA,KAAK,EAAES,QAAQ,CAACW,IAA5F;AAAkG,MAAA,EAAE,EAAC,MAArG;AAA4G,MAAA,GAAG,EAAC,MAAhH;AAAuH,MAAA,QAAQ,EAAE,KAAK2D,UAAtI;AAAkJ,MAAA,UAAU,MAA5J;AAA6J,MAAA,WAAW,EAAC;AAAzK,MADF,CADF,CAjBF,EAsBE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAE,CAAC;AAAEJ,QAAAA,QAAQ,EAAE,CAACpE,WAAb;AAA0BqE,QAAAA,OAAO,EAAE;AAAnC,OAAD,CAAlC;AAAwG,MAAA,KAAK,EAAC;AAA9G,OACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE;AAAjB,OACE,MAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,CAACnE,QAAQ,CAACS,WAAV,IAAyBT,QAAQ,CAACS,WAAT,CAAqBlB,MAArB,GAA8B,EAAxE;AAA4E,MAAA,KAAK,EAAES,QAAQ,CAACc,QAA5F;AAAsG,MAAA,EAAE,EAAC,UAAzG;AAAoH,MAAA,GAAG,EAAC,UAAxH;AAAmI,MAAA,QAAQ,EAAE,KAAKwD,UAAlJ;AAA8J,MAAA,UAAU,MAAxK;AAAyK,MAAA,WAAW,EAAC;AAArL,MADF,CADF,CAtBF,EA2BE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,QAAhB;AAAyB,MAAA,KAAK,EAAE,CAAC;AAAEJ,QAAAA,QAAQ,EAAE,CAACpE,WAAb;AAA0BqE,QAAAA,OAAO,EAAE;AAAnC,OAAD,CAAhC;AAAqG,MAAA,KAAK,EAAC;AAA3G,OACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE;AAAjB,OACE,MAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,CAACnE,QAAQ,CAACS,WAAV,IAAyBT,QAAQ,CAACS,WAAT,CAAqBlB,MAArB,GAA8B,EAAxE;AAA4E,MAAA,KAAK,EAAES,QAAQ,CAACe,MAA5F;AAAoG,MAAA,EAAE,EAAC,QAAvG;AAAgH,MAAA,GAAG,EAAC,QAApH;AAA6H,MAAA,QAAQ,EAAE,KAAKuD,UAA5I;AAAwJ,MAAA,IAAI,EAAE,QAA9J;AAAwK,MAAA,UAAU,MAAlL;AAAmL,MAAA,WAAW,EAAC;AAA/L,MADF,CADF,CA3BF,EAgCE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAC;AAAjC,OACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE;AAAjB,OACE,MAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,CAACtE,QAAQ,CAACS,WAAV,IAAyBT,QAAQ,CAACS,WAAT,CAAqBlB,MAArB,GAA8B,EAA7E;AAAiF,MAAA,EAAE,EAAC,UAApF;AAA+F,MAAA,GAAG,EAAC,UAAnG;AAA8G,MAAA,YAAY,EAAEZ,MAAM,EAAlI;AAAsI,MAAA,KAAK,EAAEA,MAAM,CAACqB,QAAQ,CAACa,QAAV,EAAoBhC,UAApB,CAAnJ;AAAoL,MAAA,QAAQ,EAAE,KAAK0F,gBAAnM;AAAqN,MAAA,MAAM,EAAE1F,UAA7N;AAAyO,MAAA,WAAW,EAAEA,UAAtP;AAAkQ,MAAA,KAAK,EAAE;AAAE2F,QAAAA,KAAK,EAAE;AAAT;AAAzQ,MADF,CADF,CAhCF,EAsCE,MAAC,OAAD,OAtCF,EAwCE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,eAAhB;AAAgC,MAAA,KAAK,EAAE,CAAC;AAAEN,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAAvC;AAAiG,MAAA,KAAK,EAAC;AAAvG,OACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE;AAAjB,OACE,MAAC,KAAD;AAAO,MAAA,UAAU,MAAjB;AAAkB,MAAA,EAAE,EAAC,eAArB;AAAqC,MAAA,GAAG,EAAC,eAAzC;AAAyD,MAAA,QAAQ,EAAE,KAAKG,UAAxE;AAAoF,MAAA,WAAW,EAAC;AAAhG,MADF,CADF,CAxCF,EA6CE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,kBAAhB;AAAmC,MAAA,KAAK,EAAE,CAAC;AAAEJ,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAA1C;AAAmG,MAAA,KAAK,EAAC;AAAzG,OACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE;AAAjB,OACE,MAAC,KAAD;AAAO,MAAA,YAAY,EAAE,CAArB;AAAwB,MAAA,IAAI,EAAE,QAA9B;AAAwC,MAAA,EAAE,EAAC,kBAA3C;AAA8D,MAAA,GAAG,EAAC,kBAAlE;AAAqF,MAAA,QAAQ,EAAE,KAAKG,UAApG;AAAgH,MAAA,UAAU,MAA1H;AAA2H,MAAA,WAAW,EAAC;AAAvI,MADF,CADF,CA7CF,EAmDE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC;AAAjB,OACE,MAAC,KAAD,CAAO,KAAP;AAAa,MAAA,OAAO;AAApB,OACE,MAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAKG,oBAAvB;AAA6C,MAAA,YAAY,EAAEjF,UAAU,IAAIA,UAAU,CAAC,CAAD,CAAxB,IAA+BA,UAAU,CAAC,CAAD,CAAV,CAAc2C,IAAxG;AAA8G,MAAA,IAAI,EAAC,OAAnH;AAA2H,MAAA,OAAO,EAAEhD,aAApI;AAAmJ,MAAA,EAAE,EAAC,cAAtJ;AAAqK,MAAA,GAAG,EAAC,cAAzK;AAAwL,MAAA,WAAW,EAAC;AAApM,OAEIA,aAAa,GAAG,IAAH,GACTK,UAAU,CAACkF,GAAX,CAAe,UAAA9B,GAAG,EAAI;AACtB,aACA,4BACE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAE4B,UAAAA,KAAK,EAAE;AAAT,SAAf;AAAmC,QAAA,KAAK,EAAE5B,GAAG,CAACC;AAA9C,SAAqDD,GAAG,CAACC,IAAzD,CADF,CADA;AAKD,KANC,CAHR,CADF,EAaE,MAAC,KAAD;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,KAAK,EAAE;AAAE2B,QAAAA,KAAK,EAAE;AAAT,OAAvB;AAAyC,MAAA,KAAK,EAAExE,QAAQ,CAACqC,YAAzD;AAAuE,MAAA,YAAY,EAAE1D,MAAM,GAAG2D,MAAT,CAAgB,YAAhB;AAArF,MAbF,CADF,CAnDF,EAqEE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,eAAhB;AAAgC,MAAA,KAAK,EAAC;AAAtC,OACE,MAAC,KAAD;AAAO,MAAA,YAAY,EAAEzC,QAAQ,CAACsC,IAA9B;AAAoC,MAAA,EAAE,EAAC,eAAvC;AAAuD,MAAA,GAAG,EAAC,eAA3D;AAA2E,MAAA,KAAK,EAAEtC,QAAQ,CAACsC,IAA3F;AAAiG,MAAA,QAAQ,MAAzG;AAA0G,MAAA,WAAW,EAAEtC,QAAQ,CAACsC;AAAhI,MADF,CArEF,EAyEE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC;AAArB,OACE,MAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEhD,aAAa,IAAIqC,aAAjB,IAAkC,CAACxB,QAAQ,CAACS,WAA9D;AAA2E,MAAA,OAAO,EAAEP,YAApF;AAAkG,MAAA,IAAI,EAAC,SAAvG;AAAiH,MAAA,QAAQ,EAAC;AAA1H,0BADF,CAzEF,CAjBF,CARA,CA9BR,EAuIE,MAAC,OAAD;AAAS,MAAA,GAAG,EAAE,KAAK8C;AAAnB,MAvIF,CADF;AA2ID;;AA3e2C;;AA8e9C,MAAM2B,eAAe,GAAG,UAAC/E,KAAD;AAAA,SAAY;AAClCgF,IAAAA,MAAM,EAAEhF,KAAK,CAACgF,MADoB;AAElC/E,IAAAA,QAAQ,EAAED,KAAK,CAACC;AAFkB,GAAZ;AAAA,CAAxB;;AAKA,eAAetC,UAAU,CAACC,OAAO,CAACmH,eAAD,EAAkB,IAAlB,CAAP,CAA+B7F,WAA/B,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport { withRouter } from 'next/router'\nimport { connect } from 'react-redux'\nimport { Form, Row, Col, Input, Button, Descriptions, Divider, DatePicker, Select } from 'antd'\nimport { images } from 'config/images'\nimport MyModal from 'pages/Components/MyModal'\nimport { showNotification } from 'common/function'\nimport { LoadingOutlined, CheckCircleFilled } from '@ant-design/icons'\nimport { Router } from 'common/routes'\nimport { isMobile } from 'react-device-detect'\nimport './style.scss'\nimport Lottie from 'react-lottie'\nimport GapService from 'controller/Api/Services/Gap'\nimport moment from 'moment'\n\nconst { Option } = Select\n\nconst dateFormat = 'DD-MM-YYYY'\nclass Consignment extends React.PureComponent {\n  constructor (props) {\n    super(props)\n    this.state = {\n      allInfoTag: [],\n      formData: {\n        consigneeName: this.props.userData.name || '',\n        consignerName: '',\n        phoneNumber: '',\n        consignerIdCard: '',\n        mail: '',\n        birthday: moment(),\n        bankName: '',\n        bankId: '',\n        numberOfProducts: 1,\n        consignmentId: '',\n        timeGetMoney: moment().format('DD-MM-YYYY'),\n        numberOfConsignmentTime: 0,\n        numberOfConsignment: 0\n      },\n      isLoadingTags: false,\n      objectIdFoundUser: '',\n      birthday: moment(),\n      isConsigning: false,\n      isShowConfirmForm: false,\n      isFoundUser: false,\n      isLoadingUser: false\n    }\n    this.formRef = React.createRef()\n    this.myModal = React.createRef()\n  }\n\n  componentDidMount () {\n    this.fetchAllTags()\n  }\n\n  componentDidUpdate () {\n\n  }\n\n  fetchAllTags = async () => {\n    this.setState({\n      isLoadingTags: true\n    }, async () => {\n      const res = await GapService.getConsignmentID()\n      if (res && res.results && res.results.length > 0) {\n        this.setState({\n          allInfoTag: res.results.reverse(),\n          isLoadingTags: false\n        }, console.log(this.state))\n      } else {\n        this.setState({\n          isLoadingTags: false\n        })\n      }\n    })\n  }\n\n  onConsign = () => {\n    const { userData } = this.props\n    const { isFoundUser, objectIdFoundUser, formData, timeGroupId } = this.state\n\n    console.log(userData)\n    this.setState({\n      isConsigning: true\n    }, async () => {\n      console.log('onConsign')\n      console.log(formData)\n      console.log(this.state)\n      if (isFoundUser && objectIdFoundUser) { // for already user\n        console.log('for already user')\n        const result = await GapService.setConsignment(formData, userData.objectId, objectIdFoundUser, timeGroupId)\n        console.log(result)\n        if (result && result.objectId) {\n          this.setState({\n            isShowConfirmForm: true,\n            isConsigning: false\n          }, async () => {\n            const customerFormData = {\n              consignerName: formData.consignerName,\n              phoneNumber: formData.phoneNumber,\n              consignerIdCard: formData.consignerIdCard,\n              mail: formData.mail,\n              email: formData.mail || 'nothing@giveaway.com',\n              birthday: formData.birthday,\n              bankName: formData.bankName,\n              bankId: formData.bankId\n            }\n            console.log('udpate user')\n            console.log(customerFormData)\n            console.log(objectIdFoundUser)\n\n            GapService.updateCustomer(customerFormData, objectIdFoundUser)\n          })\n        } else {\n          showNotification('Tạo Đơn Ký gửi thất bại')\n        }\n      } else { // for new user\n        console.log('for new user')\n\n        const customerFormData = {\n          consignerName: formData.consignerName,\n          phoneNumber: formData.phoneNumber,\n          consignerIdCard: formData.consignerIdCard,\n          mail: formData.mail,\n          email: formData.mail || 'nothing@giveaway.com',\n          username: formData.phoneNumber,\n          password: formData.consignerIdCard,\n          birthday: formData.birthday,\n          bankName: formData.bankName,\n          bankId: formData.bankId\n        }\n        console.log('create user')\n        console.log(customerFormData)\n        const resCus = await GapService.setCustomer(customerFormData)\n\n        console.log(resCus)\n\n        if (resCus && resCus.objectId) {\n          showNotification('Thêm khách hàng thành công')\n          const result = await GapService.setConsignment(formData, userData.objectId, resCus.objectId, timeGroupId)\n          console.log(result)\n\n          if (result && result.objectId) {\n            this.setState({\n              isShowConfirmForm: true,\n              isConsigning: false\n            })\n          }\n        } else {\n          showNotification('Tạo khách hàng thất bại')\n        }\n      }\n    })\n  }\n\n  fetchUserByPhoneNumber = async (phoneKey) => {\n    const { formData } = this.state\n\n    console.log('phoneKey.target.value')\n    console.log(phoneKey.target.value)\n\n    if (phoneKey && phoneKey.target && phoneKey.target.value && phoneKey.target.value.length >= 10) {\n      console.log('fetchUserByPhoneNumber run')\n      this.setState({\n        isLoadingUser: true\n      })\n\n      const res = await GapService.getCustomer(phoneKey.target.value)\n      console.log('fetchUserByPhoneNumber finish')\n      console.log(res)\n      if (res && res.results && res.results[0]) {\n        console.log('fetchUserByPhoneNumber set form')\n\n        this.setState({\n          formData: {\n            ...this.state.formData,\n            consignerName: res.results[0].fullName,\n            phoneNumber: res.results[0].phoneNumber,\n            consignerIdCard: res.results[0].identityNumber,\n            mail: res.results[0].mail,\n            birthday: res.results[0].birthday,\n            bankName: res.results[0].banks[0] ? res.results[0].banks[0].type : '',\n            bankId: res.results[0].banks[0] ? res.results[0].banks[0].accNumber : '',\n            numberOfConsignment: res.results[0].numberOfConsignment || 0,\n            numberOfConsignmentTime: res.results[0].numberOfConsignmentTime || 0\n          },\n          birthday: res.results[0].birthday,\n          isFoundUser: true,\n          isLoadingUser: false,\n          objectIdFoundUser: res.results[0].objectId\n        }, () => {\n          console.log(this.state)\n        })\n      } else {\n        this.setState({\n          isFoundUser: false,\n          isLoadingUser: false\n        })\n      }\n    } else if (phoneKey && phoneKey.target && phoneKey.target.value && phoneKey.target.value.length < 10) {\n      console.log('fetchUserByPhoneNumber == 0')\n      // this.onRefeshAll()\n      this.setState({\n        formData: {\n          ...this.state.formData,\n          consignerName: '',\n          phoneNumber: phoneKey.target.value,\n          consignerIdCard: '',\n          mail: '',\n          birthday: moment(),\n          bankName: '',\n          bankId: '',\n          consignmentId: ''\n        },\n        objectIdFoundUser: '',\n        birthday: moment(),\n        isShowConfirmForm: false,\n        isFoundUser: false\n      })\n      // this.setState({\n      //   allInfoTag: [],\n      //   formData: {\n      //     consigneeName: this.props.userData.name || '',\n      //     consignerName: '',\n      //     phoneNumber: phoneKey.target.value,\n      //     consignerIdCard: '',\n      //     mail: '',\n      //     birthday: moment(),\n      //     bankName: '',\n      //     bankId: '',\n      //     numberOfProducts: 1,\n      //     consignmentId: '',\n      //     timeGetMoney: moment().format('MM-YYYY'),\n      //     numberOfConsignmentTime: 0,\n      //     numberOfConsignment: 0\n      //   },\n      //   isLoadingTags: false,\n      //   objectIdFoundUser: '',\n      //   birthday: moment(),\n      //   isConsigning: false,\n      //   isShowConfirmForm: false,\n      //   isFoundUser: false,\n      //   isLoadingUser: false\n      // })\n    } else {\n      console.log('fetchUserByPhoneNumber dont run 2')\n      this.setState({\n        formData: {\n          ...this.state.formData,\n          consignerName: '',\n          phoneNumber: phoneKey.target.value,\n          consignerIdCard: '',\n          mail: '',\n          birthday: moment(),\n          bankName: '',\n          bankId: '',\n          consignmentId: ''\n        },\n        objectIdFoundUser: '',\n        birthday: moment(),\n        isShowConfirmForm: false,\n        isFoundUser: false\n      })\n      // this.onRefeshAll()\n    }\n  }\n\n  onRefeshAll = () => {\n    this.setState({\n      allInfoTag: [],\n      formData: {\n        consigneeName: this.props.userData.name || '',\n        consignerName: '',\n        phoneNumber: '',\n        consignerIdCard: '',\n        mail: '',\n        birthday: moment(),\n        bankName: '',\n        bankId: '',\n        numberOfProducts: 1,\n        consignmentId: '',\n        timeGetMoney: moment().format('MM-YYYY'),\n        numberOfConsignmentTime: 0,\n        numberOfConsignment: 0\n      },\n      isLoadingTags: false,\n      objectIdFoundUser: '',\n      birthday: moment(),\n      isConsigning: false,\n      isShowConfirmForm: false,\n      isFoundUser: false,\n      isLoadingUser: false\n    })\n  }\n\n  onChangeBirthday = (value) => {\n    try {\n      const formatTime = moment(value).format('DD-MM-YYYY')\n      console.log(formatTime)\n      console.log(value)\n\n      this.setState({\n        formData: {\n          ...this.state.formData,\n          birthday: formatTime\n        },\n        birthday: formatTime\n      }, () => {\n        console.log(this.state)\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  changeData = (value) => {\n    console.log(value.target.id)\n    const { formData } = this.state\n\n    this.setState({\n      formData: {\n        ...formData,\n        [value.target.id]: value.target.value\n      }\n    }, () => console.log(this.state))\n  }\n\n  onChangeTimeGetMoney = (value) => {\n    const { formData, allInfoTag } = this.state\n\n    console.log('onChangeTimeGetMoney')\n    console.log(value)\n    const findTag = allInfoTag.filter(tag => tag.code === value)\n\n    if (findTag && findTag[0]) {\n      this.setState({\n        formData: {\n          ...formData,\n          timeGetMoney: findTag[0].timeGetMoney\n        },\n        timeGroupId: findTag[0].code\n      }, () => {\n        console.log(this.state)\n      })\n    }\n  }\n\n  render () {\n    const { userData } = this.props\n    const {\n      formData, isConsigning, isShowConfirmForm,\n      birthday, isLoadingUser, isFoundUser, isLoadingTags, allInfoTag\n    } = this.state\n\n    const layout = {\n      labelCol: { span: 9 },\n      wrapperCol: { span: 15 }\n    }\n\n    // const defaultOptions = {\n    //   loop: false,\n    //   autoplay: true,\n    //   animationData: images.consignmentForm\n    // }\n\n    const defaultOptionsSuccess = {\n      loop: false,\n      autoplay: true,\n      animationData: images.successJson\n    }\n\n    return (\n      <div className='consignment-container'>\n        {\n          isShowConfirmForm\n            ? <>\n              <Lottie\n                options={defaultOptionsSuccess}\n                height={150}\n                width={150}\n                isStopped={false}\n                isPaused={false}\n              />\n              <Row justify='center'>\n                <Col span={20}>\n                  <Descriptions>\n                    <Descriptions.Item span={24} label='Mã Ký gửi'>{formData.consignmentId}</Descriptions.Item>\n                    <Descriptions.Item span={24} label='Số lượng Hàng Hoá'>{formData.numberOfProducts}</Descriptions.Item>\n                    <Descriptions.Item span={24} label='Ngày trả tiền'>{formData.timeGetMoney}</Descriptions.Item>\n                    <Descriptions.Item span={24} label='Tên Khách Hàng'>{formData.consignerName}</Descriptions.Item>\n                    <Descriptions.Item span={24} label='Tên Nhân Viên'>{formData.consigneeName}</Descriptions.Item>\n                    <Descriptions.Item span={24} label='Số điện thoại'>{formData.phoneNumber}</Descriptions.Item>\n                    <Descriptions.Item span={24} label='Email'>{formData.mail}</Descriptions.Item>\n                    <Descriptions.Item span={24} label='Ngân hàng'>{formData.bankName}</Descriptions.Item>\n                    <Descriptions.Item span={24} label='ID Ngân hàng'>{formData.bankId}</Descriptions.Item>\n                    <Descriptions.Item span={24} label='Chứng minh thư'>{formData.consignerIdCard}</Descriptions.Item>\n                    <Descriptions.Item span={24} label='Sinh nhật'>{moment(formData.birthday).format('DD-MM-YYYY')}</Descriptions.Item>\n                  </Descriptions>\n                </Col>\n              </Row>\n              <Button className='MT20' onClick={this.onRefeshAll} >Quay lại</Button>\n            </>\n            : <>\n              {/* <Lottie\n                options={defaultOptions}\n                height={100}\n                width={100}\n                isStopped={false}\n                isPaused={false}\n              /> */}\n              <Form\n                ref={this.formRef}\n                {...layout}\n                name='consignment'\n                initialValues={formData}\n                // onFinish={this.onFinish}\n                onFinish={this.onConsign}\n                onValuesChange={(changedValues, allValues) => {\n                  console.log(changedValues)\n                  this.setState({\n                    formData: {\n                      ...formData,\n                      ...changedValues\n                    }\n                  }, () => console.log(this.state))\n                }}\n              >\n                <Row className='flex sell-card-form PT40 PB35' justify='center'>\n                  <Form.Item name='phoneNumber' rules={[{ required: true, message: 'Vui lòng nhập số điện thoại' }]} label='Số điện thoại'>\n                    <Col sm={24} md={12}>\n                      {/* <Search placeholder=\"input search loading default\" loading /> */}\n                      <Input value={formData.phoneNumber} maxLength={12} allowClear onChange={this.fetchUserByPhoneNumber} style={{ minWidth: 100 }} placeholder='...' suffix={isLoadingUser ? <LoadingOutlined /> : isFoundUser ? <CheckCircleFilled /> : null} />\n                    </Col>\n                  </Form.Item>\n                  <Form.Item name='consignerName' rules={[{ required: !isFoundUser, message: 'Vui lòng nhập tên khách hàng' }]} label='Tên Khách Hàng'>\n                    <Col sm={24} md={24}>\n                      <Input disabled={!formData.phoneNumber || formData.phoneNumber.length < 10} value={formData.consignerName} id='consignerName' key='consignerName' allowClear onChange={this.changeData} placeholder='...' />\n                    </Col>\n                  </Form.Item>\n                  <Form.Item name='consignerIdCard' rules={[{ required: !isFoundUser, message: 'Vui lòng nhập chứng minh thư' }]} label='CMND'>\n                    <Col sm={24} md={12}>\n                      <Input disabled={!formData.phoneNumber || formData.phoneNumber.length < 10} value={formData.consignerIdCard} id='consignerIdCard' key='consignerIdCard' onChange={this.changeData} allowClear placeholder='...' />\n                    </Col>\n                  </Form.Item>\n                  <Form.Item name='mail' rules={[{ required: !isFoundUser, type: 'email', message: 'Email không hợp lệ' }]} label='Email'>\n                    <Col sm={24} md={24}>\n                      <Input disabled={!formData.phoneNumber || formData.phoneNumber.length < 10} value={formData.mail} id='mail' key='mail' onChange={this.changeData} allowClear placeholder='...' />\n                    </Col>\n                  </Form.Item>\n                  <Form.Item name='bankName' rules={[{ required: !isFoundUser, message: 'Vui lòng nhập tên ngân hàng' }]} label='Ngân hàng'>\n                    <Col sm={24} md={24}>\n                      <Input disabled={!formData.phoneNumber || formData.phoneNumber.length < 10} value={formData.bankName} id='bankName' key='bankName' onChange={this.changeData} allowClear placeholder='...' />\n                    </Col>\n                  </Form.Item>\n                  <Form.Item name='bankId' rules={[{ required: !isFoundUser, message: 'Vui lòng nhập id ngân hàng' }]} label='ID Ngân hàng'>\n                    <Col sm={24} md={12}>\n                      <Input disabled={!formData.phoneNumber || formData.phoneNumber.length < 10} value={formData.bankId} id='bankId' key='bankId' onChange={this.changeData} type={'number'} allowClear placeholder='...' />\n                    </Col>\n                  </Form.Item>\n                  <Form.Item name='birthday' label='Sinh nhật'>\n                    <Col sm={24} md={12}>\n                      <DatePicker disabled={!formData.phoneNumber || formData.phoneNumber.length < 10} id='birthday' key='birthday' defaultValue={moment()} value={moment(formData.birthday, dateFormat)} onChange={this.onChangeBirthday} format={dateFormat} placeholder={dateFormat} style={{ width: '100%' }} />\n                    </Col>\n                  </Form.Item>\n\n                  <Divider />\n\n                  <Form.Item name='consignmentId' rules={[{ required: true, message: 'Vui lòng nhập mã ký gửi' }]} label='Mã ký gửi'>\n                    <Col sm={24} md={12}>\n                      <Input allowClear id='consignmentId' key='consignmentId' onChange={this.changeData} placeholder='...' />\n                    </Col>\n                  </Form.Item>\n                  <Form.Item name='numberOfProducts' rules={[{ required: true, message: 'Vui lòng nhập số lượng' }]} label='Số lượng Hàng Hoá'>\n                    <Col sm={24} md={12}>\n                      <Input defaultValue={1} type={'number'} id='numberOfProducts' key='numberOfProducts' onChange={this.changeData} allowClear placeholder='...' />\n                    </Col>\n                  </Form.Item>\n\n                  <Form.Item label='Ngày trả tiền'>\n                    <Input.Group compact>\n                      <Select onChange={this.onChangeTimeGetMoney} defaultValue={allInfoTag && allInfoTag[0] && allInfoTag[0].name} size='large' loading={isLoadingTags} id='timeGetMoney' key='timeGetMoney' placeholder='...'>\n                        {\n                          isLoadingTags ? null\n                            : allInfoTag.map(tag => {\n                              return (\n                              <>\n                                <Option style={{ width: '100px' }} value={tag.code}>{tag.code}</Option>\n                              </>\n                              )\n                            })\n                        }\n                      </Select>\n                      <Input disabled style={{ width: '50%' }} value={formData.timeGetMoney} defaultValue={moment().format('DD-MM-YYYY')} />\n                    </Input.Group>\n                  </Form.Item>\n\n                  <Form.Item name='consigneeName' label='Tên Nhân Viên'>\n                    <Input defaultValue={userData.name} id='consigneeName' key='consigneeName' value={userData.name} disabled placeholder={userData.name} />\n                  </Form.Item>\n\n                  <Form.Item className='button-confirm-box MT20 MB40'>\n                    <Button disabled={isLoadingTags || isLoadingUser || !formData.phoneNumber} loading={isConsigning} type='primary' htmlType='submit'>Xác nhận</Button>\n                  </Form.Item>\n                </Row>\n              </Form>\n            </>\n        }\n        <MyModal ref={this.myModal} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locale: state.locale,\n  userData: state.userData\n})\n\nexport default withRouter(connect(mapStateToProps, null)(Consignment))\n"]},"metadata":{},"sourceType":"module"}