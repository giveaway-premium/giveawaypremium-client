{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport { Component, isValidElement, Children, createElement } from 'react';\nimport PropTypes from 'prop-types';\n\nvar window = require('global/window');\n\nconst inBrowser = typeof navigator !== 'undefined'; // these browsers don't fully support navigator.onLine, so we need to use a polling backup\n\nconst unsupportedUserAgentsPattern = /Windows.*Chrome|Windows.*Firefox|Linux.*Chrome/;\n\nconst ping = function ({\n  url,\n  timeout\n}) {\n  return new _Promise(function (resolve) {\n    const isOnline = function () {\n      return resolve(true);\n    };\n\n    const isOffline = function () {\n      return resolve(false);\n    }; // eslint-disable-next-line no-undef\n\n\n    const xhr = new XMLHttpRequest();\n    xhr.onerror = isOffline;\n    xhr.ontimeout = isOffline;\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === xhr.HEADERS_RECEIVED) {\n        if (xhr.status >= 200 && xhr.status < 400) {\n          isOnline();\n        } else {\n          isOffline();\n        }\n      }\n    };\n\n    xhr.open('HEAD', url);\n    xhr.timeout = timeout;\n    xhr.send();\n  });\n};\n\nconst propTypes = {\n  children: PropTypes.node,\n  onChange: PropTypes.func,\n  polling: PropTypes.oneOfType([PropTypes.shape({\n    url: PropTypes.string,\n    interval: PropTypes.number,\n    timeout: PropTypes.number\n  }), PropTypes.bool]),\n  wrapperType: PropTypes.string\n};\nconst defaultProps = {\n  polling: true,\n  wrapperType: 'span'\n};\nconst defaultPollingConfig = {\n  enabled: inBrowser && unsupportedUserAgentsPattern.test(navigator.userAgent),\n  url: 'https://ipv4.icanhazip.com/',\n  timeout: 5000,\n  interval: 5000\n}; // base class that detects offline/online changes\n\nclass Base extends Component {\n  constructor() {\n    super();\n    this.state = {\n      online: inBrowser && typeof navigator.onLine === 'boolean' ? navigator.onLine : true\n    }; // bind event handlers\n\n    this.goOnline = this.goOnline.bind(this);\n    this.goOffline = this.goOffline.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('online', this.goOnline);\n    window.addEventListener('offline', this.goOffline);\n    const {\n      onDefault\n    } = this.props;\n    onDefault && onDefault(this.state.online);\n\n    if (this.getPollingConfig().enabled) {\n      this.startPolling();\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('online', this.goOnline);\n    window.removeEventListener('offline', this.goOffline);\n\n    if (this.pollingId) {\n      this.stopPolling();\n    }\n  }\n\n  renderChildren() {\n    const {\n      children,\n      wrapperType\n    } = this.props; // usual case: one child that is a react Element\n\n    if ( /*#__PURE__*/isValidElement(children)) {\n      return children;\n    } // no children\n\n\n    if (!children) {\n      return null;\n    } // string children, multiple children, or something else\n\n\n    return /*#__PURE__*/createElement(wrapperType, {}, ...Children.toArray(children));\n  }\n\n  getPollingConfig() {\n    switch (this.props.polling) {\n      case true:\n        return defaultPollingConfig;\n\n      case false:\n        return {\n          enabled: false\n        };\n\n      default:\n        return _Object$assign({}, defaultPollingConfig, this.props.polling);\n    }\n  }\n\n  goOnline() {\n    if (!this.state.online) {\n      this.callOnChangeHandler(true);\n      this.setState({\n        online: true\n      });\n    }\n  }\n\n  goOffline() {\n    if (this.state.online) {\n      this.callOnChangeHandler(false);\n      this.setState({\n        online: false\n      });\n    }\n  }\n\n  callOnChangeHandler(online) {\n    if (this.props.onChange) {\n      this.props.onChange(online, true);\n    }\n  }\n\n  startPolling() {\n    var _this = this;\n\n    const {\n      interval\n    } = this.getPollingConfig();\n    this.pollingId = setInterval(function () {\n      const {\n        url,\n        timeout\n      } = _this.getPollingConfig();\n\n      ping({\n        url,\n        timeout\n      }).then(function (online) {\n        online ? _this.goOnline() : _this.goOffline();\n      });\n    }, interval);\n  }\n\n  stopPolling() {\n    clearInterval(this.pollingId);\n  }\n\n}\n\nBase.propTypes = propTypes;\nBase.defaultProps = defaultProps;\nexport class Online extends Base {\n  render() {\n    return this.state.online ? this.renderChildren() : null;\n  }\n\n}\nOnline.propTypes = propTypes;\nOnline.defaultProps = defaultProps;\nexport class Offline extends Base {\n  render() {\n    return !this.state.online ? this.renderChildren() : null;\n  }\n\n}\nOffline.propTypes = propTypes;\nOffline.defaultProps = defaultProps;\nexport class Detector extends Base {\n  render() {\n    return this.props.render({\n      online: this.state.online\n    });\n  }\n\n}\nDetector.propTypes = _Object$assign({}, propTypes, {\n  render: PropTypes.func.isRequired\n});\nDetector.defaultProps = defaultProps;","map":{"version":3,"sources":["/Users/macbook/Desktop/giveawaypremium-client/common/components/InternetDetect/index.js"],"names":["Component","isValidElement","Children","createElement","PropTypes","window","require","inBrowser","navigator","unsupportedUserAgentsPattern","ping","url","timeout","resolve","isOnline","isOffline","xhr","XMLHttpRequest","onerror","ontimeout","onreadystatechange","readyState","HEADERS_RECEIVED","status","open","send","propTypes","children","node","onChange","func","polling","oneOfType","shape","string","interval","number","bool","wrapperType","defaultProps","defaultPollingConfig","enabled","test","userAgent","Base","constructor","state","online","onLine","goOnline","bind","goOffline","componentDidMount","addEventListener","onDefault","props","getPollingConfig","startPolling","componentWillUnmount","removeEventListener","pollingId","stopPolling","renderChildren","toArray","callOnChangeHandler","setState","setInterval","then","clearInterval","Online","render","Offline","Detector","isRequired"],"mappings":"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","sourcesContent":["import { Component, isValidElement, Children, createElement } from 'react'\nimport PropTypes from 'prop-types'\nvar window = require('global/window')\nconst inBrowser = typeof navigator !== 'undefined'\n\n// these browsers don't fully support navigator.onLine, so we need to use a polling backup\nconst unsupportedUserAgentsPattern = /Windows.*Chrome|Windows.*Firefox|Linux.*Chrome/\n\nconst ping = ({ url, timeout }) => {\n  return new Promise(resolve => {\n    const isOnline = () => resolve(true)\n    const isOffline = () => resolve(false)\n\n    // eslint-disable-next-line no-undef\n    const xhr = new XMLHttpRequest()\n\n    xhr.onerror = isOffline\n    xhr.ontimeout = isOffline\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === xhr.HEADERS_RECEIVED) {\n        if (xhr.status >= 200 && xhr.status < 400) {\n          isOnline()\n        } else {\n          isOffline()\n        }\n      }\n    }\n\n    xhr.open('HEAD', url)\n    xhr.timeout = timeout\n    xhr.send()\n  })\n}\n\nconst propTypes = {\n  children: PropTypes.node,\n  onChange: PropTypes.func,\n  polling: PropTypes.oneOfType([\n    PropTypes.shape({\n      url: PropTypes.string,\n      interval: PropTypes.number,\n      timeout: PropTypes.number\n    }),\n    PropTypes.bool\n  ]),\n  wrapperType: PropTypes.string\n}\n\nconst defaultProps = {\n  polling: true,\n  wrapperType: 'span'\n}\n\nconst defaultPollingConfig = {\n  enabled: inBrowser && unsupportedUserAgentsPattern.test(navigator.userAgent),\n  url: 'https://ipv4.icanhazip.com/',\n  timeout: 5000,\n  interval: 5000\n}\n\n// base class that detects offline/online changes\nclass Base extends Component {\n  constructor () {\n    super()\n    this.state = {\n      online:\n        inBrowser && typeof navigator.onLine === 'boolean'\n          ? navigator.onLine\n          : true\n    }\n    // bind event handlers\n    this.goOnline = this.goOnline.bind(this)\n    this.goOffline = this.goOffline.bind(this)\n  }\n\n  componentDidMount () {\n    window.addEventListener('online', this.goOnline)\n    window.addEventListener('offline', this.goOffline)\n    const { onDefault } = this.props\n    onDefault && onDefault(this.state.online)\n    if (this.getPollingConfig().enabled) {\n      this.startPolling()\n    }\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('online', this.goOnline)\n    window.removeEventListener('offline', this.goOffline)\n\n    if (this.pollingId) {\n      this.stopPolling()\n    }\n  }\n\n  renderChildren () {\n    const { children, wrapperType } = this.props\n\n    // usual case: one child that is a react Element\n    if (isValidElement(children)) {\n      return children\n    }\n\n    // no children\n    if (!children) {\n      return null\n    }\n\n    // string children, multiple children, or something else\n    return createElement(wrapperType, {}, ...Children.toArray(children))\n  }\n\n  getPollingConfig () {\n    switch (this.props.polling) {\n    case true:\n      return defaultPollingConfig\n    case false:\n      return { enabled: false }\n    default:\n      return Object.assign({}, defaultPollingConfig, this.props.polling)\n    }\n  }\n\n  goOnline () {\n    if (!this.state.online) {\n      this.callOnChangeHandler(true)\n      this.setState({ online: true })\n    }\n  }\n\n  goOffline () {\n    if (this.state.online) {\n      this.callOnChangeHandler(false)\n      this.setState({ online: false })\n    }\n  }\n\n  callOnChangeHandler (online) {\n    if (this.props.onChange) {\n      this.props.onChange(online, true)\n    }\n  }\n\n  startPolling () {\n    const { interval } = this.getPollingConfig()\n    this.pollingId = setInterval(() => {\n      const { url, timeout } = this.getPollingConfig()\n      ping({ url, timeout }).then(online => {\n        online ? this.goOnline() : this.goOffline()\n      })\n    }, interval)\n  }\n\n  stopPolling () {\n    clearInterval(this.pollingId)\n  }\n}\nBase.propTypes = propTypes\nBase.defaultProps = defaultProps\n\nexport class Online extends Base {\n  render () {\n    return this.state.online ? this.renderChildren() : null\n  }\n}\nOnline.propTypes = propTypes\nOnline.defaultProps = defaultProps\n\nexport class Offline extends Base {\n  render () {\n    return !this.state.online ? this.renderChildren() : null\n  }\n}\nOffline.propTypes = propTypes\nOffline.defaultProps = defaultProps\n\nexport class Detector extends Base {\n  render () {\n    return this.props.render({ online: this.state.online })\n  }\n}\nDetector.propTypes = Object.assign({}, propTypes, {\n  render: PropTypes.func.isRequired\n})\nDetector.defaultProps = defaultProps\n"]},"metadata":{},"sourceType":"module"}