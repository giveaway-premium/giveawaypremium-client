{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Modal } from 'antd';\nimport \"./style.scss\";\n\nvar MyModal = /*#__PURE__*/function (_React$Component) {\n  _inherits(MyModal, _React$Component);\n\n  var _super = _createSuper(MyModal);\n\n  function MyModal(props) {\n    var _this;\n\n    _classCallCheck(this, MyModal);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"openModal\", function (modalContent) {\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        modalWidth: 480,\n        closable: true,\n        wrapClassName: ''\n      };\n\n      _this.setState({\n        isShowModal: true,\n        modalContent: modalContent,\n        config: config\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeModal\", function () {\n      _this.setState({\n        isShowModal: false,\n        modalContent: null\n      });\n\n      var customClose = _this.props.customClose;\n      customClose && customClose();\n    });\n\n    _this.state = {\n      isShowModal: false,\n      modalContent: null,\n      config: {\n        modalWidth: 480,\n        closable: true,\n        wrapClassName: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(MyModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// code here\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isShowModal = _this$state.isShowModal,\n          modalContent = _this$state.modalContent,\n          config = _this$state.config;\n      return __jsx(Modal, {\n        wrapClassName: config.wrapClassName,\n        width: config.modalWidth,\n        title: null,\n        footer: null,\n        centered: true,\n        visible: isShowModal,\n        onOk: null,\n        onCancel: this.closeModal,\n        closable: config.closable,\n        maskClosable: config.closable\n      }, modalContent && modalContent);\n    }\n  }]);\n\n  return MyModal;\n}(React.Component);\n\nexport default MyModal;","map":{"version":3,"sources":["/Users/macbook/Desktop/giveawaypremium-client/pages/Components/MyModal/index.js"],"names":["React","Modal","MyModal","props","modalContent","config","modalWidth","closable","wrapClassName","setState","isShowModal","customClose","state","closeModal","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA;;IACMC,O;;;;;AACJ,mBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;;AADkB,gEAiBR,UAACC,YAAD,EAAmF;AAAA,UAApEC,MAAoE,uEAA3D;AAAEC,QAAAA,UAAU,EAAE,GAAd;AAAmBC,QAAAA,QAAQ,EAAE,IAA7B;AAAmCC,QAAAA,aAAa,EAAE;AAAlD,OAA2D;;AAC7F,YAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAE,IADD;AAEZN,QAAAA,YAAY,EAAZA,YAFY;AAGZC,QAAAA,MAAM,EAANA;AAHY,OAAd;AAKD,KAvBmB;;AAAA,iEAyBP,YAAM;AACjB,YAAKI,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAE,KADD;AAEZN,QAAAA,YAAY,EAAE;AAFF,OAAd;;AADiB,UAKTO,WALS,GAKO,MAAKR,KALZ,CAKTQ,WALS;AAMjBA,MAAAA,WAAW,IAAIA,WAAW,EAA1B;AACD,KAhCmB;;AAElB,UAAKC,KAAL,GAAa;AACXF,MAAAA,WAAW,EAAE,KADF;AAEXN,MAAAA,YAAY,EAAE,IAFH;AAGXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,UAAU,EAAE,GADN;AAENC,QAAAA,QAAQ,EAAE,IAFJ;AAGNC,QAAAA,aAAa,EAAE;AAHT;AAHG,KAAb;AAFkB;AAWnB;;;;WAED,6BAAqB,CACnB;AACD;;;WAmBD,kBAAU;AAAA,wBACsC,KAAKI,KAD3C;AAAA,UACAF,WADA,eACAA,WADA;AAAA,UACaN,YADb,eACaA,YADb;AAAA,UAC2BC,MAD3B,eAC2BA,MAD3B;AAER,aACE,MAAC,KAAD;AACE,QAAA,aAAa,EAAEA,MAAM,CAACG,aADxB;AAEE,QAAA,KAAK,EAAEH,MAAM,CAACC,UAFhB;AAGE,QAAA,KAAK,EAAE,IAHT;AAIE,QAAA,MAAM,EAAE,IAJV;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,OAAO,EAAEI,WANX;AAOE,QAAA,IAAI,EAAE,IAPR;AAQE,QAAA,QAAQ,EAAE,KAAKG,UARjB;AASE,QAAA,QAAQ,EAAER,MAAM,CAACE,QATnB;AAUE,QAAA,YAAY,EAAEF,MAAM,CAACE;AAVvB,SAYGH,YAAY,IAAIA,YAZnB,CADF;AAgBD;;;;EArDmBJ,KAAK,CAACc,S;;AAwD5B,eAAeZ,OAAf","sourcesContent":["import React from 'react'\nimport { Modal } from 'antd'\nimport './style.scss'\nclass MyModal extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isShowModal: false,\n      modalContent: null,\n      config: {\n        modalWidth: 480,\n        closable: true,\n        wrapClassName: ''\n      }\n    }\n  }\n\n  componentDidMount () {\n    // code here\n  }\n\n  openModal = (modalContent, config = { modalWidth: 480, closable: true, wrapClassName: '' }) => {\n    this.setState({\n      isShowModal: true,\n      modalContent,\n      config\n    })\n  }\n\n  closeModal = () => {\n    this.setState({\n      isShowModal: false,\n      modalContent: null\n    })\n    const { customClose } = this.props\n    customClose && customClose()\n  }\n\n  render () {\n    const { isShowModal, modalContent, config } = this.state\n    return (\n      <Modal\n        wrapClassName={config.wrapClassName}\n        width={config.modalWidth}\n        title={null}\n        footer={null}\n        centered\n        visible={isShowModal}\n        onOk={null}\n        onCancel={this.closeModal}\n        closable={config.closable}\n        maskClosable={config.closable}\n      >\n        {modalContent && modalContent}\n      </Modal>\n    )\n  }\n}\n\nexport default MyModal\n"]},"metadata":{},"sourceType":"module"}