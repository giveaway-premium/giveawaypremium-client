{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport { REQUEST_TYPE } from \"../../../common/constants\";\nimport ReduxService from \"../../../common/redux\";\nimport QueryString from 'query-string';\n\nvar Gap = /*#__PURE__*/function () {\n  function Gap() {\n    _classCallCheck(this, Gap);\n  }\n\n  _createClass(Gap, null, [{\n    key: \"logInAdmin\",\n    value: function logInAdmin(username, password) {\n      var queryBody = {\n        username: username,\n        password: password\n      };\n      return this.fetchData('/login', REQUEST_TYPE.GET, queryBody, null, null, null, null, true);\n    } // Appointment\n\n  }, {\n    key: \"getAppointmentWithDate\",\n    value: function () {\n      var _getAppointmentWithDate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dateArray) {\n        var customQuery;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                customQuery = \"where={\\\"date\\\":{\\\"$in\\\":[\".concat(_toConsumableArray(dateArray), \"]}}\");\n                return _context.abrupt(\"return\", this.fetchData('/classes/AppointmentSchedule', REQUEST_TYPE.GET, null, null, null, null, customQuery));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getAppointmentWithDate(_x) {\n        return _getAppointmentWithDate.apply(this, arguments);\n      }\n\n      return getAppointmentWithDate;\n    }()\n  }, {\n    key: \"getAppointmentWithSlotId\",\n    value: function () {\n      var _getAppointmentWithSlotId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(slotID) {\n        var customQuery;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                customQuery = \"where={\\\"slot\\\":\".concat(slotID, \"}\");\n                return _context2.abrupt(\"return\", this.fetchData('/classes/AppointmentSchedule', REQUEST_TYPE.GET, null, null, null, null, customQuery));\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getAppointmentWithSlotId(_x2) {\n        return _getAppointmentWithSlotId.apply(this, arguments);\n      }\n\n      return getAppointmentWithSlotId;\n    }()\n  }, {\n    key: \"setAppointment\",\n    value: function () {\n      var _setAppointment = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(formData, slotID, formatedTime, formatedDay) {\n        var res, body;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.getAppointmentWithSlotId(slotID);\n\n              case 2:\n                res = _context3.sent;\n\n                if (!(res && res.results && res.results.length === 0)) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                body = {\n                  slot: slotID,\n                  date: formatedDay,\n                  dateTime: formatedTime,\n                  agency: {\n                    '__type': 'Pointer',\n                    'className': 'Agency',\n                    'objectId': 'KcPHTActcd'\n                  },\n                  // we need set more agency after\n                  customerName: formData.customerName,\n                  phoneNumber: formData.phoneNumber,\n                  numberOfProduct: \"\".concat(formData.numberOfProduct)\n                };\n                return _context3.abrupt(\"return\", this.fetchData('/classes/AppointmentSchedule', REQUEST_TYPE.POST, null, body));\n\n              case 8:\n                return _context3.abrupt(\"return\", false);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function setAppointment(_x3, _x4, _x5, _x6) {\n        return _setAppointment.apply(this, arguments);\n      }\n\n      return setAppointment;\n    }() // Consignment Group\n\n  }, {\n    key: \"getConsignmentID\",\n    value: function () {\n      var _getConsignmentID = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var queryBody;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                queryBody = {\n                  count: true\n                };\n                return _context4.abrupt(\"return\", this.fetchData('/classes/ConsignmentGroup', REQUEST_TYPE.GET, queryBody));\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getConsignmentID() {\n        return _getConsignmentID.apply(this, arguments);\n      }\n\n      return getConsignmentID;\n    }()\n  }, {\n    key: \"setConsignmentID\",\n    value: function () {\n      var _setConsignmentID = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(tag) {\n        var body;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                body = {\n                  code: tag.code,\n                  timeGetMoney: tag.timeGetMoney\n                };\n                return _context5.abrupt(\"return\", this.fetchData('/classes/ConsignmentGroup', REQUEST_TYPE.POST, null, body));\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function setConsignmentID(_x7) {\n        return _setConsignmentID.apply(this, arguments);\n      }\n\n      return setConsignmentID;\n    }()\n  }, {\n    key: \"deleteConsignmentID\",\n    value: function () {\n      var _deleteConsignmentID = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(objectId) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                return _context6.abrupt(\"return\", this.fetchData(\"/classes/ConsignmentGroup/\".concat(objectId), REQUEST_TYPE.DELETE, null));\n\n              case 4:\n                _context6.prev = 4;\n                _context6.t0 = _context6[\"catch\"](0);\n                console.log(_context6.t0);\n                return _context6.abrupt(\"return\", false);\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 4]]);\n      }));\n\n      function deleteConsignmentID(_x8) {\n        return _deleteConsignmentID.apply(this, arguments);\n      }\n\n      return deleteConsignmentID;\n    }() // Consignment\n\n  }, {\n    key: \"setConsignment\",\n    value: function () {\n      var _setConsignment = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(formData, consigneeData, consignerData, timeGroupId) {\n        var body;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                body = {\n                  consignmentId: formData.consignmentId,\n                  consignerName: formData.consignerName,\n                  consignerIdCard: formData.consignerIdCard,\n                  consignee: {\n                    '__type': 'Pointer',\n                    'className': '_User',\n                    'objectId': consigneeData\n                  },\n                  consigner: {\n                    '__type': 'Pointer',\n                    'className': '_User',\n                    'objectId': consignerData\n                  },\n                  group: {\n                    '__type': 'Pointer',\n                    'className': 'ConsignmentGroup',\n                    'objectId': timeGroupId\n                  },\n                  consigneeName: formData.consigneeName,\n                  phoneNumber: formData.phoneNumber,\n                  numberOfProducts: Number(formData.numberOfProducts),\n                  timeGetMoney: formData.timeGetMoney || '',\n                  banks: [{\n                    type: formData.bankName,\n                    accNumber: formData.bankId\n                  }]\n                };\n                console.log('body setConsignment');\n                console.log(body);\n                return _context7.abrupt(\"return\", this.fetchData('/classes/Consignment', REQUEST_TYPE.POST, null, body));\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function setConsignment(_x9, _x10, _x11, _x12) {\n        return _setConsignment.apply(this, arguments);\n      }\n\n      return setConsignment;\n    }()\n  }, {\n    key: \"getConsignment\",\n    value: function () {\n      var _getConsignment = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var page,\n            keyword,\n            limit,\n            skip,\n            queryBody,\n            customQuery,\n            _args8 = arguments;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                page = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : 1;\n                keyword = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : null;\n                limit = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : 20;\n                skip = 20 * page - 20;\n                queryBody = {\n                  limit: limit,\n                  skip: skip,\n                  count: true\n                };\n\n                if (!keyword) {\n                  _context8.next = 10;\n                  break;\n                }\n\n                customQuery = \"where={\\\"phoneNumber\\\":{\\\"$regex\\\":\\\"\".concat(keyword, \"\\\"}}\");\n                return _context8.abrupt(\"return\", this.fetchData('/classes/Consignment', REQUEST_TYPE.GET, queryBody, null, null, null, customQuery));\n\n              case 10:\n                return _context8.abrupt(\"return\", this.fetchData('/classes/Consignment', REQUEST_TYPE.GET, queryBody));\n\n              case 11:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getConsignment() {\n        return _getConsignment.apply(this, arguments);\n      }\n\n      return getConsignment;\n    }()\n  }, {\n    key: \"updateConsignment\",\n    value: function () {\n      var _updateConsignment = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(item) {\n        var body;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n                body = {\n                  consignmentId: item.consignmentId,\n                  numberOfProducts: Number(item.numberOfProducts),\n                  numSoldConsignment: Number(item.numSoldConsignment || 0),\n                  remainNumConsignment: Number(item.numberOfProducts) - Number(item.numSoldConsignment || 0),\n                  moneyBack: Number(item.moneyBack) || 0,\n                  isGetMoney: item.isGetMoney || false,\n                  timeGetMoney: item.timeGetMoney || ''\n                };\n                console.log('body update consignment', body);\n                console.log('item update consignment', item);\n                return _context9.abrupt(\"return\", this.fetchData(\"/classes/Consignment/\".concat(item.objectId), REQUEST_TYPE.PUT, null, body));\n\n              case 7:\n                _context9.prev = 7;\n                _context9.t0 = _context9[\"catch\"](0);\n                console.log(_context9.t0);\n                return _context9.abrupt(\"return\", false);\n\n              case 11:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[0, 7]]);\n      }));\n\n      function updateConsignment(_x13) {\n        return _updateConsignment.apply(this, arguments);\n      }\n\n      return updateConsignment;\n    }() // Customer\n\n  }, {\n    key: \"setCustomer\",\n    value: function () {\n      var _setCustomer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(formData) {\n        var body;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                body = {\n                  fullName: formData.consignerName,\n                  phoneNumber: formData.phoneNumber,\n                  identityNumber: formData.consignerIdCard,\n                  mail: formData.mail,\n                  email: formData.mail || 'nothing@giveaway.com',\n                  birthday: formData.birthday,\n                  username: formData.username,\n                  password: formData.password,\n                  banks: [{\n                    type: formData.bankName,\n                    accNumber: formData.bankId\n                  }]\n                };\n                return _context10.abrupt(\"return\", this.fetchData('/classes/_User', REQUEST_TYPE.POST, null, body));\n\n              case 2:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function setCustomer(_x14) {\n        return _setCustomer.apply(this, arguments);\n      }\n\n      return setCustomer;\n    }()\n  }, {\n    key: \"updateCustomerTable\",\n    value: function () {\n      var _updateCustomerTable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(formData) {\n        var body;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                body = {\n                  fullName: formData.fullName,\n                  phoneNumber: formData.phoneNumber,\n                  identityNumber: formData.identityNumber,\n                  mail: formData.mail,\n                  birthday: formData.birthday,\n                  banks: [{\n                    type: formData.bankName,\n                    accNumber: formData.bankId\n                  }]\n                };\n                return _context11.abrupt(\"return\", this.fetchData(\"/classes/_User/\".concat(formData.objectId), REQUEST_TYPE.PUT, null, body, null, null, null, true));\n\n              case 2:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function updateCustomerTable(_x15) {\n        return _updateCustomerTable.apply(this, arguments);\n      }\n\n      return updateCustomerTable;\n    }()\n  }, {\n    key: \"updateCustomer\",\n    value: function () {\n      var _updateCustomer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(formData, objectId) {\n        var body;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                body = {\n                  fullName: formData.consignerName,\n                  phoneNumber: formData.phoneNumber,\n                  identityNumber: formData.consignerIdCard,\n                  mail: formData.mail,\n                  birthday: formData.birthday,\n                  banks: [{\n                    type: formData.bankName,\n                    accNumber: formData.bankId\n                  }]\n                };\n                return _context12.abrupt(\"return\", this.fetchData(\"/classes/_User/\".concat(objectId), REQUEST_TYPE.PUT, null, body, null, null, null, true));\n\n              case 2:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function updateCustomer(_x16, _x17) {\n        return _updateCustomer.apply(this, arguments);\n      }\n\n      return updateCustomer;\n    }()\n  }, {\n    key: \"getCustomerTable\",\n    value: function () {\n      var _getCustomerTable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        var page,\n            keyword,\n            limit,\n            skip,\n            queryBody,\n            customQuery,\n            _customQuery,\n            _args13 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                page = _args13.length > 0 && _args13[0] !== undefined ? _args13[0] : 1;\n                keyword = _args13.length > 1 && _args13[1] !== undefined ? _args13[1] : null;\n                limit = 20;\n                skip = 20 * page - 20;\n                queryBody = {\n                  limit: limit,\n                  skip: skip,\n                  count: true\n                };\n\n                if (!keyword) {\n                  _context13.next = 10;\n                  break;\n                }\n\n                customQuery = \"where={\\\"role\\\":\\\"customer\\\",\\\"phoneNumber\\\":{\\\"$regex\\\":\\\"\".concat(keyword, \"\\\"}}\");\n                return _context13.abrupt(\"return\", this.fetchData('/classes/_User', REQUEST_TYPE.GET, queryBody, null, null, null, customQuery));\n\n              case 10:\n                _customQuery = \"where={\\\"role\\\":\\\"customer\\\"}\";\n                return _context13.abrupt(\"return\", this.fetchData('/classes/_User', REQUEST_TYPE.GET, queryBody, null, null, null, _customQuery));\n\n              case 12:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function getCustomerTable() {\n        return _getCustomerTable.apply(this, arguments);\n      }\n\n      return getCustomerTable;\n    }()\n  }, {\n    key: \"getCustomer\",\n    value: function () {\n      var _getCustomer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(phoneNumber) {\n        var customQuery;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                customQuery = \"where={\\\"phoneNumber\\\":\\\"\".concat(phoneNumber.toString(), \"\\\"}\");\n                return _context14.abrupt(\"return\", this.fetchData('/classes/_User', REQUEST_TYPE.GET, null, null, null, null, customQuery));\n\n              case 2:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function getCustomer(_x18) {\n        return _getCustomer.apply(this, arguments);\n      }\n\n      return getCustomer;\n    }()\n  }, {\n    key: \"fetchData\",\n    value: function () {\n      var _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(apiUrl, method, queryBody, postData, hostLink) {\n        var authKey,\n            customQuery,\n            isUseAuthKey,\n            key,\n            HOST,\n            header,\n            params,\n            queryStr,\n            response,\n            responJson,\n            _args15 = arguments;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                authKey = _args15.length > 5 && _args15[5] !== undefined ? _args15[5] : '';\n                customQuery = _args15.length > 6 && _args15[6] !== undefined ? _args15[6] : null;\n                isUseAuthKey = _args15.length > 7 && _args15[7] !== undefined ? _args15[7] : false;\n                _context15.prev = 3;\n                _context15.t0 = authKey;\n\n                if (_context15.t0) {\n                  _context15.next = 9;\n                  break;\n                }\n\n                _context15.next = 8;\n                return ReduxService.getAuthKeyBearer();\n\n              case 8:\n                _context15.t0 = _context15.sent;\n\n              case 9:\n                key = _context15.t0;\n                HOST = hostLink || process.env.SERVER_URL;\n                header = {\n                  'X-Parse-Application-Id': process.env.APP_ID,\n                  'X-Parse-REST-API-Key': process.env.REST_API_KEY\n                };\n\n                if (isUseAuthKey) {\n                  header = {\n                    'X-Parse-Application-Id': process.env.APP_ID,\n                    'X-Parse-REST-API-Key': process.env.REST_API_KEY,\n                    'X-Parse-Session-Token': \"\".concat(key)\n                  };\n                }\n\n                params = {\n                  method: method || REQUEST_TYPE.GET,\n                  headers: header\n                };\n\n                if (postData) {\n                  params.body = _JSON$stringify(postData);\n                }\n\n                queryStr = queryBody ? '?' + QueryString.stringify(queryBody) : '';\n\n                if (customQuery) {\n                  queryStr = \"?\".concat(encodeURI(customQuery));\n                }\n\n                _context15.next = 19;\n                return fetch(HOST + apiUrl + queryStr, params);\n\n              case 19:\n                response = _context15.sent;\n                _context15.next = 22;\n                return response.json();\n\n              case 22:\n                responJson = _context15.sent;\n                return _context15.abrupt(\"return\", responJson || response);\n\n              case 26:\n                _context15.prev = 26;\n                _context15.t1 = _context15[\"catch\"](3);\n                return _context15.abrupt(\"return\", null);\n\n              case 29:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, null, [[3, 26]]);\n      }));\n\n      function fetchData(_x19, _x20, _x21, _x22, _x23) {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }()\n  }]);\n\n  return Gap;\n}();\n\nexport { Gap as default };","map":{"version":3,"sources":["/Users/macbook/Desktop/giveawaypremium-client/controller/Api/Services/Gap.js"],"names":["REQUEST_TYPE","ReduxService","QueryString","Gap","username","password","queryBody","fetchData","GET","dateArray","customQuery","slotID","formData","formatedTime","formatedDay","getAppointmentWithSlotId","res","results","length","body","slot","date","dateTime","agency","customerName","phoneNumber","numberOfProduct","POST","count","tag","code","timeGetMoney","objectId","DELETE","console","log","consigneeData","consignerData","timeGroupId","consignmentId","consignerName","consignerIdCard","consignee","consigner","group","consigneeName","numberOfProducts","Number","banks","type","bankName","accNumber","bankId","page","keyword","limit","skip","item","numSoldConsignment","remainNumConsignment","moneyBack","isGetMoney","PUT","fullName","identityNumber","mail","email","birthday","toString","apiUrl","method","postData","hostLink","authKey","isUseAuthKey","getAuthKeyBearer","key","HOST","process","env","SERVER_URL","header","APP_ID","REST_API_KEY","params","headers","queryStr","stringify","encodeURI","fetch","response","json","responJson"],"mappings":"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","sourcesContent":["\nimport { REQUEST_TYPE } from 'common/constants'\nimport ReduxService from 'common/redux'\nimport QueryString from 'query-string'\n\nexport default class Gap {\n  static logInAdmin (username, password) {\n    const queryBody = {\n      username: username,\n      password: password\n    }\n\n    return this.fetchData('/login', REQUEST_TYPE.GET, queryBody, null, null, null, null, true)\n  }\n\n  // Appointment\n\n  static async getAppointmentWithDate (dateArray) {\n    const customQuery = `where={\"date\":{\"$in\":[${[...dateArray]}]}}`\n    return this.fetchData('/classes/AppointmentSchedule', REQUEST_TYPE.GET, null, null, null, null, customQuery)\n  }\n\n  static async getAppointmentWithSlotId (slotID) {\n    const customQuery = `where={\"slot\":${slotID}}`\n    return this.fetchData('/classes/AppointmentSchedule', REQUEST_TYPE.GET, null, null, null, null, customQuery)\n  }\n\n  static async setAppointment (formData, slotID, formatedTime, formatedDay) {\n    const res = await this.getAppointmentWithSlotId(slotID)\n\n    if (res && res.results && res.results.length === 0) {\n      const body = {\n        slot: slotID,\n        date: formatedDay,\n        dateTime: formatedTime,\n        agency: { '__type': 'Pointer', 'className': 'Agency', 'objectId': 'KcPHTActcd' }, // we need set more agency after\n        customerName: formData.customerName,\n        phoneNumber: formData.phoneNumber,\n        numberOfProduct: `${formData.numberOfProduct}`\n      }\n      return this.fetchData('/classes/AppointmentSchedule', REQUEST_TYPE.POST, null, body)\n    } else {\n      return false\n    }\n  }\n\n  // Consignment Group\n\n  static async getConsignmentID () {\n    const queryBody = {\n      count: true\n    }\n    return this.fetchData('/classes/ConsignmentGroup', REQUEST_TYPE.GET, queryBody)\n  }\n\n  static async setConsignmentID (tag) {\n    const body = {\n      code: tag.code,\n      timeGetMoney: tag.timeGetMoney\n    }\n    return this.fetchData('/classes/ConsignmentGroup', REQUEST_TYPE.POST, null, body)\n  }\n\n  static async deleteConsignmentID (objectId) {\n    try {\n      return this.fetchData(`/classes/ConsignmentGroup/${objectId}`, REQUEST_TYPE.DELETE, null)\n    } catch (e) {\n      console.log(e)\n      return false\n    }\n  }\n\n  // Consignment\n  static async setConsignment (formData, consigneeData, consignerData, timeGroupId) {\n    const body = {\n      consignmentId: formData.consignmentId,\n      consignerName: formData.consignerName,\n      consignerIdCard: formData.consignerIdCard,\n      consignee: { '__type': 'Pointer', 'className': '_User', 'objectId': consigneeData },\n      consigner: { '__type': 'Pointer', 'className': '_User', 'objectId': consignerData },\n      group: { '__type': 'Pointer', 'className': 'ConsignmentGroup', 'objectId': timeGroupId },\n      consigneeName: formData.consigneeName,\n      phoneNumber: formData.phoneNumber,\n      numberOfProducts: Number(formData.numberOfProducts),\n      timeGetMoney: formData.timeGetMoney || '',\n      banks: [{\n        type: formData.bankName,\n        accNumber: formData.bankId\n      }]\n    }\n    console.log('body setConsignment')\n    console.log(body)\n    return this.fetchData('/classes/Consignment', REQUEST_TYPE.POST, null, body)\n  }\n\n  static async getConsignment (page = 1, keyword = null, limit = 20) {\n    let skip = (20 * page) - 20\n\n    const queryBody = {\n      limit: limit,\n      skip: skip,\n      count: true\n    }\n\n    if (keyword) {\n      const customQuery = `where={\"phoneNumber\":{\"$regex\":\"${keyword}\"}}`\n      return this.fetchData('/classes/Consignment', REQUEST_TYPE.GET, queryBody, null, null, null, customQuery)\n    } else {\n      return this.fetchData('/classes/Consignment', REQUEST_TYPE.GET, queryBody)\n    }\n  }\n\n  static async updateConsignment (item) {\n    try {\n      const body = {\n        consignmentId: item.consignmentId,\n        numberOfProducts: Number(item.numberOfProducts),\n        numSoldConsignment: Number(item.numSoldConsignment || 0),\n        remainNumConsignment: Number(item.numberOfProducts) - Number(item.numSoldConsignment || 0),\n        moneyBack: Number(item.moneyBack) || 0,\n        isGetMoney: item.isGetMoney || false,\n        timeGetMoney: item.timeGetMoney || ''\n      }\n\n      console.log('body update consignment', body)\n      console.log('item update consignment', item)\n\n      return this.fetchData(`/classes/Consignment/${item.objectId}`, REQUEST_TYPE.PUT, null, body)\n    } catch (e) {\n      console.log(e)\n      return false\n    }\n  }\n\n  // Customer\n  static async setCustomer (formData) {\n    const body = {\n      fullName: formData.consignerName,\n      phoneNumber: formData.phoneNumber,\n      identityNumber: formData.consignerIdCard,\n      mail: formData.mail,\n      email: formData.mail || 'nothing@giveaway.com',\n      birthday: formData.birthday,\n      username: formData.username,\n      password: formData.password,\n      banks: [{\n        type: formData.bankName,\n        accNumber: formData.bankId\n      }]\n    }\n    return this.fetchData('/classes/_User', REQUEST_TYPE.POST, null, body)\n  }\n\n  static async updateCustomerTable (formData) {\n    const body = {\n      fullName: formData.fullName,\n      phoneNumber: formData.phoneNumber,\n      identityNumber: formData.identityNumber,\n      mail: formData.mail,\n      birthday: formData.birthday,\n      banks: [{\n        type: formData.bankName,\n        accNumber: formData.bankId\n      }]\n    }\n\n    return this.fetchData(`/classes/_User/${formData.objectId}`, REQUEST_TYPE.PUT, null, body, null, null, null, true)\n  }\n\n  static async updateCustomer (formData, objectId) {\n    const body = {\n      fullName: formData.consignerName,\n      phoneNumber: formData.phoneNumber,\n      identityNumber: formData.consignerIdCard,\n      mail: formData.mail,\n      birthday: formData.birthday,\n      banks: [{\n        type: formData.bankName,\n        accNumber: formData.bankId\n      }]\n    }\n    return this.fetchData(`/classes/_User/${objectId}`, REQUEST_TYPE.PUT, null, body, null, null, null, true)\n  }\n\n  static async getCustomerTable (page = 1, keyword = null) {\n    let limit = 20\n    let skip = (20 * page) - 20\n\n    const queryBody = {\n      limit: limit,\n      skip: skip,\n      count: true\n    }\n\n    if (keyword) {\n      const customQuery = `where={\"role\":\"customer\",\"phoneNumber\":{\"$regex\":\"${keyword}\"}}`\n      return this.fetchData('/classes/_User', REQUEST_TYPE.GET, queryBody, null, null, null, customQuery)\n    } else {\n      const customQuery = `where={\"role\":\"customer\"}`\n      return this.fetchData('/classes/_User', REQUEST_TYPE.GET, queryBody, null, null, null, customQuery)\n    }\n  }\n\n  static async getCustomer (phoneNumber) {\n    const customQuery = `where={\"phoneNumber\":\"${phoneNumber.toString()}\"}`\n\n    return this.fetchData('/classes/_User', REQUEST_TYPE.GET, null, null, null, null, customQuery)\n  }\n\n  static async fetchData (apiUrl, method, queryBody, postData, hostLink, authKey = '', customQuery = null, isUseAuthKey = false) {\n    try {\n      const key = authKey || await ReduxService.getAuthKeyBearer()\n      const HOST = hostLink || process.env.SERVER_URL\n\n      let header = {\n        'X-Parse-Application-Id': process.env.APP_ID,\n        'X-Parse-REST-API-Key': process.env.REST_API_KEY\n      }\n\n      if (isUseAuthKey) {\n        header = {\n          'X-Parse-Application-Id': process.env.APP_ID,\n          'X-Parse-REST-API-Key': process.env.REST_API_KEY,\n          'X-Parse-Session-Token': `${key}`\n        }\n      }\n\n      let params = {\n        method: method || REQUEST_TYPE.GET,\n        headers: header\n      }\n\n      if (postData) {\n        params.body = JSON.stringify(postData)\n      }\n\n      let queryStr = queryBody\n        ? '?' + QueryString.stringify(queryBody)\n        : ''\n\n      if (customQuery) {\n        queryStr = `?${encodeURI(customQuery)}`\n      }\n      const response = await fetch(HOST + apiUrl + queryStr, params)\n      const responJson = await response.json()\n      return responJson || response\n    } catch (error) {\n      return null\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}