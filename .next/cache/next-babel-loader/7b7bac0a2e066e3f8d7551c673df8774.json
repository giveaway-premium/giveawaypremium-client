{"ast":null,"code":"import createReducer from \"../lib/reducerConfig\";\nimport MessageVI from \"../../../static/Assets/Lang/ja.json\";\nimport MessageEN from \"../../../static/Assets/Lang/en.json\";\nimport MessageCN from \"../../../static/Assets/Lang/cn.json\";\nimport { KEY_STORE } from \"../../../common/constants\";\nimport initState from \"../lib/initState\";\nconst localeJA = {\n  lang: 'ja',\n  messages: MessageVI\n};\nconst localeEN = {\n  lang: 'en',\n  messages: MessageEN\n};\nconst localeCN = {\n  lang: 'cn',\n  messages: MessageCN\n};\nexport const locale = createReducer(localeEN, {\n  [KEY_STORE.SET_LOCALE](state, action) {\n    switch (action.payload) {\n      case 'en':\n        return localeEN;\n\n      case 'ja':\n        return localeJA;\n\n      case 'cn':\n        return localeCN;\n\n      default:\n        return localeEN;\n    }\n  }\n\n});\nexport const userData = createReducer(initState.userData, {\n  [KEY_STORE.SET_USER](state, action) {\n    return action.payload;\n  }\n\n});\nexport const settingRedux = createReducer(initState.setting, {\n  [KEY_STORE.SET_SETTING](state, action) {\n    return action.payload;\n  }\n\n});\nexport const transferDataRedux = createReducer(initState.transferData, {\n  [KEY_STORE.SET_TRANSFER_DATA](state, action) {\n    return action.payload;\n  }\n\n});","map":{"version":3,"sources":["/Users/macbook/Desktop/giveawaypremium-client/controller/Redux/reducers/storageReducers.js"],"names":["createReducer","MessageVI","MessageEN","MessageCN","KEY_STORE","initState","localeJA","lang","messages","localeEN","localeCN","locale","SET_LOCALE","state","action","payload","userData","SET_USER","settingRedux","setting","SET_SETTING","transferDataRedux","transferData","SET_TRANSFER_DATA"],"mappings":"AAAA,OAAOA,aAAP;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;AACA,SAASC,SAAT;AACA,OAAOC,SAAP;AACA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,IAAI,EAAE,IADS;AAEfC,EAAAA,QAAQ,EAAEP;AAFK,CAAjB;AAKA,MAAMQ,QAAQ,GAAG;AACfF,EAAAA,IAAI,EAAE,IADS;AAEfC,EAAAA,QAAQ,EAAEN;AAFK,CAAjB;AAKA,MAAMQ,QAAQ,GAAG;AACfH,EAAAA,IAAI,EAAE,IADS;AAEfC,EAAAA,QAAQ,EAAEL;AAFK,CAAjB;AAKA,OAAO,MAAMQ,MAAM,GAAGX,aAAa,CAACS,QAAD,EAAW;AAC5C,GAACL,SAAS,CAACQ,UAAX,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuC;AACrC,YAAQA,MAAM,CAACC,OAAf;AACA,WAAK,IAAL;AACE,eAAON,QAAP;;AACF,WAAK,IAAL;AACE,eAAOH,QAAP;;AACF,WAAK,IAAL;AACE,eAAOI,QAAP;;AACF;AACE,eAAOD,QAAP;AARF;AAUD;;AAZ2C,CAAX,CAA5B;AAeP,OAAO,MAAMO,QAAQ,GAAGhB,aAAa,CAACK,SAAS,CAACW,QAAX,EAAqB;AACxD,GAACZ,SAAS,CAACa,QAAX,EAAsBJ,KAAtB,EAA6BC,MAA7B,EAAqC;AACnC,WAAOA,MAAM,CAACC,OAAd;AACD;;AAHuD,CAArB,CAA9B;AAMP,OAAO,MAAMG,YAAY,GAAGlB,aAAa,CAACK,SAAS,CAACc,OAAX,EAAoB;AAC3D,GAACf,SAAS,CAACgB,WAAX,EAAyBP,KAAzB,EAAgCC,MAAhC,EAAwC;AACtC,WAAOA,MAAM,CAACC,OAAd;AACD;;AAH0D,CAApB,CAAlC;AAMP,OAAO,MAAMM,iBAAiB,GAAGrB,aAAa,CAACK,SAAS,CAACiB,YAAX,EAAyB;AACrE,GAAClB,SAAS,CAACmB,iBAAX,EAA+BV,KAA/B,EAAsCC,MAAtC,EAA8C;AAC5C,WAAOA,MAAM,CAACC,OAAd;AACD;;AAHoE,CAAzB,CAAvC","sourcesContent":["import createReducer from '../lib/reducerConfig'\nimport MessageVI from 'static/Assets/Lang/ja.json'\nimport MessageEN from 'static/Assets/Lang/en.json'\nimport MessageCN from 'static/Assets/Lang/cn.json'\nimport { KEY_STORE } from 'common/constants'\nimport initState from '../lib/initState'\nconst localeJA = {\n  lang: 'ja',\n  messages: MessageVI\n}\n\nconst localeEN = {\n  lang: 'en',\n  messages: MessageEN\n}\n\nconst localeCN = {\n  lang: 'cn',\n  messages: MessageCN\n}\n\nexport const locale = createReducer(localeEN, {\n  [KEY_STORE.SET_LOCALE] (state, action) {\n    switch (action.payload) {\n    case 'en':\n      return localeEN\n    case 'ja':\n      return localeJA\n    case 'cn':\n      return localeCN\n    default:\n      return localeEN\n    }\n  }\n})\n\nexport const userData = createReducer(initState.userData, {\n  [KEY_STORE.SET_USER] (state, action) {\n    return action.payload\n  }\n})\n\nexport const settingRedux = createReducer(initState.setting, {\n  [KEY_STORE.SET_SETTING] (state, action) {\n    return action.payload\n  }\n})\n\nexport const transferDataRedux = createReducer(initState.transferData, {\n  [KEY_STORE.SET_TRANSFER_DATA] (state, action) {\n    return action.payload\n  }\n})"]},"metadata":{},"sourceType":"module"}