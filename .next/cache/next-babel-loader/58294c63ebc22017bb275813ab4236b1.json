{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Modal } from 'antd';\nimport \"./style.scss\";\n\nclass MyModal extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    _defineProperty(this, \"openModal\", function (modalContent, config = {\n      modalWidth: 480,\n      closable: true,\n      wrapClassName: ''\n    }) {\n      _this.setState({\n        isShowModal: true,\n        modalContent,\n        config\n      });\n    });\n\n    _defineProperty(this, \"closeModal\", function () {\n      _this.setState({\n        isShowModal: false,\n        modalContent: null\n      });\n\n      const {\n        customClose\n      } = _this.props;\n      customClose && customClose();\n    });\n\n    this.state = {\n      isShowModal: false,\n      modalContent: null,\n      config: {\n        modalWidth: 480,\n        closable: true,\n        wrapClassName: ''\n      }\n    };\n  }\n\n  componentDidMount() {// code here\n  }\n\n  render() {\n    const {\n      isShowModal,\n      modalContent,\n      config\n    } = this.state;\n    return __jsx(Modal, {\n      wrapClassName: config.wrapClassName,\n      width: config.modalWidth,\n      title: null,\n      footer: null,\n      centered: true,\n      visible: isShowModal,\n      onOk: null,\n      onCancel: this.closeModal,\n      closable: config.closable,\n      maskClosable: config.closable\n    }, modalContent && modalContent);\n  }\n\n}\n\nexport default MyModal;","map":{"version":3,"sources":["/Users/macbook/Desktop/giveawaypremium-client/pages/Components/MyModal/index.js"],"names":["React","Modal","MyModal","Component","constructor","props","modalContent","config","modalWidth","closable","wrapClassName","setState","isShowModal","customClose","state","componentDidMount","render","closeModal"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA;;AACA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAAA;;AAClB,UAAMA,KAAN,CADkB;AAAA;;AAAA,uCAiBR,UAACC,YAAD,EAAeC,MAAM,GAAG;AAAEC,MAAAA,UAAU,EAAE,GAAd;AAAmBC,MAAAA,QAAQ,EAAE,IAA7B;AAAmCC,MAAAA,aAAa,EAAE;AAAlD,KAAxB,EAAmF;AAC7F,MAAA,KAAI,CAACC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAE,IADD;AAEZN,QAAAA,YAFY;AAGZC,QAAAA;AAHY,OAAd;AAKD,KAvBmB;;AAAA,wCAyBP,YAAM;AACjB,MAAA,KAAI,CAACI,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAE,KADD;AAEZN,QAAAA,YAAY,EAAE;AAFF,OAAd;;AAIA,YAAM;AAAEO,QAAAA;AAAF,UAAkB,KAAI,CAACR,KAA7B;AACAQ,MAAAA,WAAW,IAAIA,WAAW,EAA1B;AACD,KAhCmB;;AAElB,SAAKC,KAAL,GAAa;AACXF,MAAAA,WAAW,EAAE,KADF;AAEXN,MAAAA,YAAY,EAAE,IAFH;AAGXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,UAAU,EAAE,GADN;AAENC,QAAAA,QAAQ,EAAE,IAFJ;AAGNC,QAAAA,aAAa,EAAE;AAHT;AAHG,KAAb;AASD;;AAEDK,EAAAA,iBAAiB,GAAI,CACnB;AACD;;AAmBDC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEJ,MAAAA,WAAF;AAAeN,MAAAA,YAAf;AAA6BC,MAAAA;AAA7B,QAAwC,KAAKO,KAAnD;AACA,WACE,MAAC,KAAD;AACE,MAAA,aAAa,EAAEP,MAAM,CAACG,aADxB;AAEE,MAAA,KAAK,EAAEH,MAAM,CAACC,UAFhB;AAGE,MAAA,KAAK,EAAE,IAHT;AAIE,MAAA,MAAM,EAAE,IAJV;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,OAAO,EAAEI,WANX;AAOE,MAAA,IAAI,EAAE,IAPR;AAQE,MAAA,QAAQ,EAAE,KAAKK,UARjB;AASE,MAAA,QAAQ,EAAEV,MAAM,CAACE,QATnB;AAUE,MAAA,YAAY,EAAEF,MAAM,CAACE;AAVvB,OAYGH,YAAY,IAAIA,YAZnB,CADF;AAgBD;;AArDmC;;AAwDtC,eAAeJ,OAAf","sourcesContent":["import React from 'react'\nimport { Modal } from 'antd'\nimport './style.scss'\nclass MyModal extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isShowModal: false,\n      modalContent: null,\n      config: {\n        modalWidth: 480,\n        closable: true,\n        wrapClassName: ''\n      }\n    }\n  }\n\n  componentDidMount () {\n    // code here\n  }\n\n  openModal = (modalContent, config = { modalWidth: 480, closable: true, wrapClassName: '' }) => {\n    this.setState({\n      isShowModal: true,\n      modalContent,\n      config\n    })\n  }\n\n  closeModal = () => {\n    this.setState({\n      isShowModal: false,\n      modalContent: null\n    })\n    const { customClose } = this.props\n    customClose && customClose()\n  }\n\n  render () {\n    const { isShowModal, modalContent, config } = this.state\n    return (\n      <Modal\n        wrapClassName={config.wrapClassName}\n        width={config.modalWidth}\n        title={null}\n        footer={null}\n        centered\n        visible={isShowModal}\n        onOk={null}\n        onCancel={this.closeModal}\n        closable={config.closable}\n        maskClosable={config.closable}\n      >\n        {modalContent && modalContent}\n      </Modal>\n    )\n  }\n}\n\nexport default MyModal\n"]},"metadata":{},"sourceType":"module"}